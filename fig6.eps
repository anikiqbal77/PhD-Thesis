%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig_BSR.pdf
%%Creator: Adobe Acrobat 10.1.10
%%For: mkhodas
%%CreationDate: 8/17/14, 6:25 PM
%%BoundingBox: 0 0 315 397
%%HiResBoundingBox: 0 0 314.2227 396.4637
%%CropBox: 0 0 314.2227 396.4637
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 972 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-08-17T23:24:15Z"
   xmp:CreatorTool="Microsoft PowerPoint"
   xmp:ModifyDate="2014-08-17T18:24:55-05:00"
   xmp:MetadataDate="2014-08-17T18:24:55-05:00"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.6.8 Quartz PDFContext"
   xmpMM:DocumentID="uuid:0a97a204-66ce-f147-82e2-3fadf348015e"
   xmpMM:InstanceID="uuid:0243376f-5024-6d4d-aa50-6ef7c0da8dff">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Maxim Khodas</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -396.464 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 396.464 li
314.223 396.464 li
314.223 0 li
cp
clp
0 540 mo
720 540 li
720 6.10351e-05 li
0 6.10351e-05 li
cp
false sop
0 0 0 0 cmyk
ef
gsave
59.3879 349.526 mo
296.001 349.526 li
296.001 202.651 li
59.3879 202.651 li
cp
clp
59.3879 328.762 mo
296.001 328.762 li
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
1.212 lw
0 lc
0 lj
3.25 ml
[13 10 ] 0 dsh
true sadj
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
59.3879 349.662 mo
296.001 349.662 li
2.424 lw
[] 0 dsh
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
grestore
gsave
59.3879 331.558 mo
61.7306 331.558 li
61.7306 326.089 li
59.3879 326.089 li
cp
clp
.895628 .7673 0 0 cmyk
%ADOBeginSubsetFont: JZRBAA+Mathematica3 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /JZRBAA+Mathematica3 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 1 /SolidCircle putdef/UniqueID 5095645 def/FontBBox {-109 -231 966 869} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-107 -91 505 527 596 612] def/BlueScale 0.0454559 def/StdHW [34] def/StdVW [34] def/StemSnapH [34 66] def/StemSnapV [34 65] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/SolidCircle <1C60D8A8C9B60287CF08F7BF563CAAD6E08EFD6DAA142CC7220408DECF2B61045B377CC2E5343FEE4BB07E6944D948E0191385507B98AE> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSJ+Mathematica3 /JZRBAA+Mathematica3 findfont ct_VMDictPut/RQARSJ+Mathematica3*1 [/.notdef /SolidCircle 254{/.notdef}rp]RQARSJ+Mathematica3 nfRQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)sh57.9838 329.934 mo(\001)shgrestore
gsave
18 389.75 mo
299.125 389.75 li
299.125 202.25 li
18 202.25 li
cp
clp
.895628 .7673 0 0 cmyk
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf60.9965 331.841 mo(\001)sh60.9965 331.798 mo(\001)sh60.9965 331.79 mo(\001)sh60.9965 331.787 mo(\001)sh60.9965 331.784 mo(\001)sh60.9965 331.783 mo(\001)sh60.9965 331.782 mo(\001)sh60.9965 331.781 mo(\001)sh60.9965 331.781 mo(\001)sh60.9965 331.78 mo(\001)sh60.9965 331.78 mo(\001)sh60.9965 331.78 mo(\001)sh60.9965 331.78 mo(\001)sh60.9965 331.78 mo(\001)sh60.9965 331.78 mo(\001)sh60.9965 331.779 mo(\001)sh60.9965 331.779 mo(\001)sh60.9965 331.779 mo(\001)sh60.9965 331.779 mo(\001)sh60.9965 331.778 mo(\001)sh60.9965 331.778 mo(\001)sh60.9965 331.778 mo(\001)sh60.9965 331.778 mo(\001)sh60.9965 331.778 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.777 mo(\001)sh60.9965 331.776 mo(\001)sh60.9965 331.776 mo(\001)sh60.9965 331.776 mo(\001)sh60.9965 331.775 mo(\001)sh60.9965 331.775 mo(\001)sh60.9965 331.774 mo(\001)sh60.9965 331.774 mo(\001)sh60.9965 331.774 mo(\001)sh60.9965 331.773 mo(\001)sh60.9965 331.773 mo(\001)sh60.9965 331.773 mo(\001)sh60.9965 331.772 mo(\001)sh60.9965 331.772 mo(\001)sh60.9965 331.771 mo(\001)sh60.9965 331.77 mo(\001)sh60.9965 331.77 mo(\001)sh60.9965 331.769 mo(\001)sh60.9965 331.728 mo(\001)sh64.0092 333.748 mo(\001)sh64.0092 333.664 mo(\001)sh64.0092 333.646 mo(\001)sh64.0092 333.639 mo(\001)sh64.0092 333.635 mo(\001)sh64.0092 333.632 mo(\001)sh64.0092 333.63 mo(\001)sh64.0092 333.629 mo(\001)sh64.0092 333.628 mo(\001)sh64.0092 333.627 mo(\001)sh64.0092 333.627 mo(\001)sh64.0092 333.627 mo(\001)sh64.0092 333.626 mo(\001)sh64.0092 333.625 mo(\001)sh64.0092 333.625 mo(\001)sh64.0092 333.624 mo(\001)sh64.0092 333.624 mo(\001)sh64.0092 333.624 mo(\001)sh64.0092 333.623 mo(\001)sh64.0092 333.623 mo(\001)sh64.0092 333.623 mo(\001)sh64.0092 333.623 mo(\001)sh64.0092 333.622 mo(\001)sh64.0092 333.622 mo(\001)sh64.0092 333.621 mo(\001)sh64.0092 333.621 mo(\001)sh64.0092 333.62 mo(\001)sh64.0092 333.62 mo(\001)sh64.0092 333.62 mo(\001)sh64.0092 333.62 mo(\001)sh64.0092 333.619 mo(\001)sh64.0092 333.619 mo(\001)sh64.0092 333.618 mo(\001)sh64.0092 333.618 mo(\001)sh64.0092 333.617 mo(\001)sh64.0092 333.616 mo(\001)sh64.0092 333.616 mo(\001)sh64.0092 333.616 mo(\001)sh64.0092 333.615 mo(\001)sh64.0092 333.614 mo(\001)sh64.0092 333.613 mo(\001)sh64.0092 333.612 mo(\001)sh64.0092 333.612 mo(\001)sh64.0092 333.61 mo(\001)sh64.0092 333.609 mo(\001)sh64.0092 333.608 mo(\001)sh64.0092 333.607 mo(\001)sh64.0092 333.605 mo(\001)sh64.0092 333.603 mo(\001)sh64.0092 333.522 mo(\001)sh67.022 335.655 mo(\001)sh67.022 335.529 mo(\001)sh67.022 335.502 mo(\001)sh67.022 335.491 mo(\001)sh67.022 335.485 mo(\001)sh67.022 335.481 mo(\001)sh67.022 335.479 mo(\001)sh67.022 335.477 mo(\001)sh67.022 335.475 mo(\001)sh67.022 335.474 mo(\001)sh67.022 335.473 mo(\001)sh67.022 335.473 mo(\001)sh67.022 335.472 mo(\001)sh67.022 335.471 mo(\001)sh67.022 335.47 mo(\001)sh67.022 335.47 mo(\001)sh67.022 335.47 mo(\001)sh67.022 335.469 mo(\001)sh67.022 335.469 mo(\001)sh67.022 335.468 mo(\001)sh67.022 335.467 mo(\001)sh67.022 335.467 mo(\001)sh67.022 335.466 mo(\001)sh67.022 335.466 mo(\001)sh67.022 335.466 mo(\001)sh67.022 335.465 mo(\001)sh67.022 335.464 mo(\001)sh67.022 335.463 mo(\001)sh67.022 335.463 mo(\001)sh67.022 335.463 mo(\001)sh67.022 335.462 mo(\001)sh67.022 335.461 mo(\001)sh67.022 335.46 mo(\001)sh67.022 335.459 mo(\001)sh67.022 335.459 mo(\001)sh67.022 335.458 mo(\001)sh67.022 335.457 mo(\001)sh67.022 335.456 mo(\001)sh67.022 335.456 mo(\001)sh67.022 335.454 mo(\001)sh67.022 335.453 mo(\001)sh67.022 335.452 mo(\001)sh67.022 335.451 mo(\001)sh67.022 335.449 mo(\001)sh67.022 335.447 mo(\001)sh67.022 335.445 mo(\001)sh67.022 335.443 mo(\001)sh67.022 335.441 mo(\001)sh67.022 335.438 mo(\001)sh67.022 335.316 mo(\001)sh70.0347 337.563 mo(\001)sh70.0347 337.394 mo(\001)sh70.0347 337.359 mo(\001)sh70.0347 337.344 mo(\001)sh70.0347 337.336 mo(\001)sh70.0347 337.331 mo(\001)sh70.0347 337.327 mo(\001)sh70.0347 337.324 mo(\001)sh70.0347 337.323 mo(\001)sh70.0347 337.321 mo(\001)sh70.0347 337.32 mo(\001)sh70.0347 337.319 mo(\001)sh70.0347 337.318 mo(\001)sh70.0347 337.317 mo(\001)sh70.0347 337.316 mo(\001)sh70.0347 337.316 mo(\001)sh70.0347 337.315 mo(\001)sh70.0347 337.314 mo(\001)sh70.0347 337.313 mo(\001)sh70.0347 337.313 mo(\001)sh70.0347 337.312 mo(\001)sh70.0347 337.311 mo(\001)sh70.0347 337.31 mo(\001)sh70.0347 337.31 mo(\001)sh70.0347 337.309 mo(\001)sh70.0347 337.309 mo(\001)sh70.0347 337.308 mo(\001)sh70.0347 337.307 mo(\001)sh70.0347 337.306 mo(\001)sh70.0347 337.306 mo(\001)sh70.0347 337.305 mo(\001)sh70.0347 337.303 mo(\001)sh70.0347 337.302 mo(\001)sh70.0347 337.302 mo(\001)sh70.0347 337.301 mo(\001)sh70.0347 337.299 mo(\001)sh70.0347 337.298 mo(\001)sh70.0347 337.297 mo(\001)sh70.0347 337.295 mo(\001)sh70.0347 337.295 mo(\001)sh70.0347 337.293 mo(\001)sh70.0347 337.291 mo(\001)sh70.0347 337.289 mo(\001)sh70.0347 337.288 mo(\001)sh70.0347 337.285 mo(\001)sh70.0347 337.283 mo(\001)sh70.0347 337.28 mo(\001)sh70.0347 337.277 mo(\001)sh70.0347 337.273 mo(\001)sh70.0347 337.11 mo(\001)sh73.0466 339.47 mo(\001)sh73.0466 339.259 mo(\001)sh73.0466 339.216 mo(\001)sh73.0466 339.197 mo(\001)sh73.0466 339.186 mo(\001)sh73.0466 339.18 mo(\001)sh73.0466 339.176 mo(\001)sh73.0466 339.172 mo(\001)sh73.0466 339.17 mo(\001)sh73.0466 339.168 mo(\001)sh73.0466 339.166 mo(\001)sh73.0466 339.165 mo(\001)sh73.0466 339.164 mo(\001)sh73.0466 339.163 mo(\001)sh73.0466 339.162 mo(\001)sh73.0466 339.161 mo(\001)sh73.0466 339.16 mo(\001)sh73.0466 339.159 mo(\001)sh73.0466 339.158 mo(\001)sh73.0466 339.157 mo(\001)sh73.0466 339.156 mo(\001)sh73.0466 339.156 mo(\001)sh73.0466 339.155 mo(\001)sh73.0466 339.154 mo(\001)sh73.0466 339.153 mo(\001)sh73.0466 339.152 mo(\001)sh73.0466 339.151 mo(\001)sh73.0466 339.15 mo(\001)sh73.0466 339.149 mo(\001)sh73.0466 339.148 mo(\001)sh73.0466 339.147 mo(\001)sh73.0466 339.146 mo(\001)sh73.0466 339.145 mo(\001)sh73.0466 339.144 mo(\001)sh73.0466 339.142 mo(\001)sh73.0466 339.141 mo(\001)sh73.0466 339.139 mo(\001)sh73.0466 339.138 mo(\001)sh73.0466 339.136 mo(\001)sh73.0466 339.134 mo(\001)sh73.0466 339.133 mo(\001)sh73.0466 339.131 mo(\001)sh73.0466 339.128 mo(\001)sh73.0466 339.126 mo(\001)sh73.0466 339.123 mo(\001)sh73.0466 339.12 mo(\001)sh73.0466 339.116 mo(\001)sh73.0466 339.113 mo(\001)sh73.0466 339.108 mo(\001)sh73.0466 338.904 mo(\001)sh76.0593 341.377 mo(\001)sh76.0593 341.124 mo(\001)sh76.0593 341.072 mo(\001)sh76.0593 341.049 mo(\001)sh76.0593 341.037 mo(\001)sh76.0593 341.029 mo(\001)sh76.0593 341.024 mo(\001)sh76.0593 341.02 mo(\001)sh76.0593 341.017 mo(\001)sh76.0593 341.015 mo(\001)sh76.0593 341.013 mo(\001)sh76.0593 341.011 mo(\001)sh76.0593 341.009 mo(\001)sh76.0593 341.009 mo(\001)sh76.0593 341.007 mo(\001)sh76.0593 341.006 mo(\001)sh76.0593 341.005 mo(\001)sh76.0593 341.004 mo(\001)sh76.0593 341.003 mo(\001)sh76.0593 341.002 mo(\001)sh76.0593 341.001 mo(\001)sh76.0593 341 mo(\001)sh76.0593 340.999 mo(\001)sh76.0593 340.998 mo(\001)sh76.0593 340.997 mo(\001)sh76.0593 340.995 mo(\001)sh76.0593 340.995 mo(\001)sh76.0593 340.993 mo(\001)sh76.0593 340.992 mo(\001)sh76.0593 340.991 mo(\001)sh76.0593 340.99 mo(\001)sh76.0593 340.988 mo(\001)sh76.0593 340.987 mo(\001)sh76.0593 340.985 mo(\001)sh76.0593 340.984 mo(\001)sh76.0593 340.982 mo(\001)sh76.0593 340.981 mo(\001)sh76.0593 340.979 mo(\001)sh76.0593 340.977 mo(\001)sh76.0593 340.974 mo(\001)sh76.0593 340.972 mo(\001)sh76.0593 340.97 mo(\001)sh76.0593 340.967 mo(\001)sh76.0593 340.964 mo(\001)sh76.0593 340.961 mo(\001)sh76.0593 340.957 mo(\001)sh76.0593 340.953 mo(\001)sh76.0593 340.948 mo(\001)sh76.0593 340.942 mo(\001)sh76.0593 340.698 mo(\001)sh79.0721 343.285 mo(\001)sh79.0721 342.988 mo(\001)sh79.0721 342.928 mo(\001)sh79.0721 342.902 mo(\001)sh79.0721 342.888 mo(\001)sh79.0721 342.878 mo(\001)sh79.0721 342.872 mo(\001)sh79.0721 342.867 mo(\001)sh79.0721 342.864 mo(\001)sh79.0721 342.862 mo(\001)sh79.0721 342.859 mo(\001)sh79.0721 342.857 mo(\001)sh79.0721 342.856 mo(\001)sh79.0721 342.854 mo(\001)sh79.0721 342.853 mo(\001)sh79.0721 342.852 mo(\001)sh79.0721 342.85 mo(\001)sh79.0721 342.849 mo(\001)sh79.0721 342.848 mo(\001)sh79.0721 342.847 mo(\001)sh79.0721 342.845 mo(\001)sh79.0721 342.845 mo(\001)sh79.0721 342.843 mo(\001)sh79.0721 342.842 mo(\001)sh79.0721 342.841 mo(\001)sh79.0721 342.839 mo(\001)sh79.0721 342.838 mo(\001)sh79.0721 342.837 mo(\001)sh79.0721 342.835 mo(\001)sh79.0721 342.834 mo(\001)sh79.0721 342.832 mo(\001)sh79.0721 342.831 mo(\001)sh79.0721 342.829 mo(\001)sh79.0721 342.827 mo(\001)sh79.0721 342.826 mo(\001)sh79.0721 342.824 mo(\001)sh79.0721 342.822 mo(\001)sh79.0721 342.82 mo(\001)sh79.0721 342.817 mo(\001)sh79.0721 342.815 mo(\001)sh79.0721 342.812 mo(\001)sh79.0721 342.81 mo(\001)sh79.0721 342.806 mo(\001)sh79.0721 342.802 mo(\001)sh79.0721 342.799 mo(\001)sh79.0721 342.795 mo(\001)sh79.0721 342.789 mo(\001)sh79.0721 342.784 mo(\001)sh79.0721 342.777 mo(\001)sh79.0721 342.492 mo(\001)sh82.0848 345.192 mo(\001)sh82.0848 344.854 mo(\001)sh82.0848 344.785 mo(\001)sh82.0848 344.755 mo(\001)sh82.0848 344.738 mo(\001)sh82.0848 344.727 mo(\001)sh82.0848 344.72 mo(\001)sh82.0848 344.716 mo(\001)sh82.0848 344.712 mo(\001)sh82.0848 344.709 mo(\001)sh82.0848 344.706 mo(\001)sh82.0848 344.704 mo(\001)sh82.0848 344.702 mo(\001)sh82.0848 344.7 mo(\001)sh82.0848 344.699 mo(\001)sh82.0848 344.697 mo(\001)sh82.0848 344.695 mo(\001)sh82.0848 344.694 mo(\001)sh82.0848 344.693 mo(\001)sh82.0848 344.692 mo(\001)sh82.0848 344.69 mo(\001)sh82.0848 344.688 mo(\001)sh82.0848 344.688 mo(\001)sh82.0848 344.686 mo(\001)sh82.0848 344.685 mo(\001)sh82.0848 344.683 mo(\001)sh82.0848 344.681 mo(\001)sh82.0848 344.68 mo(\001)sh82.0848 344.678 mo(\001)sh82.0848 344.677 mo(\001)sh82.0848 344.675 mo(\001)sh82.0848 344.674 mo(\001)sh82.0848 344.671 mo(\001)sh82.0848 344.67 mo(\001)sh82.0848 344.667 mo(\001)sh82.0848 344.665 mo(\001)sh82.0848 344.663 mo(\001)sh82.0848 344.66 mo(\001)sh82.0848 344.658 mo(\001)sh82.0848 344.655 mo(\001)sh82.0848 344.652 mo(\001)sh82.0848 344.649 mo(\001)sh82.0848 344.645 mo(\001)sh82.0848 344.641 mo(\001)sh82.0848 344.637 mo(\001)sh82.0848 344.631 mo(\001)sh82.0848 344.626 mo(\001)sh82.0848 344.62 mo(\001)sh82.0848 344.613 mo(\001)sh82.0848 344.286 mo(\001)sh85.0975 347.099 mo(\001)sh85.0975 346.719 mo(\001)sh85.0975 346.641 mo(\001)sh85.0975 346.607 mo(\001)sh85.0975 346.588 mo(\001)sh85.0975 346.577 mo(\001)sh85.0975 346.569 mo(\001)sh85.0975 346.563 mo(\001)sh85.0975 346.559 mo(\001)sh85.0975 346.556 mo(\001)sh85.0975 346.553 mo(\001)sh85.0975 346.55 mo(\001)sh85.0975 346.548 mo(\001)sh85.0975 346.546 mo(\001)sh85.0975 346.544 mo(\001)sh85.0975 346.542 mo(\001)sh85.0975 346.541 mo(\001)sh85.0975 346.539 mo(\001)sh85.0975 346.538 mo(\001)sh85.0975 346.536 mo(\001)sh85.0975 346.535 mo(\001)sh85.0975 346.533 mo(\001)sh85.0975 346.531 mo(\001)sh85.0975 346.53 mo(\001)sh85.0975 346.528 mo(\001)sh85.0975 346.527 mo(\001)sh85.0975 346.525 mo(\001)sh85.0975 346.524 mo(\001)sh85.0975 346.521 mo(\001)sh85.0975 346.52 mo(\001)sh85.0975 346.517 mo(\001)sh85.0975 346.516 mo(\001)sh85.0975 346.513 mo(\001)sh85.0975 346.511 mo(\001)sh85.0975 346.509 mo(\001)sh85.0975 346.506 mo(\001)sh85.0975 346.504 mo(\001)sh85.0975 346.501 mo(\001)sh85.0975 346.498 mo(\001)sh85.0975 346.495 mo(\001)sh85.0975 346.492 mo(\001)sh85.0975 346.488 mo(\001)sh85.0975 346.484 mo(\001)sh85.0975 346.479 mo(\001)sh85.0975 346.474 mo(\001)sh85.0975 346.469 mo(\001)sh85.0975 346.463 mo(\001)sh85.0975 346.456 mo(\001)sh85.0975 346.447 mo(\001)sh85.0975 346.08 mo(\001)sh88.1103 349.006 mo(\001)sh88.1103 348.584 mo(\001)sh88.1103 348.497 mo(\001)sh88.1103 348.46 mo(\001)sh88.1103 348.439 mo(\001)sh88.1103 348.426 mo(\001)sh88.1103 348.417 mo(\001)sh88.1103 348.411 mo(\001)sh88.1103 348.406 mo(\001)sh88.1103 348.402 mo(\001)sh88.1103 348.399 mo(\001)sh88.1103 348.396 mo(\001)sh88.1103 348.394 mo(\001)sh88.1103 348.392 mo(\001)sh88.1103 348.39 mo(\001)sh88.1103 348.388 mo(\001)sh88.1103 348.386 mo(\001)sh88.1103 348.385 mo(\001)sh88.1103 348.383 mo(\001)sh88.1103 348.381 mo(\001)sh88.1103 348.379 mo(\001)sh88.1103 348.378 mo(\001)sh88.1103 348.376 mo(\001)sh88.1103 348.374 mo(\001)sh88.1103 348.372 mo(\001)sh88.1103 348.371 mo(\001)sh88.1103 348.368 mo(\001)sh88.1103 348.367 mo(\001)sh88.1103 348.364 mo(\001)sh88.1103 348.363 mo(\001)sh88.1103 348.36 mo(\001)sh88.1103 348.358 mo(\001)sh88.1103 348.356 mo(\001)sh88.1103 348.353 mo(\001)sh88.1103 348.351 mo(\001)sh88.1103 348.348 mo(\001)sh88.1103 348.345 mo(\001)sh88.1103 348.342 mo(\001)sh88.1103 348.338 mo(\001)sh88.1103 348.335 mo(\001)sh88.1103 348.331 mo(\001)sh88.1103 348.328 mo(\001)sh88.1103 348.323 mo(\001)sh88.1103 348.317 mo(\001)sh88.1103 348.312 mo(\001)sh88.1103 348.306 mo(\001)sh88.1103 348.299 mo(\001)sh88.1103 348.291 mo(\001)sh88.1103 348.282 mo(\001)sh88.1103 347.874 mo(\001)shgrestore
gsave
90.624 349.526 mo
94.5285 349.526 li
94.5285 347.183 li
90.624 347.183 li
cp
clp
.895628 .7673 0 0 cmyk
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf91.123 350.754 mo(\001)shgrestore
gsave
90.624 349.526 mo
94.5285 349.526 li
94.5285 346.401 li
90.624 346.401 li
cp
clp
.895628 .7673 0 0 cmyk
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf91.123 350.448 mo(\001)sh91.123 350.353 mo(\001)sh91.123 350.312 mo(\001)sh91.123 350.289 mo(\001)sh91.123 350.275 mo(\001)sh91.123 350.266 mo(\001)sh91.123 350.259 mo(\001)sh91.123 350.253 mo(\001)sh91.123 350.248 mo(\001)sh91.123 350.245 mo(\001)sh91.123 350.242 mo(\001)sh91.123 350.24 mo(\001)sh91.123 350.237 mo(\001)sh91.123 350.235 mo(\001)sh91.123 350.233 mo(\001)sh91.123 350.231 mo(\001)sh91.123 350.229 mo(\001)sh91.123 350.227 mo(\001)sh91.123 350.226 mo(\001)sh91.123 350.223 mo(\001)sh91.123 350.222 mo(\001)sh91.123 350.22 mo(\001)sh91.123 350.218 mo(\001)sh91.123 350.216 mo(\001)sh91.123 350.214 mo(\001)sh91.123 350.212 mo(\001)sh91.123 350.209 mo(\001)sh91.123 350.208 mo(\001)sh91.123 350.205 mo(\001)sh91.123 350.203 mo(\001)sh91.123 350.2 mo(\001)sh91.123 350.198 mo(\001)sh91.123 350.195 mo(\001)sh91.123 350.192 mo(\001)sh91.123 350.189 mo(\001)sh91.123 350.186 mo(\001)sh91.123 350.183 mo(\001)sh91.123 350.179 mo(\001)sh91.123 350.175 mo(\001)sh91.123 350.171 mo(\001)sh91.123 350.166 mo(\001)sh91.123 350.162 mo(\001)sh91.123 350.156 mo(\001)sh91.123 350.15 mo(\001)sh91.123 350.143 mo(\001)sh91.123 350.135 mo(\001)sh91.123 350.127 mo(\001)sh91.123 350.116 mo(\001)shgrestore
gsave
90.624 349.526 mo
94.5285 349.526 li
94.5285 345.62 li
90.624 345.62 li
cp
clp
.895628 .7673 0 0 cmyk
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf91.123 349.668 mo(\001)shgrestore
.895628 .7673 0 0 cmyk
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf94.1357 348.847 mo(\001)sh94.1357 349.354 mo(\001)shgsave
92.9667 349.526 mo
97.6521 349.526 li
97.6521 345.62 li
92.9667 345.62 li
cp
clp
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf94.1357 349.458 mo(\001)sh94.1357 349.503 mo(\001)sh94.1357 349.528 mo(\001)sh94.1357 349.544 mo(\001)sh94.1357 349.554 mo(\001)sh94.1357 349.562 mo(\001)sh94.1357 349.567 mo(\001)sh94.1357 349.572 mo(\001)sh94.1357 349.576 mo(\001)sh94.1357 349.579 mo(\001)sh94.1357 349.582 mo(\001)sh94.1357 349.584 mo(\001)sh94.1357 349.587 mo(\001)sh94.1357 349.589 mo(\001)sh94.1357 349.591 mo(\001)sh94.1357 349.594 mo(\001)sh94.1357 349.595 mo(\001)sh94.1357 349.598 mo(\001)sh94.1357 349.599 mo(\001)sh94.1357 349.602 mo(\001)sh94.1357 349.604 mo(\001)sh94.1357 349.605 mo(\001)sh94.1357 349.608 mo(\001)sh94.1357 349.61 mo(\001)sh94.1357 349.612 mo(\001)sh94.1357 349.615 mo(\001)sh94.1357 349.617 mo(\001)sh94.1357 349.62 mo(\001)sh94.1357 349.622 mo(\001)sh94.1357 349.625 mo(\001)sh94.1357 349.628 mo(\001)sh94.1357 349.63 mo(\001)sh94.1357 349.634 mo(\001)sh94.1357 349.637 mo(\001)sh94.1357 349.641 mo(\001)sh94.1357 349.645 mo(\001)sh94.1357 349.648 mo(\001)sh94.1357 349.652 mo(\001)sh94.1357 349.657 mo(\001)sh94.1357 349.662 mo(\001)sh94.1357 349.667 mo(\001)sh94.1357 349.673 mo(\001)sh94.1357 349.68 mo(\001)sh94.1357 349.687 mo(\001)sh94.1357 349.696 mo(\001)sh94.1357 349.705 mo(\001)sh94.1357 349.716 mo(\001)shgrestore
gsave
92.9667 349.526 mo
97.6521 349.526 li
97.6521 346.401 li
92.9667 346.401 li
cp
clp
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf94.1357 350.205 mo(\001)shgrestore
gsave
18 389.75 mo
299.125 389.75 li
299.125 202.25 li
18 202.25 li
cp
clp
RQARSJ+Mathematica3*1 [3.90451 0 0 -3.90625 0 0 ]msf97.1484 346.94 mo(\001)sh97.1484 347.489 mo(\001)sh97.1484 347.602 mo(\001)sh97.1484 347.651 mo(\001)sh97.1484 347.677 mo(\001)sh97.1484 347.695 mo(\001)sh97.1484 347.705 mo(\001)sh97.1484 347.714 mo(\001)sh97.1484 347.72 mo(\001)sh97.1484 347.725 mo(\001)sh97.1484 347.73 mo(\001)sh97.1484 347.733 mo(\001)sh97.1484 347.736 mo(\001)sh97.1484 347.739 mo(\001)sh97.1484 347.741 mo(\001)sh97.1484 347.744 mo(\001)sh97.1484 347.746 mo(\001)sh97.1484 347.748 mo(\001)sh97.1484 347.751 mo(\001)sh97.1484 347.753 mo(\001)sh97.1484 347.755 mo(\001)sh97.1484 347.757 mo(\001)sh97.1484 347.759 mo(\001)sh97.1484 347.762 mo(\001)sh97.1484 347.764 mo(\001)sh97.1484 347.766 mo(\001)sh97.1484 347.769 mo(\001)sh97.1484 347.772 mo(\001)sh97.1484 347.774 mo(\001)sh97.1484 347.777 mo(\001)sh97.1484 347.78 mo(\001)sh97.1484 347.783 mo(\001)sh97.1484 347.786 mo(\001)sh97.1484 347.789 mo(\001)sh97.1484 347.792 mo(\001)sh97.1484 347.795 mo(\001)sh97.1484 347.799 mo(\001)sh97.1484 347.803 mo(\001)sh97.1484 347.808 mo(\001)sh97.1484 347.812 mo(\001)sh97.1484 347.817 mo(\001)sh97.1484 347.823 mo(\001)sh97.1484 347.829 mo(\001)sh97.1484 347.835 mo(\001)sh97.1484 347.842 mo(\001)sh97.1484 347.85 mo(\001)sh97.1484 347.859 mo(\001)sh97.1484 347.87 mo(\001)sh97.1484 347.881 mo(\001)sh97.1484 348.412 mo(\001)sh100.161 345.033 mo(\001)sh100.161 345.624 mo(\001)sh100.161 345.745 mo(\001)sh100.161 345.798 mo(\001)sh100.161 345.827 mo(\001)sh100.161 345.845 mo(\001)sh100.161 345.857 mo(\001)sh100.161 345.866 mo(\001)sh100.161 345.873 mo(\001)sh100.161 345.878 mo(\001)sh100.161 345.883 mo(\001)sh100.161 345.887 mo(\001)sh100.161 345.89 mo(\001)sh100.161 345.893 mo(\001)sh100.161 345.896 mo(\001)sh100.161 345.898 mo(\001)sh100.161 345.901 mo(\001)sh100.161 345.903 mo(\001)sh100.161 345.905 mo(\001)sh100.161 345.908 mo(\001)sh100.161 345.91 mo(\001)sh100.161 345.913 mo(\001)sh100.161 345.916 mo(\001)sh100.161 345.918 mo(\001)sh100.161 345.92 mo(\001)sh100.161 345.923 mo(\001)sh100.161 345.926 mo(\001)sh100.161 345.928 mo(\001)sh100.161 345.931 mo(\001)sh100.161 345.934 mo(\001)sh100.161 345.937 mo(\001)sh100.161 345.94 mo(\001)sh100.161 345.944 mo(\001)sh100.161 345.947 mo(\001)sh100.161 345.951 mo(\001)sh100.161 345.955 mo(\001)sh100.161 345.959 mo(\001)sh100.161 345.962 mo(\001)sh100.161 345.967 mo(\001)sh100.161 345.972 mo(\001)sh100.161 345.977 mo(\001)sh100.161 345.984 mo(\001)sh100.161 345.99 mo(\001)sh100.161 345.997 mo(\001)sh100.161 346.005 mo(\001)sh100.161 346.013 mo(\001)sh100.161 346.023 mo(\001)sh100.161 346.034 mo(\001)sh100.161 346.047 mo(\001)sh100.161 346.618 mo(\001)sh103.174 343.125 mo(\001)sh103.174 343.759 mo(\001)sh103.174 343.889 mo(\001)sh103.174 343.945 mo(\001)sh103.174 343.977 mo(\001)sh103.174 343.996 mo(\001)sh103.174 344.009 mo(\001)sh103.174 344.019 mo(\001)sh103.174 344.026 mo(\001)sh103.174 344.032 mo(\001)sh103.174 344.037 mo(\001)sh103.174 344.041 mo(\001)sh103.174 344.044 mo(\001)sh103.174 344.047 mo(\001)sh103.174 344.05 mo(\001)sh103.174 344.053 mo(\001)sh103.174 344.055 mo(\001)sh103.174 344.059 mo(\001)sh103.174 344.061 mo(\001)sh103.174 344.063 mo(\001)sh103.174 344.066 mo(\001)sh103.174 344.069 mo(\001)sh103.174 344.071 mo(\001)sh103.174 344.073 mo(\001)sh103.174 344.077 mo(\001)sh103.174 344.079 mo(\001)sh103.174 344.082 mo(\001)sh103.174 344.085 mo(\001)sh103.174 344.088 mo(\001)sh103.174 344.091 mo(\001)sh103.174 344.095 mo(\001)sh103.174 344.098 mo(\001)sh103.174 344.102 mo(\001)sh103.174 344.105 mo(\001)sh103.174 344.109 mo(\001)sh103.174 344.113 mo(\001)sh103.174 344.117 mo(\001)sh103.174 344.122 mo(\001)sh103.174 344.127 mo(\001)sh103.174 344.132 mo(\001)sh103.174 344.137 mo(\001)sh103.174 344.144 mo(\001)sh103.174 344.151 mo(\001)sh103.174 344.159 mo(\001)sh103.174 344.166 mo(\001)sh103.174 344.176 mo(\001)sh103.174 344.186 mo(\001)sh103.174 344.198 mo(\001)sh103.174 344.212 mo(\001)sh103.174 344.823 mo(\001)sh106.187 341.218 mo(\001)sh106.187 341.895 mo(\001)sh106.187 342.033 mo(\001)sh106.187 342.093 mo(\001)sh106.187 342.126 mo(\001)sh106.187 342.147 mo(\001)sh106.187 342.161 mo(\001)sh106.187 342.171 mo(\001)sh106.187 342.179 mo(\001)sh106.187 342.185 mo(\001)sh106.187 342.19 mo(\001)sh106.187 342.195 mo(\001)sh106.187 342.198 mo(\001)sh106.187 342.202 mo(\001)sh106.187 342.205 mo(\001)sh106.187 342.208 mo(\001)sh106.187 342.21 mo(\001)sh106.187 342.213 mo(\001)sh106.187 342.216 mo(\001)sh106.187 342.219 mo(\001)sh106.187 342.222 mo(\001)sh106.187 342.224 mo(\001)sh106.187 342.227 mo(\001)sh106.187 342.23 mo(\001)sh106.187 342.233 mo(\001)sh106.187 342.236 mo(\001)sh106.187 342.238 mo(\001)sh106.187 342.241 mo(\001)sh106.187 342.245 mo(\001)sh106.187 342.248 mo(\001)sh106.187 342.252 mo(\001)sh106.187 342.255 mo(\001)sh106.187 342.259 mo(\001)sh106.187 342.263 mo(\001)sh106.187 342.267 mo(\001)sh106.187 342.272 mo(\001)sh106.187 342.276 mo(\001)sh106.187 342.281 mo(\001)sh106.187 342.287 mo(\001)sh106.187 342.292 mo(\001)sh106.187 342.298 mo(\001)sh106.187 342.305 mo(\001)sh106.187 342.312 mo(\001)sh106.187 342.32 mo(\001)sh106.187 342.329 mo(\001)sh106.187 342.338 mo(\001)sh106.187 342.35 mo(\001)sh106.187 342.362 mo(\001)sh106.187 342.377 mo(\001)sh106.187 343.03 mo(\001)sh109.199 339.311 mo(\001)sh109.199 340.03 mo(\001)sh109.199 340.177 mo(\001)sh109.199 340.241 mo(\001)sh109.199 340.275 mo(\001)sh109.199 340.298 mo(\001)sh109.199 340.313 mo(\001)sh109.199 340.323 mo(\001)sh109.199 340.331 mo(\001)sh109.199 340.338 mo(\001)sh109.199 340.344 mo(\001)sh109.199 340.348 mo(\001)sh109.199 340.352 mo(\001)sh109.199 340.355 mo(\001)sh109.199 340.359 mo(\001)sh109.199 340.362 mo(\001)sh109.199 340.366 mo(\001)sh109.199 340.368 mo(\001)sh109.199 340.371 mo(\001)sh109.199 340.374 mo(\001)sh109.199 340.377 mo(\001)sh109.199 340.38 mo(\001)sh109.199 340.383 mo(\001)sh109.199 340.386 mo(\001)sh109.199 340.389 mo(\001)sh109.199 340.392 mo(\001)sh109.199 340.395 mo(\001)sh109.199 340.398 mo(\001)sh109.199 340.402 mo(\001)sh109.199 340.405 mo(\001)sh109.199 340.409 mo(\001)sh109.199 340.413 mo(\001)sh109.199 340.417 mo(\001)sh109.199 340.421 mo(\001)sh109.199 340.426 mo(\001)sh109.199 340.43 mo(\001)sh109.199 340.435 mo(\001)sh109.199 340.441 mo(\001)sh109.199 340.446 mo(\001)sh109.199 340.452 mo(\001)sh109.199 340.459 mo(\001)sh109.199 340.466 mo(\001)sh109.199 340.473 mo(\001)sh109.199 340.481 mo(\001)sh109.199 340.491 mo(\001)sh109.199 340.502 mo(\001)sh109.199 340.513 mo(\001)sh109.199 340.527 mo(\001)sh109.199 340.542 mo(\001)sh109.199 341.236 mo(\001)sh112.211 337.403 mo(\001)sh112.211 338.165 mo(\001)sh112.211 338.32 mo(\001)sh112.211 338.388 mo(\001)sh112.211 338.425 mo(\001)sh112.211 338.448 mo(\001)sh112.211 338.464 mo(\001)sh112.211 338.476 mo(\001)sh112.211 338.484 mo(\001)sh112.211 338.491 mo(\001)sh112.211 338.497 mo(\001)sh112.211 338.502 mo(\001)sh112.211 338.506 mo(\001)sh112.211 338.51 mo(\001)sh112.211 338.513 mo(\001)sh112.211 338.517 mo(\001)sh112.211 338.52 mo(\001)sh112.211 338.523 mo(\001)sh112.211 338.527 mo(\001)sh112.211 338.53 mo(\001)sh112.211 338.533 mo(\001)sh112.211 338.535 mo(\001)sh112.211 338.538 mo(\001)sh112.211 338.542 mo(\001)sh112.211 338.545 mo(\001)sh112.211 338.548 mo(\001)sh112.211 338.552 mo(\001)sh112.211 338.555 mo(\001)sh112.211 338.559 mo(\001)sh112.211 338.562 mo(\001)sh112.211 338.566 mo(\001)sh112.211 338.57 mo(\001)sh112.211 338.575 mo(\001)sh112.211 338.579 mo(\001)sh112.211 338.584 mo(\001)sh112.211 338.589 mo(\001)sh112.211 338.594 mo(\001)sh112.211 338.599 mo(\001)sh112.211 338.605 mo(\001)sh112.211 338.612 mo(\001)sh112.211 338.619 mo(\001)sh112.211 338.626 mo(\001)sh112.211 338.634 mo(\001)sh112.211 338.643 mo(\001)sh112.211 338.653 mo(\001)sh112.211 338.664 mo(\001)sh112.211 338.677 mo(\001)sh112.211 338.691 mo(\001)sh112.211 338.708 mo(\001)sh112.211 339.441 mo(\001)sh115.224 335.496 mo(\001)sh115.224 336.299 mo(\001)sh115.224 336.464 mo(\001)sh115.224 336.535 mo(\001)sh115.224 336.574 mo(\001)sh115.224 336.599 mo(\001)sh115.224 336.616 mo(\001)sh115.224 336.628 mo(\001)sh115.224 336.637 mo(\001)sh115.224 336.645 mo(\001)sh115.224 336.651 mo(\001)sh115.224 336.655 mo(\001)sh115.224 336.66 mo(\001)sh115.224 336.664 mo(\001)sh115.224 336.668 mo(\001)sh115.224 336.671 mo(\001)sh115.224 336.675 mo(\001)sh115.224 336.678 mo(\001)sh115.224 336.681 mo(\001)sh115.224 336.684 mo(\001)sh115.224 336.688 mo(\001)sh115.224 336.691 mo(\001)sh115.224 336.694 mo(\001)sh115.224 336.698 mo(\001)sh115.224 336.702 mo(\001)sh115.224 336.705 mo(\001)sh115.224 336.709 mo(\001)sh115.224 336.712 mo(\001)sh115.224 336.716 mo(\001)sh115.224 336.719 mo(\001)sh115.224 336.723 mo(\001)sh115.224 336.728 mo(\001)sh115.224 336.733 mo(\001)sh115.224 336.737 mo(\001)sh115.224 336.742 mo(\001)sh115.224 336.748 mo(\001)sh115.224 336.753 mo(\001)sh115.224 336.759 mo(\001)sh115.224 336.765 mo(\001)sh115.224 336.772 mo(\001)sh115.224 336.779 mo(\001)sh115.224 336.787 mo(\001)sh115.224 336.795 mo(\001)sh115.224 336.805 mo(\001)sh115.224 336.816 mo(\001)sh115.224 336.827 mo(\001)sh115.224 336.841 mo(\001)sh115.224 336.855 mo(\001)sh115.224 336.873 mo(\001)sh115.224 337.648 mo(\001)sh118.237 333.589 mo(\001)sh118.237 334.434 mo(\001)sh118.237 334.608 mo(\001)sh118.237 334.683 mo(\001)sh118.237 334.724 mo(\001)sh118.237 334.75 mo(\001)sh118.237 334.767 mo(\001)sh118.237 334.78 mo(\001)sh118.237 334.79 mo(\001)sh118.237 334.798 mo(\001)sh118.237 334.804 mo(\001)sh118.237 334.809 mo(\001)sh118.237 334.814 mo(\001)sh118.237 334.819 mo(\001)sh118.237 334.823 mo(\001)sh118.237 334.826 mo(\001)sh118.237 334.83 mo(\001)sh118.237 334.833 mo(\001)sh118.237 334.837 mo(\001)sh118.237 334.84 mo(\001)sh118.237 334.844 mo(\001)sh118.237 334.847 mo(\001)sh118.237 334.85 mo(\001)sh118.237 334.854 mo(\001)sh118.237 334.857 mo(\001)sh118.237 334.861 mo(\001)sh118.237 334.865 mo(\001)sh118.237 334.869 mo(\001)sh118.237 334.873 mo(\001)sh118.237 334.876 mo(\001)sh118.237 334.881 mo(\001)sh118.237 334.886 mo(\001)sh118.237 334.891 mo(\001)sh118.237 334.895 mo(\001)sh118.237 334.901 mo(\001)sh118.237 334.906 mo(\001)sh118.237 334.912 mo(\001)sh118.237 334.918 mo(\001)sh118.237 334.924 mo(\001)sh118.237 334.931 mo(\001)sh118.237 334.939 mo(\001)sh118.237 334.948 mo(\001)sh118.237 334.956 mo(\001)sh118.237 334.966 mo(\001)sh118.237 334.977 mo(\001)sh118.237 334.99 mo(\001)sh118.237 335.004 mo(\001)sh118.237 335.019 mo(\001)sh118.237 335.038 mo(\001)sh118.237 335.854 mo(\001)sh121.249 331.682 mo(\001)sh121.249 332.569 mo(\001)sh121.249 332.751 mo(\001)sh121.249 332.83 mo(\001)sh121.249 332.873 mo(\001)sh121.249 332.901 mo(\001)sh121.249 332.919 mo(\001)sh121.249 332.933 mo(\001)sh121.249 332.943 mo(\001)sh121.249 332.951 mo(\001)sh121.249 332.958 mo(\001)sh121.249 332.963 mo(\001)sh121.249 332.968 mo(\001)sh121.249 332.973 mo(\001)sh121.249 332.976 mo(\001)sh121.249 332.98 mo(\001)sh121.249 332.984 mo(\001)sh121.249 332.988 mo(\001)sh121.249 332.991 mo(\001)sh121.249 332.995 mo(\001)sh121.249 332.999 mo(\001)sh121.249 333.002 mo(\001)sh121.249 333.006 mo(\001)sh121.249 333.01 mo(\001)sh121.249 333.013 mo(\001)sh121.249 333.017 mo(\001)sh121.249 333.021 mo(\001)sh121.249 333.026 mo(\001)sh121.249 333.03 mo(\001)sh121.249 333.034 mo(\001)sh121.249 333.038 mo(\001)sh121.249 333.043 mo(\001)sh121.249 333.048 mo(\001)sh121.249 333.053 mo(\001)sh121.249 333.059 mo(\001)sh121.249 333.065 mo(\001)sh121.249 333.07 mo(\001)sh121.249 333.077 mo(\001)sh121.249 333.083 mo(\001)sh121.249 333.091 mo(\001)sh121.249 333.099 mo(\001)sh121.249 333.108 mo(\001)sh121.249 333.117 mo(\001)sh121.249 333.128 mo(\001)sh121.249 333.14 mo(\001)sh121.249 333.152 mo(\001)sh121.249 333.167 mo(\001)sh121.249 333.184 mo(\001)sh121.249 333.203 mo(\001)sh121.249 334.059 mo(\001)sh124.262 329.774 mo(\001)sh124.262 330.705 mo(\001)sh124.262 330.895 mo(\001)sh124.262 330.977 mo(\001)sh124.262 331.023 mo(\001)sh124.262 331.051 mo(\001)sh124.262 331.071 mo(\001)sh124.262 331.085 mo(\001)sh124.262 331.095 mo(\001)sh124.262 331.104 mo(\001)sh124.262 331.111 mo(\001)sh124.262 331.117 mo(\001)sh124.262 331.122 mo(\001)sh124.262 331.126 mo(\001)sh124.262 331.131 mo(\001)sh124.262 331.135 mo(\001)sh124.262 331.139 mo(\001)sh124.262 331.143 mo(\001)sh124.262 331.147 mo(\001)sh124.262 331.151 mo(\001)sh124.262 331.155 mo(\001)sh124.262 331.158 mo(\001)sh124.262 331.162 mo(\001)sh124.262 331.166 mo(\001)sh124.262 331.169 mo(\001)sh124.262 331.173 mo(\001)sh124.262 331.178 mo(\001)sh124.262 331.182 mo(\001)sh124.262 331.187 mo(\001)sh124.262 331.191 mo(\001)sh124.262 331.196 mo(\001)sh124.262 331.201 mo(\001)sh124.262 331.206 mo(\001)sh124.262 331.212 mo(\001)sh124.262 331.217 mo(\001)sh124.262 331.223 mo(\001)sh124.262 331.23 mo(\001)sh124.262 331.236 mo(\001)sh124.262 331.244 mo(\001)sh124.262 331.251 mo(\001)sh124.262 331.259 mo(\001)sh124.262 331.269 mo(\001)sh124.262 331.279 mo(\001)sh124.262 331.29 mo(\001)sh124.262 331.301 mo(\001)sh124.262 331.316 mo(\001)sh124.262 331.33 mo(\001)sh124.262 331.348 mo(\001)sh124.262 331.369 mo(\001)sh124.262 332.266 mo(\001)sh127.275 327.867 mo(\001)sh127.275 328.84 mo(\001)sh127.275 329.039 mo(\001)sh127.275 329.125 mo(\001)sh127.275 329.173 mo(\001)sh127.275 329.202 mo(\001)sh127.275 329.223 mo(\001)sh127.275 329.237 mo(\001)sh127.275 329.248 mo(\001)sh127.275 329.257 mo(\001)sh127.275 329.265 mo(\001)sh127.275 329.27 mo(\001)sh127.275 329.276 mo(\001)sh127.275 329.281 mo(\001)sh127.275 329.286 mo(\001)sh127.275 329.29 mo(\001)sh127.275 329.294 mo(\001)sh127.275 329.298 mo(\001)sh127.275 329.302 mo(\001)sh127.275 329.306 mo(\001)sh127.275 329.31 mo(\001)sh127.275 329.314 mo(\001)sh127.275 329.318 mo(\001)sh127.275 329.322 mo(\001)sh127.275 329.326 mo(\001)sh127.275 329.33 mo(\001)sh127.275 329.334 mo(\001)sh127.275 329.339 mo(\001)sh127.275 329.344 mo(\001)sh127.275 329.348 mo(\001)sh127.275 329.353 mo(\001)sh127.275 329.358 mo(\001)sh127.275 329.364 mo(\001)sh127.275 329.369 mo(\001)sh127.275 329.376 mo(\001)sh127.275 329.382 mo(\001)sh127.275 329.388 mo(\001)sh127.275 329.395 mo(\001)sh127.275 329.403 mo(\001)sh127.275 329.411 mo(\001)sh127.275 329.419 mo(\001)sh127.275 329.43 mo(\001)sh127.275 329.44 mo(\001)sh127.275 329.451 mo(\001)sh127.275 329.464 mo(\001)sh127.275 329.478 mo(\001)sh127.275 329.494 mo(\001)sh127.275 329.512 mo(\001)sh127.275 329.533 mo(\001)sh127.275 330.472 mo(\001)sh130.288 325.96 mo(\001)sh130.288 326.975 mo(\001)sh130.288 327.183 mo(\001)sh130.288 327.273 mo(\001)sh130.288 327.322 mo(\001)sh130.288 327.353 mo(\001)sh130.288 327.374 mo(\001)sh130.288 327.39 mo(\001)sh130.288 327.401 mo(\001)sh130.288 327.41 mo(\001)sh130.288 327.418 mo(\001)sh130.288 327.424 mo(\001)sh130.288 327.43 mo(\001)sh130.288 327.435 mo(\001)sh130.288 327.44 mo(\001)sh130.288 327.444 mo(\001)sh130.288 327.449 mo(\001)sh130.288 327.453 mo(\001)sh130.288 327.457 mo(\001)sh130.288 327.461 mo(\001)sh130.288 327.466 mo(\001)sh130.288 327.469 mo(\001)sh130.288 327.473 mo(\001)sh130.288 327.478 mo(\001)sh130.288 327.482 mo(\001)sh130.288 327.487 mo(\001)sh130.288 327.491 mo(\001)sh130.288 327.495 mo(\001)sh130.288 327.501 mo(\001)sh130.288 327.505 mo(\001)sh130.288 327.511 mo(\001)sh130.288 327.516 mo(\001)sh130.288 327.522 mo(\001)sh130.288 327.527 mo(\001)sh130.288 327.533 mo(\001)sh130.288 327.54 mo(\001)sh130.288 327.548 mo(\001)sh130.288 327.555 mo(\001)sh130.288 327.562 mo(\001)sh130.288 327.571 mo(\001)sh130.288 327.58 mo(\001)sh130.288 327.59 mo(\001)sh130.288 327.601 mo(\001)sh130.288 327.613 mo(\001)sh130.288 327.626 mo(\001)sh130.288 327.641 mo(\001)sh130.288 327.658 mo(\001)sh130.288 327.676 mo(\001)sh130.288 327.698 mo(\001)sh130.288 328.678 mo(\001)sh133.3 324.052 mo(\001)sh133.3 325.109 mo(\001)sh133.3 325.326 mo(\001)sh133.3 325.419 mo(\001)sh133.3 325.471 mo(\001)sh133.3 325.504 mo(\001)sh133.3 325.526 mo(\001)sh133.3 325.541 mo(\001)sh133.3 325.554 mo(\001)sh133.3 325.563 mo(\001)sh133.3 325.571 mo(\001)sh133.3 325.578 mo(\001)sh133.3 325.584 mo(\001)sh133.3 325.59 mo(\001)sh133.3 325.594 mo(\001)sh133.3 325.599 mo(\001)sh133.3 325.604 mo(\001)sh133.3 325.608 mo(\001)sh133.3 325.612 mo(\001)sh133.3 325.616 mo(\001)sh133.3 325.621 mo(\001)sh133.3 325.625 mo(\001)sh133.3 325.63 mo(\001)sh133.3 325.633 mo(\001)sh133.3 325.638 mo(\001)sh133.3 325.643 mo(\001)sh133.3 325.648 mo(\001)sh133.3 325.652 mo(\001)sh133.3 325.657 mo(\001)sh133.3 325.662 mo(\001)sh133.3 325.668 mo(\001)sh133.3 325.673 mo(\001)sh133.3 325.68 mo(\001)sh133.3 325.686 mo(\001)sh133.3 325.692 mo(\001)sh133.3 325.699 mo(\001)sh133.3 325.706 mo(\001)sh133.3 325.714 mo(\001)sh133.3 325.722 mo(\001)sh133.3 325.731 mo(\001)sh133.3 325.741 mo(\001)sh133.3 325.751 mo(\001)sh133.3 325.762 mo(\001)sh133.3 325.774 mo(\001)sh133.3 325.788 mo(\001)sh133.3 325.804 mo(\001)sh133.3 325.821 mo(\001)sh133.3 325.841 mo(\001)sh133.3 325.864 mo(\001)sh133.3 326.883 mo(\001)sh136.313 322.145 mo(\001)sh136.313 323.244 mo(\001)sh136.313 323.469 mo(\001)sh136.313 323.567 mo(\001)sh136.313 323.621 mo(\001)sh136.313 323.655 mo(\001)sh136.313 323.677 mo(\001)sh136.313 323.694 mo(\001)sh136.313 323.707 mo(\001)sh136.313 323.716 mo(\001)sh136.313 323.725 mo(\001)sh136.313 323.732 mo(\001)sh136.313 323.738 mo(\001)sh136.313 323.744 mo(\001)sh136.313 323.749 mo(\001)sh136.313 323.754 mo(\001)sh136.313 323.758 mo(\001)sh136.313 323.763 mo(\001)sh136.313 323.767 mo(\001)sh136.313 323.772 mo(\001)sh136.313 323.776 mo(\001)sh136.313 323.78 mo(\001)sh136.313 323.785 mo(\001)sh136.313 323.79 mo(\001)sh136.313 323.794 mo(\001)sh136.313 323.799 mo(\001)sh136.313 323.804 mo(\001)sh136.313 323.809 mo(\001)sh136.313 323.814 mo(\001)sh136.313 323.819 mo(\001)sh136.313 323.825 mo(\001)sh136.313 323.831 mo(\001)sh136.313 323.837 mo(\001)sh136.313 323.844 mo(\001)sh136.313 323.851 mo(\001)sh136.313 323.858 mo(\001)sh136.313 323.865 mo(\001)sh136.313 323.873 mo(\001)sh136.313 323.881 mo(\001)sh136.313 323.891 mo(\001)sh136.313 323.901 mo(\001)sh136.313 323.912 mo(\001)sh136.313 323.923 mo(\001)sh136.313 323.936 mo(\001)sh136.313 323.951 mo(\001)sh136.313 323.966 mo(\001)sh136.313 323.985 mo(\001)sh136.313 324.005 mo(\001)sh136.313 324.029 mo(\001)sh136.313 325.09 mo(\001)sh139.326 320.238 mo(\001)sh139.326 321.38 mo(\001)sh139.326 321.613 mo(\001)sh139.326 321.715 mo(\001)sh139.326 321.77 mo(\001)sh139.326 321.805 mo(\001)sh139.326 321.829 mo(\001)sh139.326 321.846 mo(\001)sh139.326 321.859 mo(\001)sh139.326 321.87 mo(\001)sh139.326 321.878 mo(\001)sh139.326 321.886 mo(\001)sh139.326 321.892 mo(\001)sh139.326 321.898 mo(\001)sh139.326 321.903 mo(\001)sh139.326 321.908 mo(\001)sh139.326 321.913 mo(\001)sh139.326 321.918 mo(\001)sh139.326 321.923 mo(\001)sh139.326 321.927 mo(\001)sh139.326 321.932 mo(\001)sh139.326 321.937 mo(\001)sh139.326 321.941 mo(\001)sh139.326 321.946 mo(\001)sh139.326 321.951 mo(\001)sh139.326 321.955 mo(\001)sh139.326 321.961 mo(\001)sh139.326 321.966 mo(\001)sh139.326 321.971 mo(\001)sh139.326 321.976 mo(\001)sh139.326 321.983 mo(\001)sh139.326 321.989 mo(\001)sh139.326 321.995 mo(\001)sh139.326 322.001 mo(\001)sh139.326 322.008 mo(\001)sh139.326 322.016 mo(\001)sh139.326 322.024 mo(\001)sh139.326 322.032 mo(\001)sh139.326 322.041 mo(\001)sh139.326 322.051 mo(\001)sh139.326 322.061 mo(\001)sh139.326 322.072 mo(\001)sh139.326 322.084 mo(\001)sh139.326 322.098 mo(\001)sh139.326 322.112 mo(\001)sh139.326 322.13 mo(\001)sh139.326 322.148 mo(\001)sh139.326 322.169 mo(\001)sh139.326 322.194 mo(\001)sh139.326 323.296 mo(\001)sh142.338 318.331 mo(\001)sh142.338 319.515 mo(\001)sh142.338 319.757 mo(\001)sh142.338 319.862 mo(\001)sh142.338 319.919 mo(\001)sh142.338 319.956 mo(\001)sh142.338 319.98 mo(\001)sh142.338 319.998 mo(\001)sh142.338 320.012 mo(\001)sh142.338 320.023 mo(\001)sh142.338 320.032 mo(\001)sh142.338 320.04 mo(\001)sh142.338 320.046 mo(\001)sh142.338 320.052 mo(\001)sh142.338 320.058 mo(\001)sh142.338 320.063 mo(\001)sh142.338 320.068 mo(\001)sh142.338 320.073 mo(\001)sh142.338 320.077 mo(\001)sh142.338 320.083 mo(\001)sh142.338 320.087 mo(\001)sh142.338 320.092 mo(\001)sh142.338 320.097 mo(\001)sh142.338 320.101 mo(\001)sh142.338 320.107 mo(\001)sh142.338 320.112 mo(\001)sh142.338 320.117 mo(\001)sh142.338 320.123 mo(\001)sh142.338 320.128 mo(\001)sh142.338 320.134 mo(\001)sh142.338 320.14 mo(\001)sh142.338 320.146 mo(\001)sh142.338 320.153 mo(\001)sh142.338 320.16 mo(\001)sh142.338 320.167 mo(\001)sh142.338 320.175 mo(\001)sh142.338 320.183 mo(\001)sh142.338 320.191 mo(\001)sh142.338 320.201 mo(\001)sh142.338 320.211 mo(\001)sh142.338 320.221 mo(\001)sh142.338 320.233 mo(\001)sh142.338 320.245 mo(\001)sh142.338 320.259 mo(\001)sh142.338 320.275 mo(\001)sh142.338 320.292 mo(\001)sh142.338 320.312 mo(\001)sh142.338 320.334 mo(\001)sh142.338 320.359 mo(\001)sh142.338 321.501 mo(\001)sh145.35 316.423 mo(\001)sh145.35 317.65 mo(\001)sh145.35 317.901 mo(\001)sh145.35 318.009 mo(\001)sh145.35 318.069 mo(\001)sh145.35 318.107 mo(\001)sh145.35 318.133 mo(\001)sh145.35 318.151 mo(\001)sh145.35 318.165 mo(\001)sh145.35 318.176 mo(\001)sh145.35 318.185 mo(\001)sh145.35 318.193 mo(\001)sh145.35 318.2 mo(\001)sh145.35 318.206 mo(\001)sh145.35 318.212 mo(\001)sh145.35 318.218 mo(\001)sh145.35 318.223 mo(\001)sh145.35 318.228 mo(\001)sh145.35 318.233 mo(\001)sh145.35 318.237 mo(\001)sh145.35 318.243 mo(\001)sh145.35 318.248 mo(\001)sh145.35 318.252 mo(\001)sh145.35 318.258 mo(\001)sh145.35 318.263 mo(\001)sh145.35 318.268 mo(\001)sh145.35 318.273 mo(\001)sh145.35 318.28 mo(\001)sh145.35 318.285 mo(\001)sh145.35 318.291 mo(\001)sh145.35 318.298 mo(\001)sh145.35 318.304 mo(\001)sh145.35 318.311 mo(\001)sh145.35 318.318 mo(\001)sh145.35 318.326 mo(\001)sh145.35 318.334 mo(\001)sh145.35 318.341 mo(\001)sh145.35 318.351 mo(\001)sh145.35 318.36 mo(\001)sh145.35 318.37 mo(\001)sh145.35 318.381 mo(\001)sh145.35 318.394 mo(\001)sh145.35 318.406 mo(\001)sh145.35 318.421 mo(\001)sh145.35 318.437 mo(\001)sh145.35 318.455 mo(\001)sh145.35 318.475 mo(\001)sh145.35 318.498 mo(\001)sh145.35 318.525 mo(\001)sh145.35 319.708 mo(\001)sh148.363 314.516 mo(\001)sh148.363 315.785 mo(\001)sh148.363 316.044 mo(\001)sh148.363 316.157 mo(\001)sh148.363 316.219 mo(\001)sh148.363 316.258 mo(\001)sh148.363 316.284 mo(\001)sh148.363 316.303 mo(\001)sh148.363 316.318 mo(\001)sh148.363 316.33 mo(\001)sh148.363 316.339 mo(\001)sh148.363 316.347 mo(\001)sh148.363 316.354 mo(\001)sh148.363 316.361 mo(\001)sh148.363 316.366 mo(\001)sh148.363 316.372 mo(\001)sh148.363 316.377 mo(\001)sh148.363 316.383 mo(\001)sh148.363 316.388 mo(\001)sh148.363 316.393 mo(\001)sh148.363 316.398 mo(\001)sh148.363 316.403 mo(\001)sh148.363 316.409 mo(\001)sh148.363 316.414 mo(\001)sh148.363 316.419 mo(\001)sh148.363 316.425 mo(\001)sh148.363 316.43 mo(\001)sh148.363 316.436 mo(\001)sh148.363 316.442 mo(\001)sh148.363 316.448 mo(\001)sh148.363 316.455 mo(\001)sh148.363 316.462 mo(\001)sh148.363 316.469 mo(\001)sh148.363 316.476 mo(\001)sh148.363 316.484 mo(\001)sh148.363 316.492 mo(\001)sh148.363 316.501 mo(\001)sh148.363 316.51 mo(\001)sh148.363 316.52 mo(\001)sh148.363 316.53 mo(\001)sh148.363 316.541 mo(\001)sh148.363 316.554 mo(\001)sh148.363 316.568 mo(\001)sh148.363 316.583 mo(\001)sh148.363 316.599 mo(\001)sh148.363 316.618 mo(\001)sh148.363 316.639 mo(\001)sh148.363 316.663 mo(\001)sh148.363 316.69 mo(\001)sh148.363 317.914 mo(\001)sh151.376 312.609 mo(\001)sh151.376 313.92 mo(\001)sh151.376 314.188 mo(\001)sh151.376 314.305 mo(\001)sh151.376 314.369 mo(\001)sh151.376 314.409 mo(\001)sh151.376 314.436 mo(\001)sh151.376 314.455 mo(\001)sh151.376 314.471 mo(\001)sh151.376 314.483 mo(\001)sh151.376 314.492 mo(\001)sh151.376 314.501 mo(\001)sh151.376 314.509 mo(\001)sh151.376 314.515 mo(\001)sh151.376 314.521 mo(\001)sh151.376 314.527 mo(\001)sh151.376 314.532 mo(\001)sh151.376 314.538 mo(\001)sh151.376 314.543 mo(\001)sh151.376 314.548 mo(\001)sh151.376 314.554 mo(\001)sh151.376 314.559 mo(\001)sh151.376 314.564 mo(\001)sh151.376 314.57 mo(\001)sh151.376 314.575 mo(\001)sh151.376 314.581 mo(\001)sh151.376 314.587 mo(\001)sh151.376 314.593 mo(\001)sh151.376 314.599 mo(\001)sh151.376 314.606 mo(\001)sh151.376 314.613 mo(\001)sh151.376 314.62 mo(\001)sh151.376 314.627 mo(\001)sh151.376 314.634 mo(\001)sh151.376 314.642 mo(\001)sh151.376 314.651 mo(\001)sh151.376 314.659 mo(\001)sh151.376 314.669 mo(\001)sh151.376 314.679 mo(\001)sh151.376 314.69 mo(\001)sh151.376 314.702 mo(\001)sh151.376 314.715 mo(\001)sh151.376 314.729 mo(\001)sh151.376 314.745 mo(\001)sh151.376 314.762 mo(\001)sh151.376 314.781 mo(\001)sh151.376 314.802 mo(\001)sh151.376 314.827 mo(\001)sh151.376 314.856 mo(\001)sh151.376 316.12 mo(\001)sh154.389 310.702 mo(\001)sh154.389 312.055 mo(\001)sh154.389 312.332 mo(\001)sh154.389 312.452 mo(\001)sh154.389 312.518 mo(\001)sh154.389 312.559 mo(\001)sh154.389 312.588 mo(\001)sh154.389 312.608 mo(\001)sh154.389 312.624 mo(\001)sh154.389 312.636 mo(\001)sh154.389 312.646 mo(\001)sh154.389 312.655 mo(\001)sh154.389 312.663 mo(\001)sh154.389 312.669 mo(\001)sh154.389 312.676 mo(\001)sh154.389 312.681 mo(\001)sh154.389 312.688 mo(\001)sh154.389 312.693 mo(\001)sh154.389 312.699 mo(\001)sh154.389 312.704 mo(\001)sh154.389 312.709 mo(\001)sh154.389 312.715 mo(\001)sh154.389 312.72 mo(\001)sh154.389 312.726 mo(\001)sh154.389 312.731 mo(\001)sh154.389 312.738 mo(\001)sh154.389 312.744 mo(\001)sh154.389 312.749 mo(\001)sh154.389 312.756 mo(\001)sh154.389 312.763 mo(\001)sh154.389 312.77 mo(\001)sh154.389 312.777 mo(\001)sh154.389 312.784 mo(\001)sh154.389 312.792 mo(\001)sh154.389 312.801 mo(\001)sh154.389 312.809 mo(\001)sh154.389 312.819 mo(\001)sh154.389 312.828 mo(\001)sh154.389 312.839 mo(\001)sh154.389 312.85 mo(\001)sh154.389 312.863 mo(\001)sh154.389 312.876 mo(\001)sh154.389 312.89 mo(\001)sh154.389 312.906 mo(\001)sh154.389 312.924 mo(\001)sh154.389 312.944 mo(\001)sh154.389 312.966 mo(\001)sh154.389 312.992 mo(\001)sh154.389 313.02 mo(\001)sh154.389 314.326 mo(\001)sh157.401 308.795 mo(\001)sh157.401 310.19 mo(\001)sh157.401 310.476 mo(\001)sh157.401 310.599 mo(\001)sh157.401 310.667 mo(\001)sh157.401 310.71 mo(\001)sh157.401 310.739 mo(\001)sh157.401 310.76 mo(\001)sh157.401 310.777 mo(\001)sh157.401 310.789 mo(\001)sh157.401 310.799 mo(\001)sh157.401 310.809 mo(\001)sh157.401 310.817 mo(\001)sh157.401 310.824 mo(\001)sh157.401 310.83 mo(\001)sh157.401 310.836 mo(\001)sh157.401 310.842 mo(\001)sh157.401 310.848 mo(\001)sh157.401 310.853 mo(\001)sh157.401 310.86 mo(\001)sh157.401 310.865 mo(\001)sh157.401 310.87 mo(\001)sh157.401 310.876 mo(\001)sh157.401 310.882 mo(\001)sh157.401 310.888 mo(\001)sh157.401 310.894 mo(\001)sh157.401 310.9 mo(\001)sh157.401 310.906 mo(\001)sh157.401 310.913 mo(\001)sh157.401 310.92 mo(\001)sh157.401 310.927 mo(\001)sh157.401 310.935 mo(\001)sh157.401 310.942 mo(\001)sh157.401 310.95 mo(\001)sh157.401 310.959 mo(\001)sh157.401 310.968 mo(\001)sh157.401 310.977 mo(\001)sh157.401 310.988 mo(\001)sh157.401 310.999 mo(\001)sh157.401 311.01 mo(\001)sh157.401 311.023 mo(\001)sh157.401 311.036 mo(\001)sh157.401 311.051 mo(\001)sh157.401 311.067 mo(\001)sh157.401 311.086 mo(\001)sh157.401 311.106 mo(\001)sh157.401 311.129 mo(\001)sh157.401 311.156 mo(\001)sh157.401 311.186 mo(\001)sh157.401 312.532 mo(\001)sh160.414 306.888 mo(\001)sh160.414 308.325 mo(\001)sh160.414 308.62 mo(\001)sh160.414 308.747 mo(\001)sh160.414 308.817 mo(\001)sh160.414 308.861 mo(\001)sh160.414 308.891 mo(\001)sh160.414 308.913 mo(\001)sh160.414 308.929 mo(\001)sh160.414 308.942 mo(\001)sh160.414 308.953 mo(\001)sh160.414 308.963 mo(\001)sh160.414 308.97 mo(\001)sh160.414 308.978 mo(\001)sh160.414 308.985 mo(\001)sh160.414 308.991 mo(\001)sh160.414 308.997 mo(\001)sh160.414 309.003 mo(\001)sh160.414 309.009 mo(\001)sh160.414 309.014 mo(\001)sh160.414 309.021 mo(\001)sh160.414 309.026 mo(\001)sh160.414 309.032 mo(\001)sh160.414 309.038 mo(\001)sh160.414 309.044 mo(\001)sh160.414 309.05 mo(\001)sh160.414 309.056 mo(\001)sh160.414 309.064 mo(\001)sh160.414 309.07 mo(\001)sh160.414 309.078 mo(\001)sh160.414 309.085 mo(\001)sh160.414 309.092 mo(\001)sh160.414 309.1 mo(\001)sh160.414 309.109 mo(\001)sh160.414 309.117 mo(\001)sh160.414 309.127 mo(\001)sh160.414 309.136 mo(\001)sh160.414 309.147 mo(\001)sh160.414 309.158 mo(\001)sh160.414 309.17 mo(\001)sh160.414 309.183 mo(\001)sh160.414 309.197 mo(\001)sh160.414 309.213 mo(\001)sh160.414 309.229 mo(\001)sh160.414 309.248 mo(\001)sh160.414 309.269 mo(\001)sh160.414 309.293 mo(\001)sh160.414 309.32 mo(\001)sh160.414 309.351 mo(\001)sh160.414 310.738 mo(\001)sh163.427 304.981 mo(\001)sh163.427 306.46 mo(\001)sh163.427 306.763 mo(\001)sh163.427 306.895 mo(\001)sh163.427 306.967 mo(\001)sh163.427 307.012 mo(\001)sh163.427 307.043 mo(\001)sh163.427 307.065 mo(\001)sh163.427 307.082 mo(\001)sh163.427 307.096 mo(\001)sh163.427 307.106 mo(\001)sh163.427 307.116 mo(\001)sh163.427 307.124 mo(\001)sh163.427 307.132 mo(\001)sh163.427 307.139 mo(\001)sh163.427 307.146 mo(\001)sh163.427 307.152 mo(\001)sh163.427 307.158 mo(\001)sh163.427 307.164 mo(\001)sh163.427 307.17 mo(\001)sh163.427 307.176 mo(\001)sh163.427 307.181 mo(\001)sh163.427 307.188 mo(\001)sh163.427 307.194 mo(\001)sh163.427 307.2 mo(\001)sh163.427 307.207 mo(\001)sh163.427 307.214 mo(\001)sh163.427 307.22 mo(\001)sh163.427 307.227 mo(\001)sh163.427 307.235 mo(\001)sh163.427 307.242 mo(\001)sh163.427 307.25 mo(\001)sh163.427 307.258 mo(\001)sh163.427 307.267 mo(\001)sh163.427 307.276 mo(\001)sh163.427 307.285 mo(\001)sh163.427 307.296 mo(\001)sh163.427 307.307 mo(\001)sh163.427 307.317 mo(\001)sh163.427 307.33 mo(\001)sh163.427 307.343 mo(\001)sh163.427 307.358 mo(\001)sh163.427 307.374 mo(\001)sh163.427 307.391 mo(\001)sh163.427 307.41 mo(\001)sh163.427 307.432 mo(\001)sh163.427 307.457 mo(\001)sh163.427 307.485 mo(\001)sh163.427 307.517 mo(\001)sh163.427 308.944 mo(\001)sh166.439 303.073 mo(\001)sh166.439 304.596 mo(\001)sh166.439 304.907 mo(\001)sh166.439 305.042 mo(\001)sh166.439 305.116 mo(\001)sh166.439 305.163 mo(\001)sh166.439 305.195 mo(\001)sh166.439 305.217 mo(\001)sh166.439 305.235 mo(\001)sh166.439 305.249 mo(\001)sh166.439 305.26 mo(\001)sh166.439 305.27 mo(\001)sh166.439 305.278 mo(\001)sh166.439 305.286 mo(\001)sh166.439 305.293 mo(\001)sh166.439 305.3 mo(\001)sh166.439 305.307 mo(\001)sh166.439 305.313 mo(\001)sh166.439 305.319 mo(\001)sh166.439 305.325 mo(\001)sh166.439 305.332 mo(\001)sh166.439 305.338 mo(\001)sh166.439 305.344 mo(\001)sh166.439 305.35 mo(\001)sh166.439 305.357 mo(\001)sh166.439 305.363 mo(\001)sh166.439 305.37 mo(\001)sh166.439 305.377 mo(\001)sh166.439 305.384 mo(\001)sh166.439 305.392 mo(\001)sh166.439 305.4 mo(\001)sh166.439 305.407 mo(\001)sh166.439 305.416 mo(\001)sh166.439 305.425 mo(\001)sh166.439 305.434 mo(\001)sh166.439 305.444 mo(\001)sh166.439 305.454 mo(\001)sh166.439 305.465 mo(\001)sh166.439 305.477 mo(\001)sh166.439 305.49 mo(\001)sh166.439 305.503 mo(\001)sh166.439 305.518 mo(\001)sh166.439 305.535 mo(\001)sh166.439 305.553 mo(\001)sh166.439 305.573 mo(\001)sh166.439 305.595 mo(\001)sh166.439 305.62 mo(\001)sh166.439 305.649 mo(\001)sh166.439 305.682 mo(\001)sh166.439 307.15 mo(\001)sh169.452 301.166 mo(\001)sh169.452 302.731 mo(\001)sh169.452 303.051 mo(\001)sh169.452 303.189 mo(\001)sh169.452 303.266 mo(\001)sh169.452 303.314 mo(\001)sh169.452 303.346 mo(\001)sh169.452 303.37 mo(\001)sh169.452 303.388 mo(\001)sh169.452 303.402 mo(\001)sh169.452 303.414 mo(\001)sh169.452 303.424 mo(\001)sh169.452 303.432 mo(\001)sh169.452 303.44 mo(\001)sh169.452 303.448 mo(\001)sh169.452 303.455 mo(\001)sh169.452 303.461 mo(\001)sh169.452 303.467 mo(\001)sh169.452 303.475 mo(\001)sh169.452 303.481 mo(\001)sh169.452 303.487 mo(\001)sh169.452 303.493 mo(\001)sh169.452 303.5 mo(\001)sh169.452 303.506 mo(\001)sh169.452 303.513 mo(\001)sh169.452 303.52 mo(\001)sh169.452 303.526 mo(\001)sh169.452 303.534 mo(\001)sh169.452 303.541 mo(\001)sh169.452 303.549 mo(\001)sh169.452 303.557 mo(\001)sh169.452 303.565 mo(\001)sh169.452 303.574 mo(\001)sh169.452 303.583 mo(\001)sh169.452 303.593 mo(\001)sh169.452 303.603 mo(\001)sh169.452 303.613 mo(\001)sh169.452 303.625 mo(\001)sh169.452 303.637 mo(\001)sh169.452 303.65 mo(\001)sh169.452 303.664 mo(\001)sh169.452 303.679 mo(\001)sh169.452 303.696 mo(\001)sh169.452 303.714 mo(\001)sh169.452 303.735 mo(\001)sh169.452 303.757 mo(\001)sh169.452 303.784 mo(\001)sh169.452 303.813 mo(\001)sh169.452 303.846 mo(\001)sh169.452 305.356 mo(\001)sh172.465 299.259 mo(\001)sh172.465 300.865 mo(\001)sh172.465 301.195 mo(\001)sh172.465 301.337 mo(\001)sh172.465 301.415 mo(\001)sh172.465 301.464 mo(\001)sh172.465 301.498 mo(\001)sh172.465 301.522 mo(\001)sh172.465 301.541 mo(\001)sh172.465 301.555 mo(\001)sh172.465 301.568 mo(\001)sh172.465 301.578 mo(\001)sh172.465 301.586 mo(\001)sh172.465 301.595 mo(\001)sh172.465 301.603 mo(\001)sh172.465 301.61 mo(\001)sh172.465 301.616 mo(\001)sh172.465 301.623 mo(\001)sh172.465 301.629 mo(\001)sh172.465 301.636 mo(\001)sh172.465 301.643 mo(\001)sh172.465 301.649 mo(\001)sh172.465 301.656 mo(\001)sh172.465 301.662 mo(\001)sh172.465 301.669 mo(\001)sh172.465 301.676 mo(\001)sh172.465 301.683 mo(\001)sh172.465 301.69 mo(\001)sh172.465 301.698 mo(\001)sh172.465 301.706 mo(\001)sh172.465 301.714 mo(\001)sh172.465 301.723 mo(\001)sh172.465 301.732 mo(\001)sh172.465 301.741 mo(\001)sh172.465 301.751 mo(\001)sh172.465 301.761 mo(\001)sh172.465 301.772 mo(\001)sh172.465 301.784 mo(\001)sh172.465 301.796 mo(\001)sh172.465 301.81 mo(\001)sh172.465 301.825 mo(\001)sh172.465 301.84 mo(\001)sh172.465 301.857 mo(\001)sh172.465 301.876 mo(\001)sh172.465 301.897 mo(\001)sh172.465 301.921 mo(\001)sh172.465 301.947 mo(\001)sh172.465 301.978 mo(\001)sh172.465 302.012 mo(\001)sh172.465 303.562 mo(\001)sh175.478 297.352 mo(\001)sh175.478 299 mo(\001)sh175.478 299.338 mo(\001)sh175.478 299.484 mo(\001)sh175.478 299.564 mo(\001)sh175.478 299.615 mo(\001)sh175.478 299.65 mo(\001)sh175.478 299.675 mo(\001)sh175.478 299.693 mo(\001)sh175.478 299.708 mo(\001)sh175.478 299.721 mo(\001)sh175.478 299.732 mo(\001)sh175.478 299.741 mo(\001)sh175.478 299.749 mo(\001)sh175.478 299.757 mo(\001)sh175.478 299.764 mo(\001)sh175.478 299.771 mo(\001)sh175.478 299.778 mo(\001)sh175.478 299.785 mo(\001)sh175.478 299.791 mo(\001)sh175.478 299.798 mo(\001)sh175.478 299.804 mo(\001)sh175.478 299.811 mo(\001)sh175.478 299.818 mo(\001)sh175.478 299.825 mo(\001)sh175.478 299.832 mo(\001)sh175.478 299.84 mo(\001)sh175.478 299.847 mo(\001)sh175.478 299.855 mo(\001)sh175.478 299.863 mo(\001)sh175.478 299.872 mo(\001)sh175.478 299.88 mo(\001)sh175.478 299.89 mo(\001)sh175.478 299.899 mo(\001)sh175.478 299.909 mo(\001)sh175.478 299.92 mo(\001)sh175.478 299.931 mo(\001)sh175.478 299.943 mo(\001)sh175.478 299.956 mo(\001)sh175.478 299.97 mo(\001)sh175.478 299.985 mo(\001)sh175.478 300 mo(\001)sh175.478 300.018 mo(\001)sh175.478 300.038 mo(\001)sh175.478 300.059 mo(\001)sh175.478 300.083 mo(\001)sh175.478 300.111 mo(\001)sh175.478 300.142 mo(\001)sh175.478 300.177 mo(\001)sh175.478 301.768 mo(\001)sh178.49 295.444 mo(\001)sh178.49 297.136 mo(\001)sh178.49 297.482 mo(\001)sh178.49 297.632 mo(\001)sh178.49 297.715 mo(\001)sh178.49 297.766 mo(\001)sh178.49 297.801 mo(\001)sh178.49 297.827 mo(\001)sh178.49 297.847 mo(\001)sh178.49 297.862 mo(\001)sh178.49 297.875 mo(\001)sh178.49 297.886 mo(\001)sh178.49 297.895 mo(\001)sh178.49 297.904 mo(\001)sh178.49 297.911 mo(\001)sh178.49 297.918 mo(\001)sh178.49 297.926 mo(\001)sh178.49 297.933 mo(\001)sh178.49 297.94 mo(\001)sh178.49 297.947 mo(\001)sh178.49 297.954 mo(\001)sh178.49 297.961 mo(\001)sh178.49 297.967 mo(\001)sh178.49 297.974 mo(\001)sh178.49 297.982 mo(\001)sh178.49 297.989 mo(\001)sh178.49 297.997 mo(\001)sh178.49 298.004 mo(\001)sh178.49 298.012 mo(\001)sh178.49 298.02 mo(\001)sh178.49 298.029 mo(\001)sh178.49 298.038 mo(\001)sh178.49 298.047 mo(\001)sh178.49 298.057 mo(\001)sh178.49 298.068 mo(\001)sh178.49 298.079 mo(\001)sh178.49 298.09 mo(\001)sh178.49 298.102 mo(\001)sh178.49 298.115 mo(\001)sh178.49 298.129 mo(\001)sh178.49 298.145 mo(\001)sh178.49 298.161 mo(\001)sh178.49 298.179 mo(\001)sh178.49 298.2 mo(\001)sh178.49 298.222 mo(\001)sh178.49 298.247 mo(\001)sh178.49 298.274 mo(\001)sh178.49 298.306 mo(\001)sh178.49 298.343 mo(\001)sh178.49 299.974 mo(\001)sh181.502 293.537 mo(\001)sh181.502 295.271 mo(\001)sh181.502 295.625 mo(\001)sh181.502 295.779 mo(\001)sh181.502 295.864 mo(\001)sh181.502 295.917 mo(\001)sh181.502 295.953 mo(\001)sh181.502 295.979 mo(\001)sh181.502 295.999 mo(\001)sh181.502 296.015 mo(\001)sh181.502 296.028 mo(\001)sh181.502 296.039 mo(\001)sh181.502 296.049 mo(\001)sh181.502 296.057 mo(\001)sh181.502 296.066 mo(\001)sh181.502 296.073 mo(\001)sh181.502 296.081 mo(\001)sh181.502 296.088 mo(\001)sh181.502 296.095 mo(\001)sh181.502 296.102 mo(\001)sh181.502 296.109 mo(\001)sh181.502 296.116 mo(\001)sh181.502 296.123 mo(\001)sh181.502 296.13 mo(\001)sh181.502 296.137 mo(\001)sh181.502 296.145 mo(\001)sh181.502 296.153 mo(\001)sh181.502 296.161 mo(\001)sh181.502 296.169 mo(\001)sh181.502 296.178 mo(\001)sh181.502 296.186 mo(\001)sh181.502 296.196 mo(\001)sh181.502 296.205 mo(\001)sh181.502 296.215 mo(\001)sh181.502 296.226 mo(\001)sh181.502 296.237 mo(\001)sh181.502 296.249 mo(\001)sh181.502 296.261 mo(\001)sh181.502 296.275 mo(\001)sh181.502 296.29 mo(\001)sh181.502 296.305 mo(\001)sh181.502 296.322 mo(\001)sh181.502 296.34 mo(\001)sh181.502 296.361 mo(\001)sh181.502 296.383 mo(\001)sh181.502 296.409 mo(\001)sh181.502 296.438 mo(\001)sh181.502 296.471 mo(\001)sh181.502 296.507 mo(\001)sh181.502 298.18 mo(\001)sh184.515 291.63 mo(\001)sh184.515 293.406 mo(\001)sh184.515 293.769 mo(\001)sh184.515 293.927 mo(\001)sh184.515 294.014 mo(\001)sh184.515 294.068 mo(\001)sh184.515 294.105 mo(\001)sh184.515 294.132 mo(\001)sh184.515 294.152 mo(\001)sh184.515 294.168 mo(\001)sh184.515 294.182 mo(\001)sh184.515 294.193 mo(\001)sh184.515 294.203 mo(\001)sh184.515 294.212 mo(\001)sh184.515 294.22 mo(\001)sh184.515 294.228 mo(\001)sh184.515 294.236 mo(\001)sh184.515 294.243 mo(\001)sh184.515 294.251 mo(\001)sh184.515 294.258 mo(\001)sh184.515 294.265 mo(\001)sh184.515 294.272 mo(\001)sh184.515 294.279 mo(\001)sh184.515 294.286 mo(\001)sh184.515 294.293 mo(\001)sh184.515 294.301 mo(\001)sh184.515 294.309 mo(\001)sh184.515 294.318 mo(\001)sh184.515 294.326 mo(\001)sh184.515 294.335 mo(\001)sh184.515 294.344 mo(\001)sh184.515 294.353 mo(\001)sh184.515 294.363 mo(\001)sh184.515 294.373 mo(\001)sh184.515 294.384 mo(\001)sh184.515 294.396 mo(\001)sh184.515 294.408 mo(\001)sh184.515 294.421 mo(\001)sh184.515 294.435 mo(\001)sh184.515 294.45 mo(\001)sh184.515 294.465 mo(\001)sh184.515 294.483 mo(\001)sh184.515 294.502 mo(\001)sh184.515 294.522 mo(\001)sh184.515 294.546 mo(\001)sh184.515 294.572 mo(\001)sh184.515 294.601 mo(\001)sh184.515 294.635 mo(\001)sh184.515 294.673 mo(\001)sh184.515 296.386 mo(\001)sh187.528 289.723 mo(\001)sh187.528 291.541 mo(\001)sh187.528 291.913 mo(\001)sh187.528 292.074 mo(\001)sh187.528 292.163 mo(\001)sh187.528 292.219 mo(\001)sh187.528 292.257 mo(\001)sh187.528 292.284 mo(\001)sh187.528 292.305 mo(\001)sh187.528 292.322 mo(\001)sh187.528 292.335 mo(\001)sh187.528 292.347 mo(\001)sh187.528 292.357 mo(\001)sh187.528 292.366 mo(\001)sh187.528 292.375 mo(\001)sh187.528 292.383 mo(\001)sh187.528 292.39 mo(\001)sh187.528 292.398 mo(\001)sh187.528 292.405 mo(\001)sh187.528 292.412 mo(\001)sh187.528 292.42 mo(\001)sh187.528 292.427 mo(\001)sh187.528 292.435 mo(\001)sh187.528 292.442 mo(\001)sh187.528 292.45 mo(\001)sh187.528 292.458 mo(\001)sh187.528 292.466 mo(\001)sh187.528 292.474 mo(\001)sh187.528 292.483 mo(\001)sh187.528 292.492 mo(\001)sh187.528 292.501 mo(\001)sh187.528 292.511 mo(\001)sh187.528 292.521 mo(\001)sh187.528 292.532 mo(\001)sh187.528 292.543 mo(\001)sh187.528 292.554 mo(\001)sh187.528 292.567 mo(\001)sh187.528 292.58 mo(\001)sh187.528 292.594 mo(\001)sh187.528 292.609 mo(\001)sh187.528 292.626 mo(\001)sh187.528 292.643 mo(\001)sh187.528 292.663 mo(\001)sh187.528 292.684 mo(\001)sh187.528 292.708 mo(\001)sh187.528 292.735 mo(\001)sh187.528 292.765 mo(\001)sh187.528 292.799 mo(\001)sh187.528 292.838 mo(\001)sh187.528 294.592 mo(\001)sh190.54 287.815 mo(\001)sh190.54 289.676 mo(\001)sh190.54 290.057 mo(\001)sh190.54 290.222 mo(\001)sh190.54 290.312 mo(\001)sh190.54 290.369 mo(\001)sh190.54 290.408 mo(\001)sh190.54 290.436 mo(\001)sh190.54 290.458 mo(\001)sh190.54 290.475 mo(\001)sh190.54 290.489 mo(\001)sh190.54 290.501 mo(\001)sh190.54 290.511 mo(\001)sh190.54 290.52 mo(\001)sh190.54 290.529 mo(\001)sh190.54 290.537 mo(\001)sh190.54 290.545 mo(\001)sh190.54 290.553 mo(\001)sh190.54 290.561 mo(\001)sh190.54 290.568 mo(\001)sh190.54 290.576 mo(\001)sh190.54 290.583 mo(\001)sh190.54 290.59 mo(\001)sh190.54 290.598 mo(\001)sh190.54 290.606 mo(\001)sh190.54 290.615 mo(\001)sh190.54 290.622 mo(\001)sh190.54 290.631 mo(\001)sh190.54 290.64 mo(\001)sh190.54 290.649 mo(\001)sh190.54 290.658 mo(\001)sh190.54 290.668 mo(\001)sh190.54 290.679 mo(\001)sh190.54 290.69 mo(\001)sh190.54 290.701 mo(\001)sh190.54 290.713 mo(\001)sh190.54 290.726 mo(\001)sh190.54 290.74 mo(\001)sh190.54 290.754 mo(\001)sh190.54 290.769 mo(\001)sh190.54 290.786 mo(\001)sh190.54 290.804 mo(\001)sh190.54 290.824 mo(\001)sh190.54 290.846 mo(\001)sh190.54 290.87 mo(\001)sh190.54 290.897 mo(\001)sh190.54 290.929 mo(\001)sh190.54 290.963 mo(\001)sh190.54 291.004 mo(\001)sh190.54 292.798 mo(\001)sh193.553 285.908 mo(\001)sh193.553 287.811 mo(\001)sh193.553 288.201 mo(\001)sh193.553 288.369 mo(\001)sh193.553 288.462 mo(\001)sh193.553 288.52 mo(\001)sh193.553 288.56 mo(\001)sh193.553 288.589 mo(\001)sh193.553 288.611 mo(\001)sh193.553 288.628 mo(\001)sh193.553 288.642 mo(\001)sh193.553 288.655 mo(\001)sh193.553 288.665 mo(\001)sh193.553 288.675 mo(\001)sh193.553 288.683 mo(\001)sh193.553 288.692 mo(\001)sh193.553 288.7 mo(\001)sh193.553 288.708 mo(\001)sh193.553 288.715 mo(\001)sh193.553 288.723 mo(\001)sh193.553 288.731 mo(\001)sh193.553 288.739 mo(\001)sh193.553 288.747 mo(\001)sh193.553 288.754 mo(\001)sh193.553 288.762 mo(\001)sh193.553 288.771 mo(\001)sh193.553 288.779 mo(\001)sh193.553 288.788 mo(\001)sh193.553 288.797 mo(\001)sh193.553 288.806 mo(\001)sh193.553 288.816 mo(\001)sh193.553 288.826 mo(\001)sh193.553 288.836 mo(\001)sh193.553 288.847 mo(\001)sh193.553 288.859 mo(\001)sh193.553 288.872 mo(\001)sh193.553 288.885 mo(\001)sh193.553 288.898 mo(\001)sh193.553 288.913 mo(\001)sh193.553 288.929 mo(\001)sh193.553 288.946 mo(\001)sh193.553 288.965 mo(\001)sh193.553 288.985 mo(\001)sh193.553 289.008 mo(\001)sh193.553 289.033 mo(\001)sh193.553 289.06 mo(\001)sh193.553 289.092 mo(\001)sh193.553 289.128 mo(\001)sh193.553 289.169 mo(\001)sh193.553 291.004 mo(\001)sh196.566 284.001 mo(\001)sh196.566 285.946 mo(\001)sh196.566 286.344 mo(\001)sh196.566 286.516 mo(\001)sh196.566 286.611 mo(\001)sh196.566 286.671 mo(\001)sh196.566 286.711 mo(\001)sh196.566 286.741 mo(\001)sh196.566 286.763 mo(\001)sh196.566 286.781 mo(\001)sh196.566 286.796 mo(\001)sh196.566 286.808 mo(\001)sh196.566 286.819 mo(\001)sh196.566 286.829 mo(\001)sh196.566 286.838 mo(\001)sh196.566 286.847 mo(\001)sh196.566 286.854 mo(\001)sh196.566 286.863 mo(\001)sh196.566 286.871 mo(\001)sh196.566 286.879 mo(\001)sh196.566 286.886 mo(\001)sh196.566 286.894 mo(\001)sh196.566 286.902 mo(\001)sh196.566 286.91 mo(\001)sh196.566 286.918 mo(\001)sh196.566 286.927 mo(\001)sh196.566 286.936 mo(\001)sh196.566 286.944 mo(\001)sh196.566 286.954 mo(\001)sh196.566 286.963 mo(\001)sh196.566 286.973 mo(\001)sh196.566 286.983 mo(\001)sh196.566 286.994 mo(\001)sh196.566 287.006 mo(\001)sh196.566 287.018 mo(\001)sh196.566 287.03 mo(\001)sh196.566 287.044 mo(\001)sh196.566 287.058 mo(\001)sh196.566 287.072 mo(\001)sh196.566 287.089 mo(\001)sh196.566 287.107 mo(\001)sh196.566 287.126 mo(\001)sh196.566 287.147 mo(\001)sh196.566 287.169 mo(\001)sh196.566 287.194 mo(\001)sh196.566 287.223 mo(\001)sh196.566 287.255 mo(\001)sh196.566 287.292 mo(\001)sh196.566 287.334 mo(\001)sh196.566 289.21 mo(\001)sh199.579 282.094 mo(\001)sh199.579 284.081 mo(\001)sh199.579 284.488 mo(\001)sh199.579 284.664 mo(\001)sh199.579 284.761 mo(\001)sh199.579 284.822 mo(\001)sh199.579 284.863 mo(\001)sh199.579 284.893 mo(\001)sh199.579 284.916 mo(\001)sh199.579 284.934 mo(\001)sh199.579 284.949 mo(\001)sh199.579 284.961 mo(\001)sh199.579 284.973 mo(\001)sh199.579 284.983 mo(\001)sh199.579 284.992 mo(\001)sh199.579 285.001 mo(\001)sh199.579 285.01 mo(\001)sh199.579 285.018 mo(\001)sh199.579 285.026 mo(\001)sh199.579 285.034 mo(\001)sh199.579 285.042 mo(\001)sh199.579 285.05 mo(\001)sh199.579 285.058 mo(\001)sh199.579 285.066 mo(\001)sh199.579 285.075 mo(\001)sh199.579 285.083 mo(\001)sh199.579 285.092 mo(\001)sh199.579 285.101 mo(\001)sh199.579 285.111 mo(\001)sh199.579 285.12 mo(\001)sh199.579 285.13 mo(\001)sh199.579 285.141 mo(\001)sh199.579 285.152 mo(\001)sh199.579 285.164 mo(\001)sh199.579 285.176 mo(\001)sh199.579 285.189 mo(\001)sh199.579 285.202 mo(\001)sh199.579 285.217 mo(\001)sh199.579 285.233 mo(\001)sh199.579 285.249 mo(\001)sh199.579 285.267 mo(\001)sh199.579 285.286 mo(\001)sh199.579 285.307 mo(\001)sh199.579 285.331 mo(\001)sh199.579 285.357 mo(\001)sh199.579 285.386 mo(\001)sh199.579 285.419 mo(\001)sh199.579 285.456 mo(\001)sh199.579 285.499 mo(\001)sh199.579 287.416 mo(\001)sh202.591 280.186 mo(\001)sh202.591 282.216 mo(\001)sh202.591 282.632 mo(\001)sh202.591 282.811 mo(\001)sh202.591 282.911 mo(\001)sh202.591 282.972 mo(\001)sh202.591 283.015 mo(\001)sh202.591 283.046 mo(\001)sh202.591 283.069 mo(\001)sh202.591 283.087 mo(\001)sh202.591 283.103 mo(\001)sh202.591 283.115 mo(\001)sh202.591 283.127 mo(\001)sh202.591 283.137 mo(\001)sh202.591 283.147 mo(\001)sh202.591 283.156 mo(\001)sh202.591 283.165 mo(\001)sh202.591 283.172 mo(\001)sh202.591 283.181 mo(\001)sh202.591 283.189 mo(\001)sh202.591 283.197 mo(\001)sh202.591 283.205 mo(\001)sh202.591 283.214 mo(\001)sh202.591 283.222 mo(\001)sh202.591 283.231 mo(\001)sh202.591 283.24 mo(\001)sh202.591 283.249 mo(\001)sh202.591 283.258 mo(\001)sh202.591 283.268 mo(\001)sh202.591 283.278 mo(\001)sh202.591 283.288 mo(\001)sh202.591 283.299 mo(\001)sh202.591 283.31 mo(\001)sh202.591 283.322 mo(\001)sh202.591 283.334 mo(\001)sh202.591 283.347 mo(\001)sh202.591 283.361 mo(\001)sh202.591 283.376 mo(\001)sh202.591 283.392 mo(\001)sh202.591 283.409 mo(\001)sh202.591 283.427 mo(\001)sh202.591 283.447 mo(\001)sh202.591 283.468 mo(\001)sh202.591 283.493 mo(\001)sh202.591 283.519 mo(\001)sh202.591 283.549 mo(\001)sh202.591 283.582 mo(\001)sh202.591 283.621 mo(\001)sh202.591 283.665 mo(\001)sh202.591 285.622 mo(\001)sh205.604 278.279 mo(\001)sh205.604 280.351 mo(\001)sh205.604 280.775 mo(\001)sh205.604 280.959 mo(\001)sh205.604 281.06 mo(\001)sh205.604 281.123 mo(\001)sh205.604 281.167 mo(\001)sh205.604 281.198 mo(\001)sh205.604 281.222 mo(\001)sh205.604 281.24 mo(\001)sh205.604 281.256 mo(\001)sh205.604 281.269 mo(\001)sh205.604 281.281 mo(\001)sh205.604 281.291 mo(\001)sh205.604 281.301 mo(\001)sh205.604 281.311 mo(\001)sh205.604 281.319 mo(\001)sh205.604 281.328 mo(\001)sh205.604 281.336 mo(\001)sh205.604 281.344 mo(\001)sh205.604 281.353 mo(\001)sh205.604 281.361 mo(\001)sh205.604 281.369 mo(\001)sh205.604 281.378 mo(\001)sh205.604 281.387 mo(\001)sh205.604 281.396 mo(\001)sh205.604 281.405 mo(\001)sh205.604 281.415 mo(\001)sh205.604 281.425 mo(\001)sh205.604 281.435 mo(\001)sh205.604 281.445 mo(\001)sh205.604 281.456 mo(\001)sh205.604 281.468 mo(\001)sh205.604 281.48 mo(\001)sh205.604 281.493 mo(\001)sh205.604 281.506 mo(\001)sh205.604 281.52 mo(\001)sh205.604 281.535 mo(\001)sh205.604 281.551 mo(\001)sh205.604 281.568 mo(\001)sh205.604 281.587 mo(\001)sh205.604 281.607 mo(\001)sh205.604 281.629 mo(\001)sh205.604 281.654 mo(\001)sh205.604 281.681 mo(\001)sh205.604 281.711 mo(\001)sh205.604 281.746 mo(\001)sh205.604 281.785 mo(\001)sh205.604 281.829 mo(\001)sh205.604 283.828 mo(\001)sh208.617 276.372 mo(\001)sh208.617 278.486 mo(\001)sh208.617 278.919 mo(\001)sh208.617 279.106 mo(\001)sh208.617 279.209 mo(\001)sh208.617 279.274 mo(\001)sh208.617 279.318 mo(\001)sh208.617 279.35 mo(\001)sh208.617 279.375 mo(\001)sh208.617 279.393 mo(\001)sh208.617 279.41 mo(\001)sh208.617 279.423 mo(\001)sh208.617 279.435 mo(\001)sh208.617 279.446 mo(\001)sh208.617 279.455 mo(\001)sh208.617 279.465 mo(\001)sh208.617 279.474 mo(\001)sh208.617 279.482 mo(\001)sh208.617 279.491 mo(\001)sh208.617 279.5 mo(\001)sh208.617 279.508 mo(\001)sh208.617 279.517 mo(\001)sh208.617 279.525 mo(\001)sh208.617 279.534 mo(\001)sh208.617 279.543 mo(\001)sh208.617 279.552 mo(\001)sh208.617 279.561 mo(\001)sh208.617 279.572 mo(\001)sh208.617 279.582 mo(\001)sh208.617 279.592 mo(\001)sh208.617 279.603 mo(\001)sh208.617 279.614 mo(\001)sh208.617 279.625 mo(\001)sh208.617 279.638 mo(\001)sh208.617 279.65 mo(\001)sh208.617 279.665 mo(\001)sh208.617 279.679 mo(\001)sh208.617 279.694 mo(\001)sh208.617 279.711 mo(\001)sh208.617 279.729 mo(\001)sh208.617 279.747 mo(\001)sh208.617 279.768 mo(\001)sh208.617 279.791 mo(\001)sh208.617 279.815 mo(\001)sh208.617 279.843 mo(\001)sh208.617 279.874 mo(\001)sh208.617 279.909 mo(\001)sh208.617 279.949 mo(\001)sh208.617 279.994 mo(\001)sh208.617 282.034 mo(\001)sh211.63 274.465 mo(\001)sh211.63 276.621 mo(\001)sh211.63 277.063 mo(\001)sh211.63 277.254 mo(\001)sh211.63 277.359 mo(\001)sh211.63 277.425 mo(\001)sh211.63 277.47 mo(\001)sh211.63 277.503 mo(\001)sh211.63 277.527 mo(\001)sh211.63 277.547 mo(\001)sh211.63 277.563 mo(\001)sh211.63 277.577 mo(\001)sh211.63 277.589 mo(\001)sh211.63 277.6 mo(\001)sh211.63 277.61 mo(\001)sh211.63 277.619 mo(\001)sh211.63 277.629 mo(\001)sh211.63 277.637 mo(\001)sh211.63 277.647 mo(\001)sh211.63 277.655 mo(\001)sh211.63 277.664 mo(\001)sh211.63 277.672 mo(\001)sh211.63 277.681 mo(\001)sh211.63 277.69 mo(\001)sh211.63 277.7 mo(\001)sh211.63 277.709 mo(\001)sh211.63 277.718 mo(\001)sh211.63 277.728 mo(\001)sh211.63 277.739 mo(\001)sh211.63 277.749 mo(\001)sh211.63 277.76 mo(\001)sh211.63 277.772 mo(\001)sh211.63 277.783 mo(\001)sh211.63 277.796 mo(\001)sh211.63 277.809 mo(\001)sh211.63 277.823 mo(\001)sh211.63 277.838 mo(\001)sh211.63 277.854 mo(\001)sh211.63 277.87 mo(\001)sh211.63 277.888 mo(\001)sh211.63 277.907 mo(\001)sh211.63 277.929 mo(\001)sh211.63 277.952 mo(\001)sh211.63 277.977 mo(\001)sh211.63 278.005 mo(\001)sh211.63 278.037 mo(\001)sh211.63 278.072 mo(\001)sh211.63 278.114 mo(\001)sh211.63 278.16 mo(\001)sh211.63 280.24 mo(\001)sh214.642 272.557 mo(\001)sh214.642 274.756 mo(\001)sh214.642 275.206 mo(\001)sh214.642 275.401 mo(\001)sh214.642 275.508 mo(\001)sh214.642 275.575 mo(\001)sh214.642 275.622 mo(\001)sh214.642 275.655 mo(\001)sh214.642 275.68 mo(\001)sh214.642 275.7 mo(\001)sh214.642 275.717 mo(\001)sh214.642 275.731 mo(\001)sh214.642 275.743 mo(\001)sh214.642 275.754 mo(\001)sh214.642 275.765 mo(\001)sh214.642 275.774 mo(\001)sh214.642 275.783 mo(\001)sh214.642 275.793 mo(\001)sh214.642 275.801 mo(\001)sh214.642 275.811 mo(\001)sh214.642 275.819 mo(\001)sh214.642 275.828 mo(\001)sh214.642 275.837 mo(\001)sh214.642 275.846 mo(\001)sh214.642 275.855 mo(\001)sh214.642 275.865 mo(\001)sh214.642 275.875 mo(\001)sh214.642 275.885 mo(\001)sh214.642 275.895 mo(\001)sh214.642 275.906 mo(\001)sh214.642 275.918 mo(\001)sh214.642 275.929 mo(\001)sh214.642 275.941 mo(\001)sh214.642 275.954 mo(\001)sh214.642 275.968 mo(\001)sh214.642 275.982 mo(\001)sh214.642 275.996 mo(\001)sh214.642 276.013 mo(\001)sh214.642 276.03 mo(\001)sh214.642 276.048 mo(\001)sh214.642 276.068 mo(\001)sh214.642 276.089 mo(\001)sh214.642 276.113 mo(\001)sh214.642 276.139 mo(\001)sh214.642 276.168 mo(\001)sh214.642 276.2 mo(\001)sh214.642 276.236 mo(\001)sh214.642 276.278 mo(\001)sh214.642 276.325 mo(\001)sh214.642 278.446 mo(\001)sh217.654 270.65 mo(\001)sh217.654 272.891 mo(\001)sh217.654 273.35 mo(\001)sh217.654 273.548 mo(\001)sh217.654 273.658 mo(\001)sh217.654 273.726 mo(\001)sh217.654 273.773 mo(\001)sh217.654 273.807 mo(\001)sh217.654 273.832 mo(\001)sh217.654 273.853 mo(\001)sh217.654 273.87 mo(\001)sh217.654 273.884 mo(\001)sh217.654 273.896 mo(\001)sh217.654 273.908 mo(\001)sh217.654 273.918 mo(\001)sh217.654 273.928 mo(\001)sh217.654 273.938 mo(\001)sh217.654 273.947 mo(\001)sh217.654 273.957 mo(\001)sh217.654 273.965 mo(\001)sh217.654 273.975 mo(\001)sh217.654 273.984 mo(\001)sh217.654 273.993 mo(\001)sh217.654 274.002 mo(\001)sh217.654 274.011 mo(\001)sh217.654 274.021 mo(\001)sh217.654 274.032 mo(\001)sh217.654 274.042 mo(\001)sh217.654 274.052 mo(\001)sh217.654 274.063 mo(\001)sh217.654 274.075 mo(\001)sh217.654 274.086 mo(\001)sh217.654 274.099 mo(\001)sh217.654 274.112 mo(\001)sh217.654 274.125 mo(\001)sh217.654 274.14 mo(\001)sh217.654 274.156 mo(\001)sh217.654 274.171 mo(\001)sh217.654 274.189 mo(\001)sh217.654 274.208 mo(\001)sh217.654 274.229 mo(\001)sh217.654 274.25 mo(\001)sh217.654 274.274 mo(\001)sh217.654 274.3 mo(\001)sh217.654 274.33 mo(\001)sh217.654 274.363 mo(\001)sh217.654 274.4 mo(\001)sh217.654 274.442 mo(\001)sh217.654 274.49 mo(\001)sh217.654 276.652 mo(\001)sh220.667 268.743 mo(\001)sh220.667 271.026 mo(\001)sh220.667 271.493 mo(\001)sh220.667 271.696 mo(\001)sh220.667 271.807 mo(\001)sh220.667 271.877 mo(\001)sh220.667 271.925 mo(\001)sh220.667 271.96 mo(\001)sh220.667 271.986 mo(\001)sh220.667 272.007 mo(\001)sh220.667 272.024 mo(\001)sh220.667 272.038 mo(\001)sh220.667 272.051 mo(\001)sh220.667 272.062 mo(\001)sh220.667 272.073 mo(\001)sh220.667 272.083 mo(\001)sh220.667 272.093 mo(\001)sh220.667 272.103 mo(\001)sh220.667 272.111 mo(\001)sh220.667 272.121 mo(\001)sh220.667 272.13 mo(\001)sh220.667 272.139 mo(\001)sh220.667 272.149 mo(\001)sh220.667 272.158 mo(\001)sh220.667 272.168 mo(\001)sh220.667 272.178 mo(\001)sh220.667 272.188 mo(\001)sh220.667 272.198 mo(\001)sh220.667 272.209 mo(\001)sh220.667 272.221 mo(\001)sh220.667 272.232 mo(\001)sh220.667 272.244 mo(\001)sh220.667 272.257 mo(\001)sh220.667 272.27 mo(\001)sh220.667 272.284 mo(\001)sh220.667 272.299 mo(\001)sh220.667 272.314 mo(\001)sh220.667 272.331 mo(\001)sh220.667 272.349 mo(\001)sh220.667 272.368 mo(\001)sh220.667 272.389 mo(\001)sh220.667 272.411 mo(\001)sh220.667 272.436 mo(\001)sh220.667 272.462 mo(\001)sh220.667 272.492 mo(\001)sh220.667 272.525 mo(\001)sh220.667 272.563 mo(\001)sh220.667 272.606 mo(\001)sh220.667 272.655 mo(\001)sh220.667 274.858 mo(\001)sh223.68 266.836 mo(\001)sh223.68 269.161 mo(\001)sh223.68 269.637 mo(\001)sh223.68 269.843 mo(\001)sh223.68 269.957 mo(\001)sh223.68 270.028 mo(\001)sh223.68 270.077 mo(\001)sh223.68 270.111 mo(\001)sh223.68 270.139 mo(\001)sh223.68 270.16 mo(\001)sh223.68 270.177 mo(\001)sh223.68 270.192 mo(\001)sh223.68 270.205 mo(\001)sh223.68 270.217 mo(\001)sh223.68 270.228 mo(\001)sh223.68 270.238 mo(\001)sh223.68 270.248 mo(\001)sh223.68 270.257 mo(\001)sh223.68 270.267 mo(\001)sh223.68 270.276 mo(\001)sh223.68 270.286 mo(\001)sh223.68 270.295 mo(\001)sh223.68 270.304 mo(\001)sh223.68 270.314 mo(\001)sh223.68 270.324 mo(\001)sh223.68 270.334 mo(\001)sh223.68 270.344 mo(\001)sh223.68 270.355 mo(\001)sh223.68 270.366 mo(\001)sh223.68 270.378 mo(\001)sh223.68 270.389 mo(\001)sh223.68 270.402 mo(\001)sh223.68 270.414 mo(\001)sh223.68 270.428 mo(\001)sh223.68 270.443 mo(\001)sh223.68 270.457 mo(\001)sh223.68 270.473 mo(\001)sh223.68 270.49 mo(\001)sh223.68 270.508 mo(\001)sh223.68 270.528 mo(\001)sh223.68 270.549 mo(\001)sh223.68 270.571 mo(\001)sh223.68 270.596 mo(\001)sh223.68 270.624 mo(\001)sh223.68 270.654 mo(\001)sh223.68 270.688 mo(\001)sh223.68 270.727 mo(\001)sh223.68 270.771 mo(\001)sh223.68 270.821 mo(\001)sh223.68 273.064 mo(\001)sh226.692 264.928 mo(\001)sh226.692 267.296 mo(\001)sh226.692 267.781 mo(\001)sh226.692 267.991 mo(\001)sh226.692 268.107 mo(\001)sh226.692 268.178 mo(\001)sh226.692 268.228 mo(\001)sh226.692 268.264 mo(\001)sh226.692 268.291 mo(\001)sh226.692 268.313 mo(\001)sh226.692 268.331 mo(\001)sh226.692 268.346 mo(\001)sh226.692 268.359 mo(\001)sh226.692 268.371 mo(\001)sh226.692 268.382 mo(\001)sh226.692 268.393 mo(\001)sh226.692 268.403 mo(\001)sh226.692 268.412 mo(\001)sh226.692 268.422 mo(\001)sh226.692 268.432 mo(\001)sh226.692 268.441 mo(\001)sh226.692 268.45 mo(\001)sh226.692 268.461 mo(\001)sh226.692 268.47 mo(\001)sh226.692 268.48 mo(\001)sh226.692 268.49 mo(\001)sh226.692 268.501 mo(\001)sh226.692 268.512 mo(\001)sh226.692 268.523 mo(\001)sh226.692 268.535 mo(\001)sh226.692 268.546 mo(\001)sh226.692 268.559 mo(\001)sh226.692 268.572 mo(\001)sh226.692 268.586 mo(\001)sh226.692 268.6 mo(\001)sh226.692 268.616 mo(\001)sh226.692 268.632 mo(\001)sh226.692 268.65 mo(\001)sh226.692 268.668 mo(\001)sh226.692 268.688 mo(\001)sh226.692 268.709 mo(\001)sh226.692 268.732 mo(\001)sh226.692 268.757 mo(\001)sh226.692 268.786 mo(\001)sh226.692 268.816 mo(\001)sh226.692 268.851 mo(\001)sh226.692 268.89 mo(\001)sh226.692 268.935 mo(\001)sh226.692 268.986 mo(\001)sh226.692 271.27 mo(\001)sh229.705 263.021 mo(\001)sh229.705 265.431 mo(\001)sh229.705 265.925 mo(\001)sh229.705 266.138 mo(\001)sh229.705 266.256 mo(\001)sh229.705 266.329 mo(\001)sh229.705 266.38 mo(\001)sh229.705 266.416 mo(\001)sh229.705 266.444 mo(\001)sh229.705 266.466 mo(\001)sh229.705 266.484 mo(\001)sh229.705 266.5 mo(\001)sh229.705 266.513 mo(\001)sh229.705 266.525 mo(\001)sh229.705 266.536 mo(\001)sh229.705 266.547 mo(\001)sh229.705 266.557 mo(\001)sh229.705 266.568 mo(\001)sh229.705 266.577 mo(\001)sh229.705 266.587 mo(\001)sh229.705 266.596 mo(\001)sh229.705 266.606 mo(\001)sh229.705 266.616 mo(\001)sh229.705 266.626 mo(\001)sh229.705 266.636 mo(\001)sh229.705 266.646 mo(\001)sh229.705 266.657 mo(\001)sh229.705 266.668 mo(\001)sh229.705 266.68 mo(\001)sh229.705 266.692 mo(\001)sh229.705 266.704 mo(\001)sh229.705 266.717 mo(\001)sh229.705 266.73 mo(\001)sh229.705 266.744 mo(\001)sh229.705 266.759 mo(\001)sh229.705 266.775 mo(\001)sh229.705 266.791 mo(\001)sh229.705 266.809 mo(\001)sh229.705 266.828 mo(\001)sh229.705 266.847 mo(\001)sh229.705 266.869 mo(\001)sh229.705 266.893 mo(\001)sh229.705 266.918 mo(\001)sh229.705 266.947 mo(\001)sh229.705 266.978 mo(\001)sh229.705 267.014 mo(\001)sh229.705 267.053 mo(\001)sh229.705 267.099 mo(\001)sh229.705 267.151 mo(\001)sh229.705 269.476 mo(\001)sh232.718 261.114 mo(\001)sh232.718 263.566 mo(\001)sh232.718 264.068 mo(\001)sh232.718 264.286 mo(\001)sh232.718 264.405 mo(\001)sh232.718 264.48 mo(\001)sh232.718 264.532 mo(\001)sh232.718 264.568 mo(\001)sh232.718 264.596 mo(\001)sh232.718 264.619 mo(\001)sh232.718 264.638 mo(\001)sh232.718 264.654 mo(\001)sh232.718 264.667 mo(\001)sh232.718 264.679 mo(\001)sh232.718 264.691 mo(\001)sh232.718 264.702 mo(\001)sh232.718 264.712 mo(\001)sh232.718 264.722 mo(\001)sh232.718 264.732 mo(\001)sh232.718 264.742 mo(\001)sh232.718 264.752 mo(\001)sh232.718 264.762 mo(\001)sh232.718 264.772 mo(\001)sh232.718 264.782 mo(\001)sh232.718 264.793 mo(\001)sh232.718 264.803 mo(\001)sh232.718 264.814 mo(\001)sh232.718 264.825 mo(\001)sh232.718 264.837 mo(\001)sh232.718 264.849 mo(\001)sh232.718 264.861 mo(\001)sh232.718 264.875 mo(\001)sh232.718 264.888 mo(\001)sh232.718 264.903 mo(\001)sh232.718 264.918 mo(\001)sh232.718 264.933 mo(\001)sh232.718 264.95 mo(\001)sh232.718 264.968 mo(\001)sh232.718 264.987 mo(\001)sh232.718 265.007 mo(\001)sh232.718 265.029 mo(\001)sh232.718 265.053 mo(\001)sh232.718 265.08 mo(\001)sh232.718 265.108 mo(\001)sh232.718 265.14 mo(\001)sh232.718 265.176 mo(\001)sh232.718 265.217 mo(\001)sh232.718 265.264 mo(\001)sh232.718 265.316 mo(\001)sh232.718 267.682 mo(\001)sh235.731 259.207 mo(\001)sh235.731 261.701 mo(\001)sh235.731 262.212 mo(\001)sh235.731 262.433 mo(\001)sh235.731 262.555 mo(\001)sh235.731 262.631 mo(\001)sh235.731 262.683 mo(\001)sh235.731 262.721 mo(\001)sh235.731 262.75 mo(\001)sh235.731 262.772 mo(\001)sh235.731 262.791 mo(\001)sh235.731 262.807 mo(\001)sh235.731 262.821 mo(\001)sh235.731 262.833 mo(\001)sh235.731 262.845 mo(\001)sh235.731 262.857 mo(\001)sh235.731 262.867 mo(\001)sh235.731 262.877 mo(\001)sh235.731 262.887 mo(\001)sh235.731 262.897 mo(\001)sh235.731 262.908 mo(\001)sh235.731 262.918 mo(\001)sh235.731 262.928 mo(\001)sh235.731 262.938 mo(\001)sh235.731 262.949 mo(\001)sh235.731 262.96 mo(\001)sh235.731 262.971 mo(\001)sh235.731 262.982 mo(\001)sh235.731 262.994 mo(\001)sh235.731 263.006 mo(\001)sh235.731 263.019 mo(\001)sh235.731 263.033 mo(\001)sh235.731 263.046 mo(\001)sh235.731 263.061 mo(\001)sh235.731 263.075 mo(\001)sh235.731 263.092 mo(\001)sh235.731 263.109 mo(\001)sh235.731 263.127 mo(\001)sh235.731 263.147 mo(\001)sh235.731 263.168 mo(\001)sh235.731 263.19 mo(\001)sh235.731 263.215 mo(\001)sh235.731 263.241 mo(\001)sh235.731 263.27 mo(\001)sh235.731 263.303 mo(\001)sh235.731 263.34 mo(\001)sh235.731 263.381 mo(\001)sh235.731 263.428 mo(\001)sh235.731 263.482 mo(\001)sh235.731 265.888 mo(\001)sh238.743 257.3 mo(\001)sh238.743 259.836 mo(\001)sh238.743 260.356 mo(\001)sh238.743 260.58 mo(\001)sh238.743 260.704 mo(\001)sh238.743 260.782 mo(\001)sh238.743 260.835 mo(\001)sh238.743 260.873 mo(\001)sh238.743 260.903 mo(\001)sh238.743 260.925 mo(\001)sh238.743 260.944 mo(\001)sh238.743 260.961 mo(\001)sh238.743 260.975 mo(\001)sh238.743 260.988 mo(\001)sh238.743 261 mo(\001)sh238.743 261.011 mo(\001)sh238.743 261.022 mo(\001)sh238.743 261.032 mo(\001)sh238.743 261.043 mo(\001)sh238.743 261.053 mo(\001)sh238.743 261.063 mo(\001)sh238.743 261.073 mo(\001)sh238.743 261.083 mo(\001)sh238.743 261.094 mo(\001)sh238.743 261.105 mo(\001)sh238.743 261.116 mo(\001)sh238.743 261.127 mo(\001)sh238.743 261.139 mo(\001)sh238.743 261.151 mo(\001)sh238.743 261.163 mo(\001)sh238.743 261.176 mo(\001)sh238.743 261.19 mo(\001)sh238.743 261.204 mo(\001)sh238.743 261.218 mo(\001)sh238.743 261.234 mo(\001)sh238.743 261.25 mo(\001)sh238.743 261.268 mo(\001)sh238.743 261.286 mo(\001)sh238.743 261.306 mo(\001)sh238.743 261.327 mo(\001)sh238.743 261.35 mo(\001)sh238.743 261.375 mo(\001)sh238.743 261.402 mo(\001)sh238.743 261.432 mo(\001)sh238.743 261.465 mo(\001)sh238.743 261.502 mo(\001)sh238.743 261.544 mo(\001)sh238.743 261.592 mo(\001)sh238.743 261.647 mo(\001)sh238.743 264.094 mo(\001)sh241.756 255.393 mo(\001)sh241.756 257.972 mo(\001)sh241.756 258.5 mo(\001)sh241.756 258.728 mo(\001)sh241.756 258.854 mo(\001)sh241.756 258.933 mo(\001)sh241.756 258.986 mo(\001)sh241.756 259.025 mo(\001)sh241.756 259.055 mo(\001)sh241.756 259.079 mo(\001)sh241.756 259.098 mo(\001)sh241.756 259.115 mo(\001)sh241.756 259.129 mo(\001)sh241.756 259.142 mo(\001)sh241.756 259.154 mo(\001)sh241.756 259.165 mo(\001)sh241.756 259.176 mo(\001)sh241.756 259.187 mo(\001)sh241.756 259.197 mo(\001)sh241.756 259.208 mo(\001)sh241.756 259.218 mo(\001)sh241.756 259.229 mo(\001)sh241.756 259.24 mo(\001)sh241.756 259.251 mo(\001)sh241.756 259.261 mo(\001)sh241.756 259.272 mo(\001)sh241.756 259.284 mo(\001)sh241.756 259.296 mo(\001)sh241.756 259.308 mo(\001)sh241.756 259.321 mo(\001)sh241.756 259.333 mo(\001)sh241.756 259.347 mo(\001)sh241.756 259.361 mo(\001)sh241.756 259.377 mo(\001)sh241.756 259.393 mo(\001)sh241.756 259.409 mo(\001)sh241.756 259.427 mo(\001)sh241.756 259.446 mo(\001)sh241.756 259.465 mo(\001)sh241.756 259.487 mo(\001)sh241.756 259.511 mo(\001)sh241.756 259.536 mo(\001)sh241.756 259.563 mo(\001)sh241.756 259.594 mo(\001)sh241.756 259.627 mo(\001)sh241.756 259.665 mo(\001)sh241.756 259.708 mo(\001)sh241.756 259.757 mo(\001)sh241.756 259.812 mo(\001)sh241.756 262.3 mo(\001)sh244.769 253.485 mo(\001)sh244.769 256.107 mo(\001)sh244.769 256.643 mo(\001)sh244.769 256.876 mo(\001)sh244.769 257.004 mo(\001)sh244.769 257.084 mo(\001)sh244.769 257.139 mo(\001)sh244.769 257.178 mo(\001)sh244.769 257.208 mo(\001)sh244.769 257.232 mo(\001)sh244.769 257.251 mo(\001)sh244.769 257.268 mo(\001)sh244.769 257.283 mo(\001)sh244.769 257.297 mo(\001)sh244.769 257.308 mo(\001)sh244.769 257.32 mo(\001)sh244.769 257.332 mo(\001)sh244.769 257.342 mo(\001)sh244.769 257.353 mo(\001)sh244.769 257.364 mo(\001)sh244.769 257.374 mo(\001)sh244.769 257.385 mo(\001)sh244.769 257.395 mo(\001)sh244.769 257.406 mo(\001)sh244.769 257.418 mo(\001)sh244.769 257.429 mo(\001)sh244.769 257.44 mo(\001)sh244.769 257.452 mo(\001)sh244.769 257.465 mo(\001)sh244.769 257.478 mo(\001)sh244.769 257.491 mo(\001)sh244.769 257.505 mo(\001)sh244.769 257.519 mo(\001)sh244.769 257.535 mo(\001)sh244.769 257.551 mo(\001)sh244.769 257.568 mo(\001)sh244.769 257.586 mo(\001)sh244.769 257.604 mo(\001)sh244.769 257.626 mo(\001)sh244.769 257.647 mo(\001)sh244.769 257.671 mo(\001)sh244.769 257.697 mo(\001)sh244.769 257.725 mo(\001)sh244.769 257.755 mo(\001)sh244.769 257.79 mo(\001)sh244.769 257.828 mo(\001)sh244.769 257.872 mo(\001)sh244.769 257.921 mo(\001)sh244.769 257.977 mo(\001)sh244.769 260.506 mo(\001)sh247.782 251.578 mo(\001)sh247.782 254.242 mo(\001)sh247.782 254.787 mo(\001)sh247.782 255.023 mo(\001)sh247.782 255.153 mo(\001)sh247.782 255.235 mo(\001)sh247.782 255.29 mo(\001)sh247.782 255.33 mo(\001)sh247.782 255.361 mo(\001)sh247.782 255.385 mo(\001)sh247.782 255.405 mo(\001)sh247.782 255.423 mo(\001)sh247.782 255.437 mo(\001)sh247.782 255.451 mo(\001)sh247.782 255.463 mo(\001)sh247.782 255.475 mo(\001)sh247.782 255.487 mo(\001)sh247.782 255.497 mo(\001)sh247.782 255.508 mo(\001)sh247.782 255.519 mo(\001)sh247.782 255.53 mo(\001)sh247.782 255.54 mo(\001)sh247.782 255.551 mo(\001)sh247.782 255.562 mo(\001)sh247.782 255.573 mo(\001)sh247.782 255.585 mo(\001)sh247.782 255.597 mo(\001)sh247.782 255.609 mo(\001)sh247.782 255.622 mo(\001)sh247.782 255.635 mo(\001)sh247.782 255.648 mo(\001)sh247.782 255.662 mo(\001)sh247.782 255.677 mo(\001)sh247.782 255.693 mo(\001)sh247.782 255.709 mo(\001)sh247.782 255.726 mo(\001)sh247.782 255.744 mo(\001)sh247.782 255.764 mo(\001)sh247.782 255.785 mo(\001)sh247.782 255.807 mo(\001)sh247.782 255.831 mo(\001)sh247.782 255.857 mo(\001)sh247.782 255.886 mo(\001)sh247.782 255.917 mo(\001)sh247.782 255.951 mo(\001)sh247.782 255.99 mo(\001)sh247.782 256.035 mo(\001)sh247.782 256.085 mo(\001)sh247.782 256.142 mo(\001)sh247.782 258.712 mo(\001)sh250.794 249.671 mo(\001)sh250.794 252.376 mo(\001)sh250.794 252.931 mo(\001)sh250.794 253.17 mo(\001)sh250.794 253.302 mo(\001)sh250.794 253.386 mo(\001)sh250.794 253.442 mo(\001)sh250.794 253.483 mo(\001)sh250.794 253.514 mo(\001)sh250.794 253.538 mo(\001)sh250.794 253.558 mo(\001)sh250.794 253.576 mo(\001)sh250.794 253.591 mo(\001)sh250.794 253.605 mo(\001)sh250.794 253.618 mo(\001)sh250.794 253.63 mo(\001)sh250.794 253.641 mo(\001)sh250.794 253.652 mo(\001)sh250.794 253.663 mo(\001)sh250.794 253.674 mo(\001)sh250.794 253.685 mo(\001)sh250.794 253.696 mo(\001)sh250.794 253.707 mo(\001)sh250.794 253.719 mo(\001)sh250.794 253.73 mo(\001)sh250.794 253.741 mo(\001)sh250.794 253.754 mo(\001)sh250.794 253.766 mo(\001)sh250.794 253.779 mo(\001)sh250.794 253.792 mo(\001)sh250.794 253.806 mo(\001)sh250.794 253.82 mo(\001)sh250.794 253.835 mo(\001)sh250.794 253.851 mo(\001)sh250.794 253.868 mo(\001)sh250.794 253.885 mo(\001)sh250.794 253.904 mo(\001)sh250.794 253.923 mo(\001)sh250.794 253.944 mo(\001)sh250.794 253.967 mo(\001)sh250.794 253.991 mo(\001)sh250.794 254.018 mo(\001)sh250.794 254.047 mo(\001)sh250.794 254.079 mo(\001)sh250.794 254.114 mo(\001)sh250.794 254.154 mo(\001)sh250.794 254.198 mo(\001)sh250.794 254.249 mo(\001)sh250.794 254.308 mo(\001)sh250.794 256.918 mo(\001)sh253.806 247.764 mo(\001)sh253.806 250.512 mo(\001)sh253.806 251.075 mo(\001)sh253.806 251.318 mo(\001)sh253.806 251.452 mo(\001)sh253.806 251.537 mo(\001)sh253.806 251.594 mo(\001)sh253.806 251.635 mo(\001)sh253.806 251.667 mo(\001)sh253.806 251.692 mo(\001)sh253.806 251.712 mo(\001)sh253.806 251.73 mo(\001)sh253.806 251.745 mo(\001)sh253.806 251.759 mo(\001)sh253.806 251.772 mo(\001)sh253.806 251.784 mo(\001)sh253.806 251.796 mo(\001)sh253.806 251.807 mo(\001)sh253.806 251.819 mo(\001)sh253.806 251.83 mo(\001)sh253.806 251.841 mo(\001)sh253.806 251.852 mo(\001)sh253.806 251.863 mo(\001)sh253.806 251.874 mo(\001)sh253.806 251.886 mo(\001)sh253.806 251.898 mo(\001)sh253.806 251.91 mo(\001)sh253.806 251.923 mo(\001)sh253.806 251.936 mo(\001)sh253.806 251.949 mo(\001)sh253.806 251.963 mo(\001)sh253.806 251.978 mo(\001)sh253.806 251.993 mo(\001)sh253.806 252.009 mo(\001)sh253.806 252.026 mo(\001)sh253.806 252.044 mo(\001)sh253.806 252.062 mo(\001)sh253.806 252.083 mo(\001)sh253.806 252.104 mo(\001)sh253.806 252.127 mo(\001)sh253.806 252.152 mo(\001)sh253.806 252.179 mo(\001)sh253.806 252.208 mo(\001)sh253.806 252.241 mo(\001)sh253.806 252.277 mo(\001)sh253.806 252.316 mo(\001)sh253.806 252.362 mo(\001)sh253.806 252.414 mo(\001)sh253.806 252.473 mo(\001)sh253.806 255.124 mo(\001)sh256.819 245.856 mo(\001)sh256.819 248.647 mo(\001)sh256.819 249.218 mo(\001)sh256.819 249.466 mo(\001)sh256.819 249.602 mo(\001)sh256.819 249.688 mo(\001)sh256.819 249.745 mo(\001)sh256.819 249.787 mo(\001)sh256.819 249.82 mo(\001)sh256.819 249.845 mo(\001)sh256.819 249.866 mo(\001)sh256.819 249.884 mo(\001)sh256.819 249.899 mo(\001)sh256.819 249.913 mo(\001)sh256.819 249.927 mo(\001)sh256.819 249.939 mo(\001)sh256.819 249.951 mo(\001)sh256.819 249.962 mo(\001)sh256.819 249.973 mo(\001)sh256.819 249.985 mo(\001)sh256.819 249.996 mo(\001)sh256.819 250.008 mo(\001)sh256.819 250.019 mo(\001)sh256.819 250.03 mo(\001)sh256.819 250.042 mo(\001)sh256.819 250.055 mo(\001)sh256.819 250.067 mo(\001)sh256.819 250.08 mo(\001)sh256.819 250.093 mo(\001)sh256.819 250.106 mo(\001)sh256.819 250.121 mo(\001)sh256.819 250.136 mo(\001)sh256.819 250.151 mo(\001)sh256.819 250.167 mo(\001)sh256.819 250.184 mo(\001)sh256.819 250.202 mo(\001)sh256.819 250.222 mo(\001)sh256.819 250.242 mo(\001)sh256.819 250.263 mo(\001)sh256.819 250.287 mo(\001)sh256.819 250.312 mo(\001)sh256.819 250.339 mo(\001)sh256.819 250.369 mo(\001)sh256.819 250.402 mo(\001)sh256.819 250.438 mo(\001)sh256.819 250.479 mo(\001)sh256.819 250.526 mo(\001)sh256.819 250.578 mo(\001)sh256.819 250.638 mo(\001)sh256.819 253.33 mo(\001)sh259.832 243.949 mo(\001)sh259.832 246.782 mo(\001)sh259.832 247.362 mo(\001)sh259.832 247.613 mo(\001)sh259.832 247.752 mo(\001)sh259.832 247.838 mo(\001)sh259.832 247.897 mo(\001)sh259.832 247.94 mo(\001)sh259.832 247.973 mo(\001)sh259.832 247.998 mo(\001)sh259.832 248.02 mo(\001)sh259.832 248.037 mo(\001)sh259.832 248.053 mo(\001)sh259.832 248.068 mo(\001)sh259.832 248.081 mo(\001)sh259.832 248.094 mo(\001)sh259.832 248.105 mo(\001)sh259.832 248.117 mo(\001)sh259.832 248.129 mo(\001)sh259.832 248.14 mo(\001)sh259.832 248.152 mo(\001)sh259.832 248.163 mo(\001)sh259.832 248.175 mo(\001)sh259.832 248.187 mo(\001)sh259.832 248.198 mo(\001)sh259.832 248.211 mo(\001)sh259.832 248.223 mo(\001)sh259.832 248.237 mo(\001)sh259.832 248.25 mo(\001)sh259.832 248.264 mo(\001)sh259.832 248.278 mo(\001)sh259.832 248.293 mo(\001)sh259.832 248.309 mo(\001)sh259.832 248.326 mo(\001)sh259.832 248.343 mo(\001)sh259.832 248.361 mo(\001)sh259.832 248.38 mo(\001)sh259.832 248.401 mo(\001)sh259.832 248.423 mo(\001)sh259.832 248.447 mo(\001)sh259.832 248.473 mo(\001)sh259.832 248.5 mo(\001)sh259.832 248.53 mo(\001)sh259.832 248.563 mo(\001)sh259.832 248.601 mo(\001)sh259.832 248.642 mo(\001)sh259.832 248.689 mo(\001)sh259.832 248.742 mo(\001)sh259.832 248.803 mo(\001)sh259.832 251.537 mo(\001)sh262.844 242.042 mo(\001)sh262.844 244.917 mo(\001)sh262.844 245.506 mo(\001)sh262.844 245.76 mo(\001)sh262.844 245.901 mo(\001)sh262.844 245.989 mo(\001)sh262.844 246.049 mo(\001)sh262.844 246.092 mo(\001)sh262.844 246.125 mo(\001)sh262.844 246.152 mo(\001)sh262.844 246.173 mo(\001)sh262.844 246.191 mo(\001)sh262.844 246.207 mo(\001)sh262.844 246.222 mo(\001)sh262.844 246.235 mo(\001)sh262.844 246.249 mo(\001)sh262.844 246.26 mo(\001)sh262.844 246.273 mo(\001)sh262.844 246.284 mo(\001)sh262.844 246.295 mo(\001)sh262.844 246.307 mo(\001)sh262.844 246.319 mo(\001)sh262.844 246.331 mo(\001)sh262.844 246.342 mo(\001)sh262.844 246.355 mo(\001)sh262.844 246.367 mo(\001)sh262.844 246.38 mo(\001)sh262.844 246.393 mo(\001)sh262.844 246.407 mo(\001)sh262.844 246.421 mo(\001)sh262.844 246.435 mo(\001)sh262.844 246.451 mo(\001)sh262.844 246.466 mo(\001)sh262.844 246.484 mo(\001)sh262.844 246.501 mo(\001)sh262.844 246.52 mo(\001)sh262.844 246.539 mo(\001)sh262.844 246.56 mo(\001)sh262.844 246.583 mo(\001)sh262.844 246.606 mo(\001)sh262.844 246.633 mo(\001)sh262.844 246.661 mo(\001)sh262.844 246.691 mo(\001)sh262.844 246.725 mo(\001)sh262.844 246.763 mo(\001)sh262.844 246.805 mo(\001)sh262.844 246.852 mo(\001)sh262.844 246.907 mo(\001)sh262.844 246.969 mo(\001)sh262.844 249.742 mo(\001)sh265.857 240.134 mo(\001)sh265.857 243.052 mo(\001)sh265.857 243.649 mo(\001)sh265.857 243.908 mo(\001)sh265.857 244.05 mo(\001)sh265.857 244.14 mo(\001)sh265.857 244.201 mo(\001)sh265.857 244.245 mo(\001)sh265.857 244.278 mo(\001)sh265.857 244.305 mo(\001)sh265.857 244.327 mo(\001)sh265.857 244.345 mo(\001)sh265.857 244.362 mo(\001)sh265.857 244.377 mo(\001)sh265.857 244.39 mo(\001)sh265.857 244.403 mo(\001)sh265.857 244.415 mo(\001)sh265.857 244.427 mo(\001)sh265.857 244.439 mo(\001)sh265.857 244.451 mo(\001)sh265.857 244.463 mo(\001)sh265.857 244.474 mo(\001)sh265.857 244.487 mo(\001)sh265.857 244.499 mo(\001)sh265.857 244.511 mo(\001)sh265.857 244.524 mo(\001)sh265.857 244.537 mo(\001)sh265.857 244.55 mo(\001)sh265.857 244.563 mo(\001)sh265.857 244.578 mo(\001)sh265.857 244.593 mo(\001)sh265.857 244.609 mo(\001)sh265.857 244.624 mo(\001)sh265.857 244.641 mo(\001)sh265.857 244.659 mo(\001)sh265.857 244.678 mo(\001)sh265.857 244.699 mo(\001)sh265.857 244.72 mo(\001)sh265.857 244.742 mo(\001)sh265.857 244.766 mo(\001)sh265.857 244.793 mo(\001)sh265.857 244.821 mo(\001)sh265.857 244.852 mo(\001)sh265.857 244.887 mo(\001)sh265.857 244.925 mo(\001)sh265.857 244.968 mo(\001)sh265.857 245.016 mo(\001)sh265.857 245.071 mo(\001)sh265.857 245.134 mo(\001)sh265.857 247.949 mo(\001)sh268.87 238.227 mo(\001)sh268.87 241.187 mo(\001)sh268.87 241.793 mo(\001)sh268.87 242.056 mo(\001)sh268.87 242.2 mo(\001)sh268.87 242.291 mo(\001)sh268.87 242.352 mo(\001)sh268.87 242.397 mo(\001)sh268.87 242.431 mo(\001)sh268.87 242.458 mo(\001)sh268.87 242.48 mo(\001)sh268.87 242.499 mo(\001)sh268.87 242.516 mo(\001)sh268.87 242.531 mo(\001)sh268.87 242.545 mo(\001)sh268.87 242.557 mo(\001)sh268.87 242.57 mo(\001)sh268.87 242.582 mo(\001)sh268.87 242.595 mo(\001)sh268.87 242.606 mo(\001)sh268.87 242.618 mo(\001)sh268.87 242.63 mo(\001)sh268.87 242.642 mo(\001)sh268.87 242.655 mo(\001)sh268.87 242.667 mo(\001)sh268.87 242.68 mo(\001)sh268.87 242.693 mo(\001)sh268.87 242.706 mo(\001)sh268.87 242.72 mo(\001)sh268.87 242.735 mo(\001)sh268.87 242.75 mo(\001)sh268.87 242.766 mo(\001)sh268.87 242.782 mo(\001)sh268.87 242.8 mo(\001)sh268.87 242.818 mo(\001)sh268.87 242.837 mo(\001)sh268.87 242.857 mo(\001)sh268.87 242.879 mo(\001)sh268.87 242.902 mo(\001)sh268.87 242.927 mo(\001)sh268.87 242.953 mo(\001)sh268.87 242.982 mo(\001)sh268.87 243.013 mo(\001)sh268.87 243.049 mo(\001)sh268.87 243.088 mo(\001)sh268.87 243.131 mo(\001)sh268.87 243.18 mo(\001)sh268.87 243.235 mo(\001)sh268.87 243.299 mo(\001)sh268.87 246.155 mo(\001)sh271.883 236.32 mo(\001)sh271.883 239.322 mo(\001)sh271.883 239.937 mo(\001)sh271.883 240.202 mo(\001)sh271.883 240.349 mo(\001)sh271.883 240.441 mo(\001)sh271.883 240.504 mo(\001)sh271.883 240.549 mo(\001)sh271.883 240.584 mo(\001)sh271.883 240.611 mo(\001)sh271.883 240.634 mo(\001)sh271.883 240.652 mo(\001)sh271.883 240.67 mo(\001)sh271.883 240.685 mo(\001)sh271.883 240.699 mo(\001)sh271.883 240.712 mo(\001)sh271.883 240.725 mo(\001)sh271.883 240.738 mo(\001)sh271.883 240.749 mo(\001)sh271.883 240.762 mo(\001)sh271.883 240.774 mo(\001)sh271.883 240.786 mo(\001)sh271.883 240.798 mo(\001)sh271.883 240.81 mo(\001)sh271.883 240.824 mo(\001)sh271.883 240.836 mo(\001)sh271.883 240.849 mo(\001)sh271.883 240.863 mo(\001)sh271.883 240.878 mo(\001)sh271.883 240.892 mo(\001)sh271.883 240.908 mo(\001)sh271.883 240.924 mo(\001)sh271.883 240.94 mo(\001)sh271.883 240.958 mo(\001)sh271.883 240.976 mo(\001)sh271.883 240.995 mo(\001)sh271.883 241.016 mo(\001)sh271.883 241.038 mo(\001)sh271.883 241.061 mo(\001)sh271.883 241.086 mo(\001)sh271.883 241.113 mo(\001)sh271.883 241.143 mo(\001)sh271.883 241.175 mo(\001)sh271.883 241.21 mo(\001)sh271.883 241.249 mo(\001)sh271.883 241.293 mo(\001)sh271.883 241.343 mo(\001)sh271.883 241.4 mo(\001)sh271.883 241.464 mo(\001)sh271.883 244.36 mo(\001)sh274.895 234.413 mo(\001)sh274.895 237.457 mo(\001)sh274.895 238.081 mo(\001)sh274.895 238.35 mo(\001)sh274.895 238.499 mo(\001)sh274.895 238.592 mo(\001)sh274.895 238.656 mo(\001)sh274.895 238.702 mo(\001)sh274.895 238.737 mo(\001)sh274.895 238.764 mo(\001)sh274.895 238.787 mo(\001)sh274.895 238.806 mo(\001)sh274.895 238.824 mo(\001)sh274.895 238.839 mo(\001)sh274.895 238.853 mo(\001)sh274.895 238.867 mo(\001)sh274.895 238.88 mo(\001)sh274.895 238.892 mo(\001)sh274.895 238.905 mo(\001)sh274.895 238.917 mo(\001)sh274.895 238.929 mo(\001)sh274.895 238.942 mo(\001)sh274.895 238.954 mo(\001)sh274.895 238.967 mo(\001)sh274.895 238.98 mo(\001)sh274.895 238.992 mo(\001)sh274.895 239.006 mo(\001)sh274.895 239.02 mo(\001)sh274.895 239.035 mo(\001)sh274.895 239.049 mo(\001)sh274.895 239.065 mo(\001)sh274.895 239.081 mo(\001)sh274.895 239.098 mo(\001)sh274.895 239.116 mo(\001)sh274.895 239.135 mo(\001)sh274.895 239.154 mo(\001)sh274.895 239.175 mo(\001)sh274.895 239.197 mo(\001)sh274.895 239.221 mo(\001)sh274.895 239.246 mo(\001)sh274.895 239.274 mo(\001)sh274.895 239.303 mo(\001)sh274.895 239.336 mo(\001)sh274.895 239.372 mo(\001)sh274.895 239.412 mo(\001)sh274.895 239.456 mo(\001)sh274.895 239.506 mo(\001)sh274.895 239.564 mo(\001)sh274.895 239.63 mo(\001)sh274.895 242.567 mo(\001)sh277.908 232.506 mo(\001)sh277.908 235.592 mo(\001)sh277.908 236.224 mo(\001)sh277.908 236.498 mo(\001)sh277.908 236.649 mo(\001)sh277.908 236.743 mo(\001)sh277.908 236.807 mo(\001)sh277.908 236.854 mo(\001)sh277.908 236.889 mo(\001)sh277.908 236.917 mo(\001)sh277.908 236.941 mo(\001)sh277.908 236.96 mo(\001)sh277.908 236.977 mo(\001)sh277.908 236.993 mo(\001)sh277.908 237.008 mo(\001)sh277.908 237.021 mo(\001)sh277.908 237.035 mo(\001)sh277.908 237.047 mo(\001)sh277.908 237.06 mo(\001)sh277.908 237.072 mo(\001)sh277.908 237.085 mo(\001)sh277.908 237.097 mo(\001)sh277.908 237.11 mo(\001)sh277.908 237.123 mo(\001)sh277.908 237.135 mo(\001)sh277.908 237.149 mo(\001)sh277.908 237.163 mo(\001)sh277.908 237.177 mo(\001)sh277.908 237.192 mo(\001)sh277.908 237.206 mo(\001)sh277.908 237.223 mo(\001)sh277.908 237.239 mo(\001)sh277.908 237.256 mo(\001)sh277.908 237.274 mo(\001)sh277.908 237.293 mo(\001)sh277.908 237.313 mo(\001)sh277.908 237.334 mo(\001)sh277.908 237.356 mo(\001)sh277.908 237.381 mo(\001)sh277.908 237.406 mo(\001)sh277.908 237.434 mo(\001)sh277.908 237.464 mo(\001)sh277.908 237.497 mo(\001)sh277.908 237.534 mo(\001)sh277.908 237.574 mo(\001)sh277.908 237.619 mo(\001)sh277.908 237.671 mo(\001)sh277.908 237.728 mo(\001)sh277.908 237.795 mo(\001)sh277.908 240.773 mo(\001)sh280.921 230.599 mo(\001)sh280.921 233.728 mo(\001)sh280.921 234.368 mo(\001)sh280.921 234.646 mo(\001)sh280.921 234.798 mo(\001)sh280.921 234.894 mo(\001)sh280.921 234.959 mo(\001)sh280.921 235.006 mo(\001)sh280.921 235.042 mo(\001)sh280.921 235.071 mo(\001)sh280.921 235.094 mo(\001)sh280.921 235.114 mo(\001)sh280.921 235.131 mo(\001)sh280.921 235.148 mo(\001)sh280.921 235.162 mo(\001)sh280.921 235.176 mo(\001)sh280.921 235.189 mo(\001)sh280.921 235.203 mo(\001)sh280.921 235.215 mo(\001)sh280.921 235.228 mo(\001)sh280.921 235.24 mo(\001)sh280.921 235.253 mo(\001)sh280.921 235.266 mo(\001)sh280.921 235.278 mo(\001)sh280.921 235.292 mo(\001)sh280.921 235.306 mo(\001)sh280.921 235.32 mo(\001)sh280.921 235.334 mo(\001)sh280.921 235.349 mo(\001)sh280.921 235.364 mo(\001)sh280.921 235.38 mo(\001)sh280.921 235.396 mo(\001)sh280.921 235.414 mo(\001)sh280.921 235.432 mo(\001)sh280.921 235.451 mo(\001)sh280.921 235.471 mo(\001)sh280.921 235.493 mo(\001)sh280.921 235.516 mo(\001)sh280.921 235.54 mo(\001)sh280.921 235.566 mo(\001)sh280.921 235.594 mo(\001)sh280.921 235.625 mo(\001)sh280.921 235.658 mo(\001)sh280.921 235.696 mo(\001)sh280.921 235.736 mo(\001)sh280.921 235.782 mo(\001)sh280.921 235.834 mo(\001)sh280.921 235.892 mo(\001)sh280.921 235.96 mo(\001)sh280.921 238.978 mo(\001)sh283.933 228.692 mo(\001)sh283.933 231.863 mo(\001)sh283.933 232.512 mo(\001)sh283.933 232.792 mo(\001)sh283.933 232.947 mo(\001)sh283.933 233.045 mo(\001)sh283.933 233.11 mo(\001)sh283.933 233.159 mo(\001)sh283.933 233.195 mo(\001)sh283.933 233.224 mo(\001)sh283.933 233.248 mo(\001)sh283.933 233.268 mo(\001)sh283.933 233.285 mo(\001)sh283.933 233.302 mo(\001)sh283.933 233.317 mo(\001)sh283.933 233.331 mo(\001)sh283.933 233.344 mo(\001)sh283.933 233.357 mo(\001)sh283.933 233.37 mo(\001)sh283.933 233.383 mo(\001)sh283.933 233.396 mo(\001)sh283.933 233.409 mo(\001)sh283.933 233.421 mo(\001)sh283.933 233.435 mo(\001)sh283.933 233.448 mo(\001)sh283.933 233.462 mo(\001)sh283.933 233.476 mo(\001)sh283.933 233.491 mo(\001)sh283.933 233.506 mo(\001)sh283.933 233.521 mo(\001)sh283.933 233.537 mo(\001)sh283.933 233.554 mo(\001)sh283.933 233.572 mo(\001)sh283.933 233.59 mo(\001)sh283.933 233.61 mo(\001)sh283.933 233.63 mo(\001)sh283.933 233.652 mo(\001)sh283.933 233.675 mo(\001)sh283.933 233.7 mo(\001)sh283.933 233.726 mo(\001)sh283.933 233.755 mo(\001)sh283.933 233.785 mo(\001)sh283.933 233.82 mo(\001)sh283.933 233.857 mo(\001)sh283.933 233.899 mo(\001)sh283.933 233.945 mo(\001)sh283.933 233.997 mo(\001)sh283.933 234.057 mo(\001)sh283.933 234.125 mo(\001)sh283.933 237.185 mo(\001)sh286.946 226.785 mo(\001)sh286.946 229.997 mo(\001)sh286.946 230.656 mo(\001)sh286.946 230.94 mo(\001)sh286.946 231.097 mo(\001)sh286.946 231.196 mo(\001)sh286.946 231.263 mo(\001)sh286.946 231.311 mo(\001)sh286.946 231.348 mo(\001)sh286.946 231.377 mo(\001)sh286.946 231.401 mo(\001)sh286.946 231.421 mo(\001)sh286.946 231.44 mo(\001)sh286.946 231.456 mo(\001)sh286.946 231.471 mo(\001)sh286.946 231.485 mo(\001)sh286.946 231.499 mo(\001)sh286.946 231.512 mo(\001)sh286.946 231.525 mo(\001)sh286.946 231.539 mo(\001)sh286.946 231.551 mo(\001)sh286.946 231.564 mo(\001)sh286.946 231.578 mo(\001)sh286.946 231.591 mo(\001)sh286.946 231.604 mo(\001)sh286.946 231.618 mo(\001)sh286.946 231.632 mo(\001)sh286.946 231.647 mo(\001)sh286.946 231.663 mo(\001)sh286.946 231.678 mo(\001)sh286.946 231.695 mo(\001)sh286.946 231.712 mo(\001)sh286.946 231.73 mo(\001)sh286.946 231.748 mo(\001)sh286.946 231.768 mo(\001)sh286.946 231.789 mo(\001)sh286.946 231.81 mo(\001)sh286.946 231.834 mo(\001)sh286.946 231.859 mo(\001)sh286.946 231.886 mo(\001)sh286.946 231.915 mo(\001)sh286.946 231.946 mo(\001)sh286.946 231.981 mo(\001)sh286.946 232.018 mo(\001)sh286.946 232.06 mo(\001)sh286.946 232.107 mo(\001)sh286.946 232.16 mo(\001)sh286.946 232.221 mo(\001)sh286.946 232.29 mo(\001)sh286.946 235.391 mo(\001)sh289.958 224.877 mo(\001)sh289.958 228.132 mo(\001)sh289.958 228.8 mo(\001)sh289.958 229.088 mo(\001)sh289.958 229.246 mo(\001)sh289.958 229.346 mo(\001)sh289.958 229.414 mo(\001)sh289.958 229.464 mo(\001)sh289.958 229.501 mo(\001)sh289.958 229.531 mo(\001)sh289.958 229.555 mo(\001)sh289.958 229.575 mo(\001)sh289.958 229.594 mo(\001)sh289.958 229.611 mo(\001)sh289.958 229.625 mo(\001)sh289.958 229.64 mo(\001)sh289.958 229.654 mo(\001)sh289.958 229.668 mo(\001)sh289.958 229.681 mo(\001)sh289.958 229.693 mo(\001)sh289.958 229.707 mo(\001)sh289.958 229.72 mo(\001)sh289.958 229.733 mo(\001)sh289.958 229.746 mo(\001)sh289.958 229.761 mo(\001)sh289.958 229.775 mo(\001)sh289.958 229.789 mo(\001)sh289.958 229.804 mo(\001)sh289.958 229.82 mo(\001)sh289.958 229.836 mo(\001)sh289.958 229.852 mo(\001)sh289.958 229.869 mo(\001)sh289.958 229.888 mo(\001)sh289.958 229.907 mo(\001)sh289.958 229.926 mo(\001)sh289.958 229.947 mo(\001)sh289.958 229.97 mo(\001)sh289.958 229.993 mo(\001)sh289.958 230.019 mo(\001)sh289.958 230.046 mo(\001)sh289.958 230.075 mo(\001)sh289.958 230.107 mo(\001)sh289.958 230.142 mo(\001)sh289.958 230.18 mo(\001)sh289.958 230.223 mo(\001)sh289.958 230.271 mo(\001)sh289.958 230.325 mo(\001)sh289.958 230.386 mo(\001)sh289.958 230.456 mo(\001)sh289.958 233.596 mo(\001)sh292.971 222.97 mo(\001)sh292.971 226.267 mo(\001)sh292.971 226.943 mo(\001)sh292.971 227.235 mo(\001)sh292.971 227.396 mo(\001)sh292.971 227.497 mo(\001)sh292.971 227.566 mo(\001)sh292.971 227.616 mo(\001)sh292.971 227.653 mo(\001)sh292.971 227.684 mo(\001)sh292.971 227.708 mo(\001)sh292.971 227.729 mo(\001)sh292.971 227.748 mo(\001)sh292.971 227.764 mo(\001)sh292.971 227.78 mo(\001)sh292.971 227.795 mo(\001)sh292.971 227.809 mo(\001)sh292.971 227.822 mo(\001)sh292.971 227.836 mo(\001)sh292.971 227.849 mo(\001)sh292.971 227.862 mo(\001)sh292.971 227.875 mo(\001)sh292.971 227.889 mo(\001)sh292.971 227.903 mo(\001)sh292.971 227.917 mo(\001)sh292.971 227.931 mo(\001)sh292.971 227.946 mo(\001)sh292.971 227.961 mo(\001)sh292.971 227.976 mo(\001)sh292.971 227.993 mo(\001)sh292.971 228.01 mo(\001)sh292.971 228.027 mo(\001)sh292.971 228.046 mo(\001)sh292.971 228.064 mo(\001)sh292.971 228.085 mo(\001)sh292.971 228.106 mo(\001)sh292.971 228.129 mo(\001)sh292.971 228.153 mo(\001)sh292.971 228.179 mo(\001)sh292.971 228.206 mo(\001)sh292.971 228.236 mo(\001)sh292.971 228.268 mo(\001)sh292.971 228.303 mo(\001)sh292.971 228.342 mo(\001)sh292.971 228.385 mo(\001)sh292.971 228.433 mo(\001)sh292.971 228.488 mo(\001)sh292.971 228.55 mo(\001)sh292.971 228.621 mo(\001)sh292.971 231.803 mo(\001)shgrestore
gsave
59.3879 349.526 mo
296.001 349.526 li
296.001 202.651 li
59.3879 202.651 li
cp
clp
59.3879 328.762 mo
59.4605 328.809 li
59.5331 328.855 li
59.6783 328.948 li
59.9681 329.134 li
60.5491 329.505 li
64.0319 331.734 li
69.0671 334.948 li
73.769 337.946 li
78.3778 340.88 li
83.378 344.06 li
83.4506 344.107 li
83.5232 344.153 li
83.6693 344.246 li
83.9613 344.431 li
84.5446 344.802 li
85.7105 345.544 li
85.7839 345.59 li
85.8566 345.636 li
86.0026 345.729 li
86.2939 345.914 li
86.8772 346.284 li
88.0439 347.026 li
88.2016 347.126 li
88.3601 347.227 li
88.6764 347.427 li
89.3081 347.829 li
89.4659 347.929 li
89.6244 348.03 li
89.9399 348.23 li
90.5724 348.632 li
90.7302 348.732 li
90.8887 348.832 li
91.2042 349.033 li
91.2838 349.084 li
91.5204 349.234 li
91.8367 349.434 li
91.9156 349.484 li
91.9945 349.535 li
92.0733 349.585 li
92.153 349.635 li
92.2319 349.638 li
92.5473 349.438 li
92.627 349.387 li
92.7847 349.287 li
93.101 349.087 li
93.2556 348.988 li
93.411 348.89 li
93.721 348.693 li
94.3418 348.298 li
112.406 336.833 li
117.001 333.914 li
121.988 330.745 li
126.641 327.787 li
131.684 324.577 li
136.636 321.423 li
141.253 318.478 li
146.261 315.28 li
150.935 312.292 li
156 309.049 li
160.973 305.862 li
165.613 302.884 li
170.642 299.65 li
175.339 296.627 li
179.943 293.661 li
184.938 290.439 li
189.599 287.429 li
194.65 284.164 li
199.61 280.957 li
213.935 271.689 li
218.526 268.722 li
223.507 265.505 li
228.154 262.508 li
233.193 259.266 li
237.897 256.246 li
242.51 253.295 li
247.513 250.108 li
252.182 247.146 li
257.242 243.955 li
262.209 240.845 li
266.844 237.964 li
271.868 234.867 li
276.56 232.005 li
281.159 229.228 li
286.148 226.252 li
290.804 223.512 li
290.885 223.465 li
290.966 223.418 li
291.129 223.323 li
291.453 223.134 li
292.103 222.755 li
293.403 222.001 li
293.484 221.953 li
293.727 221.812 li
294.052 221.624 li
295.027 221.062 li
295.352 220.875 li
295.677 220.688 li
295.758 220.641 li
296.001 220.501 li
0 .990631 1 .000396735 cmyk
2.424 lw
2 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
grestore
gsave
18 389.37 mo
299.125 389.37 li
299.125 202.651 li
18 202.651 li
cp
clp
296.001 349.662 mo
59.3879 349.662 li
59.3879 349.662 mo
59.3879 203.362 li
59.3879 203.362 mo
296.001 203.362 li
296.001 203.362 mo
296.001 349.662 li
1 /0 /CSD get_res sepcs
1 sep
1.818 lw
2 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
grestore
gsave
18 389.75 mo
299.125 389.75 li
299.125 202.25 li
18 202.25 li
cp
clp
59.3879 349.662 mo
59.3879 346.86 li
1 /0 /CSD get_res sepcs
1 sep
1.818 lw
0 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RUDQMX+Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RUDQMX+Times-Roman def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSK+Times-Roman /RUDQMX+Times-Roman findfont ct_VMDictPut/RQARSK+Times-Roman*1 [48{/.notdef}rp /zero 207{/.notdef}rp]RQARSK+Times-Roman nfRQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf56.2642 361.38 mo(0)sh90.1476 349.662 mo
90.1476 346.86 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RUDQMX+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSK+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSK+Times-Roman /Encoding getdup 46 /period putdup 49 /one putdup 51 /three putpop%ADOEndSubsetFont
/RQARSK+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /.notdef /three 204{/.notdef}rp]RQARSK+Times-Roman nfRQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf79.215 361.38 mo(0.13)sh123.274 349.662 mo
123.274 346.86 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RUDQMX+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSK+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-/seven <1C60D8A8C9B7A73D94A9F40BC631635D93782351ED8A5F0B041154B50ADFD67B52AFA0970AEE10CFF4587FA64B7C1AB4D8B074E00A1BB2BDDE2ECD9CC66A> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSK+Times-Roman /Encoding getdup 50 /two putdup 55 /seven putpop%ADOEndSubsetFont
/RQARSK+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three 3{/.notdef}rp /seven 200{/.notdef}rp]RQARSK+Times-Roman nfRQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf112.341 361.38 mo(0.27)sh177.695 349.662 mo
177.695 346.86 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RUDQMX+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSK+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSK+Times-Roman /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/RQARSK+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /.notdef /five /.notdef /seven 200{/.notdef}rp]RQARSK+Times-Roman nfRQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf169.886 361.38 mo(0.5)sh296.001 349.662 mo
296.001 346.86 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
RQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf292.878 361.38 mo(1)sh59.3879 349.662 mo
62.1882 349.662 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
RQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf47.6743 352.787 mo(0.)[6.24722 0 ]xsh59.3879 328.762 mo
62.1882 328.762 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
RQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf41.4271 331.887 mo(0.1)sh59.3879 307.862 mo
62.1882 307.862 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
RQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf41.4271 310.987 mo(0.2)sh59.3879 286.962 mo
62.1882 286.962 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
RQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf41.4271 290.087 mo(0.3)sh59.3879 266.062 mo
62.1882 266.062 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RUDQMX+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSK+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSK+Times-Roman /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/RQARSK+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /.notdef /seven 200{/.notdef}rp]RQARSK+Times-Roman nfRQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf41.4271 269.187 mo(0.4)sh59.3879 245.162 mo
62.1882 245.162 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
RQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf41.4271 248.287 mo(0.5)sh59.3879 224.262 mo
62.1882 224.262 li
gsave
[.780903 0 0 -.78125 18 389.75 ]ct
@
grestore newpath
%ADOBeginSubsetFont: RUDQMX+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSK+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSK+Times-Roman /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/RQARSK+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven 200{/.notdef}rp]RQARSK+Times-Roman nfRQARSK+Times-Roman*1 [12.4944 0 0 -12.5 0 0 ]msf41.4271 227.387 mo(0.6)sh%ADOBeginSubsetFont: IVOBAA+Times-Italic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /IVOBAA+Times-Italic def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 86 /V putdef/FontBBox {-296 -413 1661 1205} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31EFC3300D63209ED6> |-/V <1C60D8A8C9B7D8BE3608624D2E2C88F5CF4A70D70F922254294D4246E4992890E83912C9D277D839E8549B7E23CB1C1DB720D7BF2ED2D492CC859DBA8E17665B85A68E7999B2A89726750B2B5414E8362200332AF4E80BD3F832BC7BBE3202B23A5B0AFC0583925A8233FF3358669834B822CFD7B900D78F2BFCBB39D4AD42C8121D36> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSL+Times-Italic /IVOBAA+Times-Italic findfont ct_VMDictPut/RQARSL+Times-Italic*1 [86{/.notdef}rp /V 169{/.notdef}rp]RQARSL+Times-Italic nfRQARSL+Times-Italic*1 [18.7417 0 0 -18.75 0 0 ]msf166.574 385.062 mo(V)sh173.149 370.755 mo
167.292 370.755 li
167.292 371.488 li
180.568 371.488 li
180.568 370.755 li
174.711 370.755 li
ef
%ADOBeginSubsetFont: LJPQMX+Mathematica1 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /LJPQMX+Mathematica1 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 1 /Nu putdup 2 /Omega putdef/UniqueID 5095641 def/FontBBox {-120 -220 1544 923} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-16 -0 444 468 662 677] def/OtherBlues [-209 -203] def/BlueScale 0.0416717 def/StdHW [105.845] def/StdVW [74.4189] def/StemSnapH [65.5429 105.845] def/StemSnapV [58.4069 74.4189] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/Nu <1C60D8A8C9B74F36160043BEECF3E5C758D2EB92BB98F2DD9E5E4E0C64312697868A81EFF17CA27779B07D119653AAB4FB5FCDACB27D7A6D0A0C677900F63C1C06D8A7F522CDE1DF369F1BEA9C4651B8F3FA7AF9408821317A3ED4B87474DC2D8AFDD73D546F0920BFFC62A21A50FA2FC1E8621C> |-/Omega <1C60D8A8C9B6269C545E80EBD2C5AF738CF9980B8999FEEF1136515CC36CE92F099B7CB37D440E68058AC72D651E96090932C94688C77020047990EDFD8A8487DBF248A19E7A587CB1915E4F80777FB1B5B6589590F4907D0324D921DD008CB510361571F752E52BDAF1E8411823CD7BB55F03A7B6913B5C3227CCFFA08BC6EF7C834C59D611AA9F45BD08998BD205D977FDB72D1582EB5E4A8827B59E5AA41E192D5DB17C1814F060> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSM+Mathematica1 /LJPQMX+Mathematica1 findfont ct_VMDictPut/RQARSM+Mathematica1*1 [/.notdef /Nu /Omega 253{/.notdef}rp]RQARSM+Mathematica1 nfRQARSM+Mathematica1*1 [18.7417 0 0 -18.75 0 0 ]msf180.177 385.062 mo(\001)shRQARSM+Mathematica1*1 [0 -18.75 -18.7417 0 0 0 ]msf32.0563 295.596 mo(\002)sh%ADOBeginSubsetFont: KRBAAA+Mathematica2 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /KRBAAA+Mathematica2 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 1 /Slash1 putdef/UniqueID 5095653 def/FontBBox {-13 -4075 2499 2436} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-587 -586 888 893] def/BlueScale 0.199996 def/StdHW [0] def/StdVW [0] def/StemSnapH [0] def/StemSnapV [0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/Slash1 <1C60D8A8C9B82F05F6484DDAF768983B429CE2BE2E9BAF7B> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSN+Mathematica2 /KRBAAA+Mathematica2 findfont ct_VMDictPut/RQARSN+Mathematica2*1 [/.notdef /Slash1 254{/.notdef}rp]RQARSN+Mathematica2 nfRQARSN+Mathematica2*1 [0 -18.75 -18.7417 0 0 0 ]msf32.0563 282.642 mo(\001)shRQARSM+Mathematica1*1 [0 -18.75 -18.7417 0 0 0 ]msf32.0563 276.683 mo(\002)sh%ADOBeginSubsetFont: IVOBAA+Times-Italic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSL+Times-Italic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B77FE2CED306AAE853DF6763ABBC1F195078D45F35AC812BA176B02CD229DD186FFB355299AFEDCDA3C3E7A2BBB8C0138FFC2F675F24D8A1A2064E210ACB5567CC4FF99B2DB190FFC6CD745653327D6267B9720C3E2FAD72FF086DC8533109E5D3541C360CBF9F8DE6E15D008E77916480B96C5C762C587981712A1AA76B3128B5597081D3A484E43F2332F97E00EB8CA70E92480D1BBD05BF5279454393B0CF9B35A14103B3932D2CBA> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSL+Times-Italic /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/RQARSL+Times-Italic*1 [86{/.notdef}rp /V 12{/.notdef}rp /c 156{/.notdef}rp]RQARSL+Times-Italic nfRQARSL+Times-Italic*1 [0 -13.3125 -13.3066 0 0 0 ]msf34.9846 263.727 mo(c)shgrestore
gsave
59.2406 157.437 mo
295.013 157.437 li
295.013 11.15 li
59.2406 11.15 li
cp
clp
.943087 lw
0 lc
0 lj
3.25 ml
[10.1156 7.78125 ] 0 dsh
true sadj
59.2406 157.572 mo
295.012 157.572 li
1 /0 /CSD get_res sepcs
1 sep
@
1.88617 lw
[] 0 dsh
59.2406 157.572 mo
295.012 157.572 li
@
grestore
gsave
59.2406 157.437 mo
61.575 157.437 li
61.575 155.103 li
59.2406 155.103 li
cp
clp
%ADOBeginSubsetFont: DZUBAA+Mathematica3 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /DZUBAA+Mathematica3 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 1 /SolidCircle putdef/UniqueID 5095645 def/FontBBox {-109 -231 966 869} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-107 -91 505 527 596 612] def/BlueScale 0.0454559 def/StdHW [34] def/StdVW [34] def/StemSnapH [34 66] def/StemSnapV [34 65] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/SolidCircle <1C60D8A8C9B60287CF08F7BF563CAAD6E08EFD6DAA142CC7220408DECF2B61045B377CC2E5343FEE4BB07E6944D948E0191385507B98AE> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSO+Mathematica3 /DZUBAA+Mathematica3 findfont ct_VMDictPut/RQARSO+Mathematica3*1 [/.notdef /SolidCircle 254{/.notdef}rp]RQARSO+Mathematica3 nfRQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)sh57.8416 158.739 mo(\001)shgrestore
gsave
18 197.5 mo
298.125 197.5 li
298.125 10.7501 li
18 10.7501 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf60.8436 156.729 mo(\001)sh60.8436 156.743 mo(\001)sh60.8436 156.746 mo(\001)sh60.8436 156.747 mo(\001)sh60.8436 156.748 mo(\001)sh60.8436 156.749 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.75 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.751 mo(\001)sh60.8436 156.831 mo(\001)sh63.8456 154.718 mo(\001)sh63.8456 154.746 mo(\001)sh63.8456 154.752 mo(\001)sh63.8456 154.755 mo(\001)sh63.8456 154.757 mo(\001)sh63.8456 154.758 mo(\001)sh63.8456 154.759 mo(\001)sh63.8456 154.76 mo(\001)sh63.8456 154.76 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.761 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.762 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.763 mo(\001)sh63.8456 154.921 mo(\001)sh66.8476 152.707 mo(\001)sh66.8476 152.749 mo(\001)sh66.8476 152.759 mo(\001)sh66.8476 152.763 mo(\001)sh66.8476 152.766 mo(\001)sh66.8476 152.768 mo(\001)sh66.8476 152.769 mo(\001)sh66.8476 152.769 mo(\001)sh66.8476 152.77 mo(\001)sh66.8476 152.771 mo(\001)sh66.8476 152.772 mo(\001)sh66.8476 152.772 mo(\001)sh66.8476 152.772 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.773 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.774 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 152.775 mo(\001)sh66.8476 153.012 mo(\001)sh69.8496 150.697 mo(\001)sh69.8496 150.753 mo(\001)sh69.8496 150.765 mo(\001)sh69.8496 150.771 mo(\001)sh69.8496 150.775 mo(\001)sh69.8496 150.777 mo(\001)sh69.8496 150.779 mo(\001)sh69.8496 150.78 mo(\001)sh69.8496 150.781 mo(\001)sh69.8496 150.781 mo(\001)sh69.8496 150.782 mo(\001)sh69.8496 150.783 mo(\001)sh69.8496 150.783 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.784 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.785 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.786 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 150.787 mo(\001)sh69.8496 151.103 mo(\001)sh72.8508 148.686 mo(\001)sh72.8508 148.756 mo(\001)sh72.8508 148.772 mo(\001)sh72.8508 148.779 mo(\001)sh72.8508 148.784 mo(\001)sh72.8508 148.786 mo(\001)sh72.8508 148.789 mo(\001)sh72.8508 148.79 mo(\001)sh72.8508 148.791 mo(\001)sh72.8508 148.792 mo(\001)sh72.8508 148.792 mo(\001)sh72.8508 148.793 mo(\001)sh72.8508 148.794 mo(\001)sh72.8508 148.794 mo(\001)sh72.8508 148.795 mo(\001)sh72.8508 148.795 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.796 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.797 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.798 mo(\001)sh72.8508 148.799 mo(\001)sh72.8508 148.799 mo(\001)sh72.8508 148.799 mo(\001)sh72.8508 148.799 mo(\001)sh72.8508 148.799 mo(\001)sh72.8508 149.193 mo(\001)sh75.8528 146.675 mo(\001)sh75.8528 146.758 mo(\001)sh75.8528 146.779 mo(\001)sh75.8528 146.787 mo(\001)sh75.8528 146.793 mo(\001)sh75.8528 146.796 mo(\001)sh75.8528 146.798 mo(\001)sh75.8528 146.8 mo(\001)sh75.8528 146.801 mo(\001)sh75.8528 146.803 mo(\001)sh75.8528 146.804 mo(\001)sh75.8528 146.804 mo(\001)sh75.8528 146.805 mo(\001)sh75.8528 146.805 mo(\001)sh75.8528 146.806 mo(\001)sh75.8528 146.806 mo(\001)sh75.8528 146.807 mo(\001)sh75.8528 146.807 mo(\001)sh75.8528 146.807 mo(\001)sh75.8528 146.807 mo(\001)sh75.8528 146.807 mo(\001)sh75.8528 146.807 mo(\001)sh75.8528 146.808 mo(\001)sh75.8528 146.808 mo(\001)sh75.8528 146.808 mo(\001)sh75.8528 146.808 mo(\001)sh75.8528 146.808 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.809 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.81 mo(\001)sh75.8528 146.811 mo(\001)sh75.8528 146.811 mo(\001)sh75.8528 147.284 mo(\001)sh78.8548 144.665 mo(\001)sh78.8548 144.762 mo(\001)sh78.8548 144.785 mo(\001)sh78.8548 144.795 mo(\001)sh78.8548 144.801 mo(\001)sh78.8548 144.805 mo(\001)sh78.8548 144.808 mo(\001)sh78.8548 144.81 mo(\001)sh78.8548 144.812 mo(\001)sh78.8548 144.813 mo(\001)sh78.8548 144.814 mo(\001)sh78.8548 144.815 mo(\001)sh78.8548 144.815 mo(\001)sh78.8548 144.816 mo(\001)sh78.8548 144.817 mo(\001)sh78.8548 144.817 mo(\001)sh78.8548 144.818 mo(\001)sh78.8548 144.818 mo(\001)sh78.8548 144.819 mo(\001)sh78.8548 144.819 mo(\001)sh78.8548 144.819 mo(\001)sh78.8548 144.819 mo(\001)sh78.8548 144.819 mo(\001)sh78.8548 144.819 mo(\001)sh78.8548 144.82 mo(\001)sh78.8548 144.82 mo(\001)sh78.8548 144.82 mo(\001)sh78.8548 144.82 mo(\001)sh78.8548 144.82 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.821 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 144.822 mo(\001)sh78.8548 145.375 mo(\001)sh81.8568 142.654 mo(\001)sh81.8568 142.765 mo(\001)sh81.8568 142.792 mo(\001)sh81.8568 142.803 mo(\001)sh81.8568 142.81 mo(\001)sh81.8568 142.815 mo(\001)sh81.8568 142.818 mo(\001)sh81.8568 142.82 mo(\001)sh81.8568 142.822 mo(\001)sh81.8568 142.823 mo(\001)sh81.8568 142.825 mo(\001)sh81.8568 142.826 mo(\001)sh81.8568 142.827 mo(\001)sh81.8568 142.827 mo(\001)sh81.8568 142.828 mo(\001)sh81.8568 142.828 mo(\001)sh81.8568 142.829 mo(\001)sh81.8568 142.829 mo(\001)sh81.8568 142.83 mo(\001)sh81.8568 142.83 mo(\001)sh81.8568 142.83 mo(\001)sh81.8568 142.83 mo(\001)sh81.8568 142.83 mo(\001)sh81.8568 142.831 mo(\001)sh81.8568 142.831 mo(\001)sh81.8568 142.831 mo(\001)sh81.8568 142.832 mo(\001)sh81.8568 142.832 mo(\001)sh81.8568 142.832 mo(\001)sh81.8568 142.832 mo(\001)sh81.8568 142.832 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.833 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 142.834 mo(\001)sh81.8568 143.466 mo(\001)sh84.8588 140.643 mo(\001)sh84.8588 140.768 mo(\001)sh84.8588 140.798 mo(\001)sh84.8588 140.811 mo(\001)sh84.8588 140.819 mo(\001)sh84.8588 140.824 mo(\001)sh84.8588 140.828 mo(\001)sh84.8588 140.831 mo(\001)sh84.8588 140.832 mo(\001)sh84.8588 140.834 mo(\001)sh84.8588 140.835 mo(\001)sh84.8588 140.836 mo(\001)sh84.8588 140.838 mo(\001)sh84.8588 140.838 mo(\001)sh84.8588 140.839 mo(\001)sh84.8588 140.839 mo(\001)sh84.8588 140.84 mo(\001)sh84.8588 140.841 mo(\001)sh84.8588 140.841 mo(\001)sh84.8588 140.842 mo(\001)sh84.8588 140.842 mo(\001)sh84.8588 140.842 mo(\001)sh84.8588 140.842 mo(\001)sh84.8588 140.842 mo(\001)sh84.8588 140.843 mo(\001)sh84.8588 140.843 mo(\001)sh84.8588 140.843 mo(\001)sh84.8588 140.843 mo(\001)sh84.8588 140.844 mo(\001)sh84.8588 140.844 mo(\001)sh84.8588 140.844 mo(\001)sh84.8588 140.844 mo(\001)sh84.8588 140.844 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 140.845 mo(\001)sh84.8588 141.557 mo(\001)sh87.8608 138.632 mo(\001)sh87.8608 138.772 mo(\001)sh87.8608 138.804 mo(\001)sh87.8608 138.819 mo(\001)sh87.8608 138.828 mo(\001)sh87.8608 138.833 mo(\001)sh87.8608 138.837 mo(\001)sh87.8608 138.84 mo(\001)sh87.8608 138.843 mo(\001)sh87.8608 138.844 mo(\001)sh87.8608 138.846 mo(\001)sh87.8608 138.847 mo(\001)sh87.8608 138.848 mo(\001)sh87.8608 138.849 mo(\001)sh87.8608 138.85 mo(\001)sh87.8608 138.85 mo(\001)sh87.8608 138.851 mo(\001)sh87.8608 138.852 mo(\001)sh87.8608 138.852 mo(\001)sh87.8608 138.853 mo(\001)sh87.8608 138.853 mo(\001)sh87.8608 138.853 mo(\001)sh87.8608 138.853 mo(\001)sh87.8608 138.854 mo(\001)sh87.8608 138.854 mo(\001)sh87.8608 138.854 mo(\001)sh87.8608 138.855 mo(\001)sh87.8608 138.855 mo(\001)sh87.8608 138.855 mo(\001)sh87.8608 138.855 mo(\001)sh87.8608 138.856 mo(\001)sh87.8608 138.856 mo(\001)sh87.8608 138.856 mo(\001)sh87.8608 138.856 mo(\001)sh87.8608 138.856 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 138.857 mo(\001)sh87.8608 139.648 mo(\001)sh90.8629 136.622 mo(\001)sh90.8629 136.775 mo(\001)sh90.8629 136.811 mo(\001)sh90.8629 136.827 mo(\001)sh90.8629 136.837 mo(\001)sh90.8629 136.843 mo(\001)sh90.8629 136.847 mo(\001)sh90.8629 136.851 mo(\001)sh90.8629 136.853 mo(\001)sh90.8629 136.855 mo(\001)sh90.8629 136.857 mo(\001)sh90.8629 136.858 mo(\001)sh90.8629 136.859 mo(\001)sh90.8629 136.86 mo(\001)sh90.8629 136.861 mo(\001)sh90.8629 136.861 mo(\001)sh90.8629 136.862 mo(\001)sh90.8629 136.863 mo(\001)sh90.8629 136.864 mo(\001)sh90.8629 136.864 mo(\001)sh90.8629 136.865 mo(\001)sh90.8629 136.865 mo(\001)sh90.8629 136.865 mo(\001)sh90.8629 136.865 mo(\001)sh90.8629 136.865 mo(\001)sh90.8629 136.866 mo(\001)sh90.8629 136.866 mo(\001)sh90.8629 136.866 mo(\001)sh90.8629 136.867 mo(\001)sh90.8629 136.867 mo(\001)sh90.8629 136.867 mo(\001)sh90.8629 136.867 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.868 mo(\001)sh90.8629 136.869 mo(\001)sh90.8629 136.869 mo(\001)sh90.8629 136.869 mo(\001)sh90.8629 136.869 mo(\001)sh90.8629 136.869 mo(\001)sh90.8629 137.738 mo(\001)sh93.8649 134.611 mo(\001)sh93.8649 134.778 mo(\001)sh93.8649 134.817 mo(\001)sh93.8649 134.835 mo(\001)sh93.8649 134.845 mo(\001)sh93.8649 134.852 mo(\001)sh93.8649 134.857 mo(\001)sh93.8649 134.861 mo(\001)sh93.8649 134.863 mo(\001)sh93.8649 134.866 mo(\001)sh93.8649 134.867 mo(\001)sh93.8649 134.869 mo(\001)sh93.8649 134.87 mo(\001)sh93.8649 134.871 mo(\001)sh93.8649 134.872 mo(\001)sh93.8649 134.873 mo(\001)sh93.8649 134.873 mo(\001)sh93.8649 134.874 mo(\001)sh93.8649 134.875 mo(\001)sh93.8649 134.875 mo(\001)sh93.8649 134.876 mo(\001)sh93.8649 134.876 mo(\001)sh93.8649 134.876 mo(\001)sh93.8649 134.877 mo(\001)sh93.8649 134.877 mo(\001)sh93.8649 134.877 mo(\001)sh93.8649 134.878 mo(\001)sh93.8649 134.878 mo(\001)sh93.8649 134.878 mo(\001)sh93.8649 134.879 mo(\001)sh93.8649 134.879 mo(\001)sh93.8649 134.879 mo(\001)sh93.8649 134.879 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.88 mo(\001)sh93.8649 134.881 mo(\001)sh93.8649 134.881 mo(\001)sh93.8649 134.881 mo(\001)sh93.8649 134.881 mo(\001)sh93.8649 135.829 mo(\001)sh96.8669 132.6 mo(\001)sh96.8669 132.781 mo(\001)sh96.8669 132.824 mo(\001)sh96.8669 132.843 mo(\001)sh96.8669 132.854 mo(\001)sh96.8669 132.862 mo(\001)sh96.8669 132.867 mo(\001)sh96.8669 132.87 mo(\001)sh96.8669 132.874 mo(\001)sh96.8669 132.876 mo(\001)sh96.8669 132.878 mo(\001)sh96.8669 132.88 mo(\001)sh96.8669 132.881 mo(\001)sh96.8669 132.882 mo(\001)sh96.8669 132.883 mo(\001)sh96.8669 132.884 mo(\001)sh96.8669 132.884 mo(\001)sh96.8669 132.885 mo(\001)sh96.8669 132.886 mo(\001)sh96.8669 132.887 mo(\001)sh96.8669 132.887 mo(\001)sh96.8669 132.887 mo(\001)sh96.8669 132.887 mo(\001)sh96.8669 132.888 mo(\001)sh96.8669 132.888 mo(\001)sh96.8669 132.889 mo(\001)sh96.8669 132.889 mo(\001)sh96.8669 132.89 mo(\001)sh96.8669 132.89 mo(\001)sh96.8669 132.89 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.891 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.892 mo(\001)sh96.8669 132.893 mo(\001)sh96.8669 132.893 mo(\001)sh96.8669 133.92 mo(\001)sh99.8689 130.59 mo(\001)sh99.8689 130.784 mo(\001)sh99.8689 130.83 mo(\001)sh99.8689 130.851 mo(\001)sh99.8689 130.863 mo(\001)sh99.8689 130.871 mo(\001)sh99.8689 130.877 mo(\001)sh99.8689 130.881 mo(\001)sh99.8689 130.884 mo(\001)sh99.8689 130.886 mo(\001)sh99.8689 130.888 mo(\001)sh99.8689 130.89 mo(\001)sh99.8689 130.892 mo(\001)sh99.8689 130.893 mo(\001)sh99.8689 130.894 mo(\001)sh99.8689 130.895 mo(\001)sh99.8689 130.895 mo(\001)sh99.8689 130.896 mo(\001)sh99.8689 130.897 mo(\001)sh99.8689 130.898 mo(\001)sh99.8689 130.899 mo(\001)sh99.8689 130.899 mo(\001)sh99.8689 130.899 mo(\001)sh99.8689 130.899 mo(\001)sh99.8689 130.9 mo(\001)sh99.8689 130.9 mo(\001)sh99.8689 130.901 mo(\001)sh99.8689 130.901 mo(\001)sh99.8689 130.901 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.902 mo(\001)sh99.8689 130.903 mo(\001)sh99.8689 130.903 mo(\001)sh99.8689 130.903 mo(\001)sh99.8689 130.903 mo(\001)sh99.8689 130.903 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.904 mo(\001)sh99.8689 130.905 mo(\001)sh99.8689 132.011 mo(\001)sh102.871 128.579 mo(\001)sh102.871 128.788 mo(\001)sh102.871 128.837 mo(\001)sh102.871 128.859 mo(\001)sh102.871 128.872 mo(\001)sh102.871 128.88 mo(\001)sh102.871 128.886 mo(\001)sh102.871 128.891 mo(\001)sh102.871 128.894 mo(\001)sh102.871 128.897 mo(\001)sh102.871 128.899 mo(\001)sh102.871 128.901 mo(\001)sh102.871 128.903 mo(\001)sh102.871 128.904 mo(\001)sh102.871 128.905 mo(\001)sh102.871 128.906 mo(\001)sh102.871 128.907 mo(\001)sh102.871 128.908 mo(\001)sh102.871 128.908 mo(\001)sh102.871 128.909 mo(\001)sh102.871 128.91 mo(\001)sh102.871 128.91 mo(\001)sh102.871 128.91 mo(\001)sh102.871 128.911 mo(\001)sh102.871 128.911 mo(\001)sh102.871 128.912 mo(\001)sh102.871 128.912 mo(\001)sh102.871 128.913 mo(\001)sh102.871 128.913 mo(\001)sh102.871 128.913 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.914 mo(\001)sh102.871 128.915 mo(\001)sh102.871 128.915 mo(\001)sh102.871 128.915 mo(\001)sh102.871 128.915 mo(\001)sh102.871 128.915 mo(\001)sh102.871 128.916 mo(\001)sh102.871 128.916 mo(\001)sh102.871 128.916 mo(\001)sh102.871 128.916 mo(\001)sh102.871 128.916 mo(\001)sh102.871 128.916 mo(\001)sh102.871 128.916 mo(\001)sh102.871 130.102 mo(\001)sh105.873 126.568 mo(\001)sh105.873 126.791 mo(\001)sh105.873 126.843 mo(\001)sh105.873 126.867 mo(\001)sh105.873 126.88 mo(\001)sh105.873 126.89 mo(\001)sh105.873 126.896 mo(\001)sh105.873 126.901 mo(\001)sh105.873 126.904 mo(\001)sh105.873 126.908 mo(\001)sh105.873 126.91 mo(\001)sh105.873 126.911 mo(\001)sh105.873 126.914 mo(\001)sh105.873 126.915 mo(\001)sh105.873 126.916 mo(\001)sh105.873 126.917 mo(\001)sh105.873 126.918 mo(\001)sh105.873 126.919 mo(\001)sh105.873 126.92 mo(\001)sh105.873 126.92 mo(\001)sh105.873 126.921 mo(\001)sh105.873 126.922 mo(\001)sh105.873 126.922 mo(\001)sh105.873 126.922 mo(\001)sh105.873 126.923 mo(\001)sh105.873 126.923 mo(\001)sh105.873 126.924 mo(\001)sh105.873 126.924 mo(\001)sh105.873 126.925 mo(\001)sh105.873 126.925 mo(\001)sh105.873 126.925 mo(\001)sh105.873 126.925 mo(\001)sh105.873 126.925 mo(\001)sh105.873 126.925 mo(\001)sh105.873 126.926 mo(\001)sh105.873 126.926 mo(\001)sh105.873 126.926 mo(\001)sh105.873 126.926 mo(\001)sh105.873 126.927 mo(\001)sh105.873 126.927 mo(\001)sh105.873 126.927 mo(\001)sh105.873 126.927 mo(\001)sh105.873 126.927 mo(\001)sh105.873 126.928 mo(\001)sh105.873 126.928 mo(\001)sh105.873 126.928 mo(\001)sh105.873 126.928 mo(\001)sh105.873 126.928 mo(\001)sh105.873 126.928 mo(\001)sh105.873 128.192 mo(\001)sh108.874 124.558 mo(\001)sh108.874 124.794 mo(\001)sh108.874 124.849 mo(\001)sh108.874 124.875 mo(\001)sh108.874 124.89 mo(\001)sh108.874 124.899 mo(\001)sh108.874 124.906 mo(\001)sh108.874 124.911 mo(\001)sh108.874 124.915 mo(\001)sh108.874 124.918 mo(\001)sh108.874 124.92 mo(\001)sh108.874 124.923 mo(\001)sh108.874 124.924 mo(\001)sh108.874 124.926 mo(\001)sh108.874 124.927 mo(\001)sh108.874 124.928 mo(\001)sh108.874 124.93 mo(\001)sh108.874 124.93 mo(\001)sh108.874 124.931 mo(\001)sh108.874 124.932 mo(\001)sh108.874 124.933 mo(\001)sh108.874 124.933 mo(\001)sh108.874 124.933 mo(\001)sh108.874 124.934 mo(\001)sh108.874 124.934 mo(\001)sh108.874 124.935 mo(\001)sh108.874 124.935 mo(\001)sh108.874 124.936 mo(\001)sh108.874 124.936 mo(\001)sh108.874 124.937 mo(\001)sh108.874 124.937 mo(\001)sh108.874 124.937 mo(\001)sh108.874 124.937 mo(\001)sh108.874 124.937 mo(\001)sh108.874 124.937 mo(\001)sh108.874 124.938 mo(\001)sh108.874 124.938 mo(\001)sh108.874 124.938 mo(\001)sh108.874 124.938 mo(\001)sh108.874 124.939 mo(\001)sh108.874 124.939 mo(\001)sh108.874 124.939 mo(\001)sh108.874 124.939 mo(\001)sh108.874 124.939 mo(\001)sh108.874 124.94 mo(\001)sh108.874 124.94 mo(\001)sh108.874 124.94 mo(\001)sh108.874 124.94 mo(\001)sh108.874 124.94 mo(\001)sh108.874 126.283 mo(\001)sh111.876 122.547 mo(\001)sh111.876 122.797 mo(\001)sh111.876 122.856 mo(\001)sh111.876 122.883 mo(\001)sh111.876 122.899 mo(\001)sh111.876 122.909 mo(\001)sh111.876 122.916 mo(\001)sh111.876 122.921 mo(\001)sh111.876 122.925 mo(\001)sh111.876 122.928 mo(\001)sh111.876 122.931 mo(\001)sh111.876 122.934 mo(\001)sh111.876 122.935 mo(\001)sh111.876 122.937 mo(\001)sh111.876 122.938 mo(\001)sh111.876 122.939 mo(\001)sh111.876 122.941 mo(\001)sh111.876 122.941 mo(\001)sh111.876 122.942 mo(\001)sh111.876 122.943 mo(\001)sh111.876 122.944 mo(\001)sh111.876 122.945 mo(\001)sh111.876 122.945 mo(\001)sh111.876 122.945 mo(\001)sh111.876 122.946 mo(\001)sh111.876 122.946 mo(\001)sh111.876 122.947 mo(\001)sh111.876 122.947 mo(\001)sh111.876 122.948 mo(\001)sh111.876 122.948 mo(\001)sh111.876 122.948 mo(\001)sh111.876 122.948 mo(\001)sh111.876 122.948 mo(\001)sh111.876 122.949 mo(\001)sh111.876 122.949 mo(\001)sh111.876 122.949 mo(\001)sh111.876 122.95 mo(\001)sh111.876 122.95 mo(\001)sh111.876 122.95 mo(\001)sh111.876 122.95 mo(\001)sh111.876 122.951 mo(\001)sh111.876 122.951 mo(\001)sh111.876 122.951 mo(\001)sh111.876 122.951 mo(\001)sh111.876 122.951 mo(\001)sh111.876 122.952 mo(\001)sh111.876 122.952 mo(\001)sh111.876 122.952 mo(\001)sh111.876 122.952 mo(\001)sh111.876 124.374 mo(\001)sh114.878 120.536 mo(\001)sh114.878 120.8 mo(\001)sh114.878 120.862 mo(\001)sh114.878 120.891 mo(\001)sh114.878 120.907 mo(\001)sh114.878 120.918 mo(\001)sh114.878 120.925 mo(\001)sh114.878 120.931 mo(\001)sh114.878 120.935 mo(\001)sh114.878 120.939 mo(\001)sh114.878 120.942 mo(\001)sh114.878 120.944 mo(\001)sh114.878 120.946 mo(\001)sh114.878 120.948 mo(\001)sh114.878 120.949 mo(\001)sh114.878 120.95 mo(\001)sh114.878 120.952 mo(\001)sh114.878 120.953 mo(\001)sh114.878 120.953 mo(\001)sh114.878 120.954 mo(\001)sh114.878 120.955 mo(\001)sh114.878 120.956 mo(\001)sh114.878 120.956 mo(\001)sh114.878 120.957 mo(\001)sh114.878 120.957 mo(\001)sh114.878 120.958 mo(\001)sh114.878 120.958 mo(\001)sh114.878 120.959 mo(\001)sh114.878 120.959 mo(\001)sh114.878 120.96 mo(\001)sh114.878 120.96 mo(\001)sh114.878 120.96 mo(\001)sh114.878 120.96 mo(\001)sh114.878 120.96 mo(\001)sh114.878 120.961 mo(\001)sh114.878 120.961 mo(\001)sh114.878 120.961 mo(\001)sh114.878 120.962 mo(\001)sh114.878 120.962 mo(\001)sh114.878 120.962 mo(\001)sh114.878 120.962 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 120.963 mo(\001)sh114.878 122.465 mo(\001)sh117.88 118.526 mo(\001)sh117.88 118.803 mo(\001)sh117.88 118.869 mo(\001)sh117.88 118.899 mo(\001)sh117.88 118.916 mo(\001)sh117.88 118.927 mo(\001)sh117.88 118.935 mo(\001)sh117.88 118.941 mo(\001)sh117.88 118.946 mo(\001)sh117.88 118.95 mo(\001)sh117.88 118.952 mo(\001)sh117.88 118.955 mo(\001)sh117.88 118.957 mo(\001)sh117.88 118.959 mo(\001)sh117.88 118.961 mo(\001)sh117.88 118.961 mo(\001)sh117.88 118.963 mo(\001)sh117.88 118.964 mo(\001)sh117.88 118.964 mo(\001)sh117.88 118.966 mo(\001)sh117.88 118.967 mo(\001)sh117.88 118.967 mo(\001)sh117.88 118.968 mo(\001)sh117.88 118.968 mo(\001)sh117.88 118.969 mo(\001)sh117.88 118.969 mo(\001)sh117.88 118.97 mo(\001)sh117.88 118.97 mo(\001)sh117.88 118.971 mo(\001)sh117.88 118.971 mo(\001)sh117.88 118.971 mo(\001)sh117.88 118.971 mo(\001)sh117.88 118.972 mo(\001)sh117.88 118.972 mo(\001)sh117.88 118.972 mo(\001)sh117.88 118.973 mo(\001)sh117.88 118.973 mo(\001)sh117.88 118.973 mo(\001)sh117.88 118.974 mo(\001)sh117.88 118.974 mo(\001)sh117.88 118.974 mo(\001)sh117.88 118.974 mo(\001)sh117.88 118.975 mo(\001)sh117.88 118.975 mo(\001)sh117.88 118.975 mo(\001)sh117.88 118.975 mo(\001)sh117.88 118.975 mo(\001)sh117.88 118.975 mo(\001)sh117.88 118.975 mo(\001)sh117.88 120.556 mo(\001)sh120.882 116.515 mo(\001)sh120.882 116.807 mo(\001)sh120.882 116.875 mo(\001)sh120.882 116.907 mo(\001)sh120.882 116.925 mo(\001)sh120.882 116.937 mo(\001)sh120.882 116.945 mo(\001)sh120.882 116.951 mo(\001)sh120.882 116.956 mo(\001)sh120.882 116.96 mo(\001)sh120.882 116.963 mo(\001)sh120.882 116.965 mo(\001)sh120.882 116.968 mo(\001)sh120.882 116.969 mo(\001)sh120.882 116.972 mo(\001)sh120.882 116.972 mo(\001)sh120.882 116.974 mo(\001)sh120.882 116.975 mo(\001)sh120.882 116.976 mo(\001)sh120.882 116.977 mo(\001)sh120.882 116.978 mo(\001)sh120.882 116.979 mo(\001)sh120.882 116.979 mo(\001)sh120.882 116.979 mo(\001)sh120.882 116.98 mo(\001)sh120.882 116.981 mo(\001)sh120.882 116.981 mo(\001)sh120.882 116.982 mo(\001)sh120.882 116.982 mo(\001)sh120.882 116.982 mo(\001)sh120.882 116.983 mo(\001)sh120.882 116.983 mo(\001)sh120.882 116.983 mo(\001)sh120.882 116.984 mo(\001)sh120.882 116.984 mo(\001)sh120.882 116.985 mo(\001)sh120.882 116.985 mo(\001)sh120.882 116.985 mo(\001)sh120.882 116.985 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.986 mo(\001)sh120.882 116.987 mo(\001)sh120.882 116.987 mo(\001)sh120.882 118.646 mo(\001)sh123.884 114.504 mo(\001)sh123.884 114.81 mo(\001)sh123.884 114.882 mo(\001)sh123.884 114.915 mo(\001)sh123.884 114.934 mo(\001)sh123.884 114.946 mo(\001)sh123.884 114.955 mo(\001)sh123.884 114.961 mo(\001)sh123.884 114.966 mo(\001)sh123.884 114.97 mo(\001)sh123.884 114.973 mo(\001)sh123.884 114.976 mo(\001)sh123.884 114.979 mo(\001)sh123.884 114.98 mo(\001)sh123.884 114.982 mo(\001)sh123.884 114.983 mo(\001)sh123.884 114.985 mo(\001)sh123.884 114.987 mo(\001)sh123.884 114.987 mo(\001)sh123.884 114.988 mo(\001)sh123.884 114.989 mo(\001)sh123.884 114.99 mo(\001)sh123.884 114.991 mo(\001)sh123.884 114.991 mo(\001)sh123.884 114.992 mo(\001)sh123.884 114.992 mo(\001)sh123.884 114.993 mo(\001)sh123.884 114.994 mo(\001)sh123.884 114.994 mo(\001)sh123.884 114.994 mo(\001)sh123.884 114.994 mo(\001)sh123.884 114.995 mo(\001)sh123.884 114.995 mo(\001)sh123.884 114.996 mo(\001)sh123.884 114.996 mo(\001)sh123.884 114.996 mo(\001)sh123.884 114.997 mo(\001)sh123.884 114.997 mo(\001)sh123.884 114.997 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.998 mo(\001)sh123.884 114.999 mo(\001)sh123.884 116.737 mo(\001)sh126.886 112.493 mo(\001)sh126.886 112.813 mo(\001)sh126.886 112.888 mo(\001)sh126.886 112.922 mo(\001)sh126.886 112.942 mo(\001)sh126.886 112.956 mo(\001)sh126.886 112.964 mo(\001)sh126.886 112.971 mo(\001)sh126.886 112.977 mo(\001)sh126.886 112.981 mo(\001)sh126.886 112.984 mo(\001)sh126.886 112.987 mo(\001)sh126.886 112.989 mo(\001)sh126.886 112.992 mo(\001)sh126.886 112.993 mo(\001)sh126.886 112.995 mo(\001)sh126.886 112.996 mo(\001)sh126.886 112.998 mo(\001)sh126.886 112.999 mo(\001)sh126.886 112.999 mo(\001)sh126.886 113 mo(\001)sh126.886 113.002 mo(\001)sh126.886 113.002 mo(\001)sh126.886 113.002 mo(\001)sh126.886 113.003 mo(\001)sh126.886 113.004 mo(\001)sh126.886 113.005 mo(\001)sh126.886 113.005 mo(\001)sh126.886 113.006 mo(\001)sh126.886 113.006 mo(\001)sh126.886 113.006 mo(\001)sh126.886 113.006 mo(\001)sh126.886 113.007 mo(\001)sh126.886 113.007 mo(\001)sh126.886 113.008 mo(\001)sh126.886 113.008 mo(\001)sh126.886 113.008 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.009 mo(\001)sh126.886 113.01 mo(\001)sh126.886 113.01 mo(\001)sh126.886 113.01 mo(\001)sh126.886 113.01 mo(\001)sh126.886 113.011 mo(\001)sh126.886 114.828 mo(\001)sh129.888 110.483 mo(\001)sh129.888 110.817 mo(\001)sh129.888 110.894 mo(\001)sh129.888 110.93 mo(\001)sh129.888 110.951 mo(\001)sh129.888 110.964 mo(\001)sh129.888 110.975 mo(\001)sh129.888 110.982 mo(\001)sh129.888 110.987 mo(\001)sh129.888 110.992 mo(\001)sh129.888 110.995 mo(\001)sh129.888 110.998 mo(\001)sh129.888 111 mo(\001)sh129.888 111.003 mo(\001)sh129.888 111.004 mo(\001)sh129.888 111.006 mo(\001)sh129.888 111.007 mo(\001)sh129.888 111.009 mo(\001)sh129.888 111.01 mo(\001)sh129.888 111.011 mo(\001)sh129.888 111.012 mo(\001)sh129.888 111.013 mo(\001)sh129.888 111.014 mo(\001)sh129.888 111.014 mo(\001)sh129.888 111.015 mo(\001)sh129.888 111.015 mo(\001)sh129.888 111.016 mo(\001)sh129.888 111.017 mo(\001)sh129.888 111.017 mo(\001)sh129.888 111.017 mo(\001)sh129.888 111.017 mo(\001)sh129.888 111.018 mo(\001)sh129.888 111.018 mo(\001)sh129.888 111.019 mo(\001)sh129.888 111.019 mo(\001)sh129.888 111.02 mo(\001)sh129.888 111.02 mo(\001)sh129.888 111.02 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.021 mo(\001)sh129.888 111.022 mo(\001)sh129.888 111.022 mo(\001)sh129.888 111.022 mo(\001)sh129.888 111.022 mo(\001)sh129.888 112.919 mo(\001)sh132.89 108.472 mo(\001)sh132.89 108.82 mo(\001)sh132.89 108.901 mo(\001)sh132.89 108.938 mo(\001)sh132.89 108.96 mo(\001)sh132.89 108.974 mo(\001)sh132.89 108.984 mo(\001)sh132.89 108.992 mo(\001)sh132.89 108.997 mo(\001)sh132.89 109.002 mo(\001)sh132.89 109.006 mo(\001)sh132.89 109.008 mo(\001)sh132.89 109.011 mo(\001)sh132.89 109.014 mo(\001)sh132.89 109.015 mo(\001)sh132.89 109.017 mo(\001)sh132.89 109.018 mo(\001)sh132.89 109.02 mo(\001)sh132.89 109.021 mo(\001)sh132.89 109.022 mo(\001)sh132.89 109.023 mo(\001)sh132.89 109.024 mo(\001)sh132.89 109.025 mo(\001)sh132.89 109.025 mo(\001)sh132.89 109.026 mo(\001)sh132.89 109.027 mo(\001)sh132.89 109.028 mo(\001)sh132.89 109.028 mo(\001)sh132.89 109.029 mo(\001)sh132.89 109.029 mo(\001)sh132.89 109.029 mo(\001)sh132.89 109.03 mo(\001)sh132.89 109.03 mo(\001)sh132.89 109.031 mo(\001)sh132.89 109.031 mo(\001)sh132.89 109.031 mo(\001)sh132.89 109.032 mo(\001)sh132.89 109.032 mo(\001)sh132.89 109.032 mo(\001)sh132.89 109.032 mo(\001)sh132.89 109.032 mo(\001)sh132.89 109.033 mo(\001)sh132.89 109.033 mo(\001)sh132.89 109.033 mo(\001)sh132.89 109.033 mo(\001)sh132.89 109.034 mo(\001)sh132.89 109.034 mo(\001)sh132.89 109.034 mo(\001)sh132.89 109.034 mo(\001)sh132.89 111.01 mo(\001)sh135.892 106.461 mo(\001)sh135.892 106.822 mo(\001)sh135.892 106.907 mo(\001)sh135.892 106.946 mo(\001)sh135.892 106.969 mo(\001)sh135.892 106.984 mo(\001)sh135.892 106.994 mo(\001)sh135.892 107.001 mo(\001)sh135.892 107.008 mo(\001)sh135.892 107.012 mo(\001)sh135.892 107.016 mo(\001)sh135.892 107.019 mo(\001)sh135.892 107.022 mo(\001)sh135.892 107.025 mo(\001)sh135.892 107.026 mo(\001)sh135.892 107.028 mo(\001)sh135.892 107.029 mo(\001)sh135.892 107.031 mo(\001)sh135.892 107.033 mo(\001)sh135.892 107.033 mo(\001)sh135.892 107.034 mo(\001)sh135.892 107.036 mo(\001)sh135.892 107.036 mo(\001)sh135.892 107.037 mo(\001)sh135.892 107.038 mo(\001)sh135.892 107.038 mo(\001)sh135.892 107.039 mo(\001)sh135.892 107.04 mo(\001)sh135.892 107.04 mo(\001)sh135.892 107.04 mo(\001)sh135.892 107.041 mo(\001)sh135.892 107.041 mo(\001)sh135.892 107.042 mo(\001)sh135.892 107.042 mo(\001)sh135.892 107.043 mo(\001)sh135.892 107.043 mo(\001)sh135.892 107.043 mo(\001)sh135.892 107.043 mo(\001)sh135.892 107.043 mo(\001)sh135.892 107.044 mo(\001)sh135.892 107.044 mo(\001)sh135.892 107.044 mo(\001)sh135.892 107.045 mo(\001)sh135.892 107.045 mo(\001)sh135.892 107.045 mo(\001)sh135.892 107.045 mo(\001)sh135.892 107.046 mo(\001)sh135.892 107.046 mo(\001)sh135.892 107.046 mo(\001)sh135.892 109.101 mo(\001)sh138.894 104.451 mo(\001)sh138.894 104.826 mo(\001)sh138.894 104.914 mo(\001)sh138.894 104.954 mo(\001)sh138.894 104.978 mo(\001)sh138.894 104.993 mo(\001)sh138.894 105.004 mo(\001)sh138.894 105.012 mo(\001)sh138.894 105.018 mo(\001)sh138.894 105.023 mo(\001)sh138.894 105.027 mo(\001)sh138.894 105.03 mo(\001)sh138.894 105.033 mo(\001)sh138.894 105.035 mo(\001)sh138.894 105.037 mo(\001)sh138.894 105.039 mo(\001)sh138.894 105.041 mo(\001)sh138.894 105.042 mo(\001)sh138.894 105.044 mo(\001)sh138.894 105.044 mo(\001)sh138.894 105.046 mo(\001)sh138.894 105.047 mo(\001)sh138.894 105.048 mo(\001)sh138.894 105.048 mo(\001)sh138.894 105.049 mo(\001)sh138.894 105.05 mo(\001)sh138.894 105.051 mo(\001)sh138.894 105.051 mo(\001)sh138.894 105.051 mo(\001)sh138.894 105.052 mo(\001)sh138.894 105.052 mo(\001)sh138.894 105.053 mo(\001)sh138.894 105.053 mo(\001)sh138.894 105.054 mo(\001)sh138.894 105.054 mo(\001)sh138.894 105.055 mo(\001)sh138.894 105.055 mo(\001)sh138.894 105.055 mo(\001)sh138.894 105.055 mo(\001)sh138.894 105.055 mo(\001)sh138.894 105.056 mo(\001)sh138.894 105.056 mo(\001)sh138.894 105.056 mo(\001)sh138.894 105.057 mo(\001)sh138.894 105.057 mo(\001)sh138.894 105.057 mo(\001)sh138.894 105.058 mo(\001)sh138.894 105.058 mo(\001)sh138.894 105.058 mo(\001)sh138.894 107.191 mo(\001)sh141.896 102.44 mo(\001)sh141.896 102.829 mo(\001)sh141.896 102.921 mo(\001)sh141.896 102.962 mo(\001)sh141.896 102.986 mo(\001)sh141.896 103.003 mo(\001)sh141.896 103.014 mo(\001)sh141.896 103.022 mo(\001)sh141.896 103.028 mo(\001)sh141.896 103.033 mo(\001)sh141.896 103.038 mo(\001)sh141.896 103.041 mo(\001)sh141.896 103.044 mo(\001)sh141.896 103.046 mo(\001)sh141.896 103.049 mo(\001)sh141.896 103.05 mo(\001)sh141.896 103.052 mo(\001)sh141.896 103.053 mo(\001)sh141.896 103.055 mo(\001)sh141.896 103.056 mo(\001)sh141.896 103.057 mo(\001)sh141.896 103.058 mo(\001)sh141.896 103.059 mo(\001)sh141.896 103.06 mo(\001)sh141.896 103.06 mo(\001)sh141.896 103.061 mo(\001)sh141.896 103.062 mo(\001)sh141.896 103.063 mo(\001)sh141.896 103.063 mo(\001)sh141.896 103.063 mo(\001)sh141.896 103.064 mo(\001)sh141.896 103.065 mo(\001)sh141.896 103.065 mo(\001)sh141.896 103.066 mo(\001)sh141.896 103.066 mo(\001)sh141.896 103.066 mo(\001)sh141.896 103.066 mo(\001)sh141.896 103.066 mo(\001)sh141.896 103.067 mo(\001)sh141.896 103.067 mo(\001)sh141.896 103.068 mo(\001)sh141.896 103.068 mo(\001)sh141.896 103.068 mo(\001)sh141.896 103.069 mo(\001)sh141.896 103.069 mo(\001)sh141.896 103.069 mo(\001)sh141.896 103.069 mo(\001)sh141.896 103.07 mo(\001)sh141.896 103.07 mo(\001)sh141.896 105.282 mo(\001)sh144.897 100.429 mo(\001)sh144.897 100.832 mo(\001)sh144.897 100.927 mo(\001)sh144.897 100.97 mo(\001)sh144.897 100.995 mo(\001)sh144.897 101.011 mo(\001)sh144.897 101.023 mo(\001)sh144.897 101.032 mo(\001)sh144.897 101.039 mo(\001)sh144.897 101.044 mo(\001)sh144.897 101.048 mo(\001)sh144.897 101.052 mo(\001)sh144.897 101.055 mo(\001)sh144.897 101.057 mo(\001)sh144.897 101.06 mo(\001)sh144.897 101.061 mo(\001)sh144.897 101.064 mo(\001)sh144.897 101.065 mo(\001)sh144.897 101.066 mo(\001)sh144.897 101.067 mo(\001)sh144.897 101.068 mo(\001)sh144.897 101.07 mo(\001)sh144.897 101.071 mo(\001)sh144.897 101.071 mo(\001)sh144.897 101.072 mo(\001)sh144.897 101.073 mo(\001)sh144.897 101.074 mo(\001)sh144.897 101.074 mo(\001)sh144.897 101.074 mo(\001)sh144.897 101.075 mo(\001)sh144.897 101.076 mo(\001)sh144.897 101.076 mo(\001)sh144.897 101.077 mo(\001)sh144.897 101.077 mo(\001)sh144.897 101.078 mo(\001)sh144.897 101.078 mo(\001)sh144.897 101.078 mo(\001)sh144.897 101.078 mo(\001)sh144.897 101.079 mo(\001)sh144.897 101.079 mo(\001)sh144.897 101.079 mo(\001)sh144.897 101.08 mo(\001)sh144.897 101.08 mo(\001)sh144.897 101.08 mo(\001)sh144.897 101.081 mo(\001)sh144.897 101.081 mo(\001)sh144.897 101.081 mo(\001)sh144.897 101.081 mo(\001)sh144.897 101.081 mo(\001)sh144.897 103.373 mo(\001)sh147.899 98.4187 mo(\001)sh147.899 98.8358 mo(\001)sh147.899 98.9338 mo(\001)sh147.899 98.9782 mo(\001)sh147.899 99.0046 mo(\001)sh147.899 99.021 mo(\001)sh147.899 99.0334 mo(\001)sh147.899 99.042 mo(\001)sh147.899 99.049 mo(\001)sh147.899 99.0544 mo(\001)sh147.899 99.0591 mo(\001)sh147.899 99.0622 mo(\001)sh147.899 99.0653 mo(\001)sh147.899 99.0684 mo(\001)sh147.899 99.0708 mo(\001)sh147.899 99.0723 mo(\001)sh147.899 99.0747 mo(\001)sh147.899 99.0762 mo(\001)sh147.899 99.0777 mo(\001)sh147.899 99.0785 mo(\001)sh147.899 99.08 mo(\001)sh147.899 99.0808 mo(\001)sh147.899 99.0816 mo(\001)sh147.899 99.0824 mo(\001)sh147.899 99.0831 mo(\001)sh147.899 99.0839 mo(\001)sh147.899 99.0847 mo(\001)sh147.899 99.0855 mo(\001)sh147.899 99.0863 mo(\001)sh147.899 99.087 mo(\001)sh147.899 99.087 mo(\001)sh147.899 99.0878 mo(\001)sh147.899 99.0878 mo(\001)sh147.899 99.0886 mo(\001)sh147.899 99.0894 mo(\001)sh147.899 99.0894 mo(\001)sh147.899 99.0901 mo(\001)sh147.899 99.0901 mo(\001)sh147.899 99.0901 mo(\001)sh147.899 99.0909 mo(\001)sh147.899 99.0909 mo(\001)sh147.899 99.0917 mo(\001)sh147.899 99.0917 mo(\001)sh147.899 99.0917 mo(\001)sh147.899 99.0925 mo(\001)sh147.899 99.0925 mo(\001)sh147.899 99.0925 mo(\001)sh147.899 99.0925 mo(\001)sh147.899 99.0933 mo(\001)sh147.899 101.463 mo(\001)sh150.901 96.4087 mo(\001)sh150.901 96.839 mo(\001)sh150.901 96.9402 mo(\001)sh150.901 96.9861 mo(\001)sh150.901 97.0133 mo(\001)sh150.901 97.0305 mo(\001)sh150.901 97.043 mo(\001)sh150.901 97.0523 mo(\001)sh150.901 97.0593 mo(\001)sh150.901 97.0648 mo(\001)sh150.901 97.0694 mo(\001)sh150.901 97.0733 mo(\001)sh150.901 97.0764 mo(\001)sh150.901 97.0795 mo(\001)sh150.901 97.0819 mo(\001)sh150.901 97.0834 mo(\001)sh150.901 97.0858 mo(\001)sh150.901 97.0873 mo(\001)sh150.901 97.0889 mo(\001)sh150.901 97.0897 mo(\001)sh150.901 97.0912 mo(\001)sh150.901 97.092 mo(\001)sh150.901 97.0935 mo(\001)sh150.901 97.0943 mo(\001)sh150.901 97.0951 mo(\001)sh150.901 97.0959 mo(\001)sh150.901 97.0967 mo(\001)sh150.901 97.0974 mo(\001)sh150.901 97.0974 mo(\001)sh150.901 97.0982 mo(\001)sh150.901 97.099 mo(\001)sh150.901 97.0998 mo(\001)sh150.901 97.0998 mo(\001)sh150.901 97.1005 mo(\001)sh150.901 97.1005 mo(\001)sh150.901 97.1013 mo(\001)sh150.901 97.1013 mo(\001)sh150.901 97.1022 mo(\001)sh150.901 97.1022 mo(\001)sh150.901 97.103 mo(\001)sh150.901 97.103 mo(\001)sh150.901 97.103 mo(\001)sh150.901 97.1037 mo(\001)sh150.901 97.1037 mo(\001)sh150.901 97.1037 mo(\001)sh150.901 97.1045 mo(\001)sh150.901 97.1045 mo(\001)sh150.901 97.1045 mo(\001)sh150.901 97.1053 mo(\001)sh150.901 99.5548 mo(\001)sh153.903 94.3982 mo(\001)sh153.903 94.8425 mo(\001)sh153.903 94.9468 mo(\001)sh153.903 94.9942 mo(\001)sh153.903 95.0223 mo(\001)sh153.903 95.0402 mo(\001)sh153.903 95.0526 mo(\001)sh153.903 95.062 mo(\001)sh153.903 95.0697 mo(\001)sh153.903 95.0752 mo(\001)sh153.903 95.0798 mo(\001)sh153.903 95.0837 mo(\001)sh153.903 95.0876 mo(\001)sh153.903 95.09 mo(\001)sh153.903 95.0931 mo(\001)sh153.903 95.0946 mo(\001)sh153.903 95.097 mo(\001)sh153.903 95.0985 mo(\001)sh153.903 95.1001 mo(\001)sh153.903 95.1016 mo(\001)sh153.903 95.1024 mo(\001)sh153.903 95.104 mo(\001)sh153.903 95.1047 mo(\001)sh153.903 95.1055 mo(\001)sh153.903 95.1063 mo(\001)sh153.903 95.1071 mo(\001)sh153.903 95.1078 mo(\001)sh153.903 95.1086 mo(\001)sh153.903 95.1094 mo(\001)sh153.903 95.1102 mo(\001)sh153.903 95.111 mo(\001)sh153.903 95.111 mo(\001)sh153.903 95.1118 mo(\001)sh153.903 95.1118 mo(\001)sh153.903 95.1126 mo(\001)sh153.903 95.1134 mo(\001)sh153.903 95.1134 mo(\001)sh153.903 95.1134 mo(\001)sh153.903 95.1142 mo(\001)sh153.903 95.1142 mo(\001)sh153.903 95.1149 mo(\001)sh153.903 95.1149 mo(\001)sh153.903 95.1157 mo(\001)sh153.903 95.1157 mo(\001)sh153.903 95.1157 mo(\001)sh153.903 95.1165 mo(\001)sh153.903 95.1165 mo(\001)sh153.903 95.1165 mo(\001)sh153.903 95.1165 mo(\001)sh153.903 97.6454 mo(\001)sh156.905 92.3876 mo(\001)sh156.905 92.8451 mo(\001)sh156.905 92.9533 mo(\001)sh156.905 93.0023 mo(\001)sh156.905 93.0311 mo(\001)sh156.905 93.0498 mo(\001)sh156.905 93.063 mo(\001)sh156.905 93.0724 mo(\001)sh156.905 93.0801 mo(\001)sh156.905 93.0856 mo(\001)sh156.905 93.091 mo(\001)sh156.905 93.0949 mo(\001)sh156.905 93.098 mo(\001)sh156.905 93.1011 mo(\001)sh156.905 93.1043 mo(\001)sh156.905 93.1058 mo(\001)sh156.905 93.1081 mo(\001)sh156.905 93.1097 mo(\001)sh156.905 93.1113 mo(\001)sh156.905 93.1128 mo(\001)sh156.905 93.1144 mo(\001)sh156.905 93.1152 mo(\001)sh156.905 93.1159 mo(\001)sh156.905 93.1175 mo(\001)sh156.905 93.1183 mo(\001)sh156.905 93.119 mo(\001)sh156.905 93.1198 mo(\001)sh156.905 93.1206 mo(\001)sh156.905 93.1215 mo(\001)sh156.905 93.1215 mo(\001)sh156.905 93.1222 mo(\001)sh156.905 93.123 mo(\001)sh156.905 93.123 mo(\001)sh156.905 93.1238 mo(\001)sh156.905 93.1246 mo(\001)sh156.905 93.1246 mo(\001)sh156.905 93.1254 mo(\001)sh156.905 93.1254 mo(\001)sh156.905 93.1261 mo(\001)sh156.905 93.1261 mo(\001)sh156.905 93.1269 mo(\001)sh156.905 93.1269 mo(\001)sh156.905 93.1269 mo(\001)sh156.905 93.1277 mo(\001)sh156.905 93.1277 mo(\001)sh156.905 93.1277 mo(\001)sh156.905 93.1285 mo(\001)sh156.905 93.1285 mo(\001)sh156.905 93.1285 mo(\001)sh156.905 95.7367 mo(\001)sh159.907 90.377 mo(\001)sh159.907 90.8485 mo(\001)sh159.907 90.9598 mo(\001)sh159.907 91.0104 mo(\001)sh159.907 91.04 mo(\001)sh159.907 91.0586 mo(\001)sh159.907 91.0727 mo(\001)sh159.907 91.0828 mo(\001)sh159.907 91.0905 mo(\001)sh159.907 91.0968 mo(\001)sh159.907 91.1014 mo(\001)sh159.907 91.1061 mo(\001)sh159.907 91.1092 mo(\001)sh159.907 91.1123 mo(\001)sh159.907 91.1147 mo(\001)sh159.907 91.117 mo(\001)sh159.907 91.1193 mo(\001)sh159.907 91.1209 mo(\001)sh159.907 91.1225 mo(\001)sh159.907 91.124 mo(\001)sh159.907 91.1256 mo(\001)sh159.907 91.1264 mo(\001)sh159.907 91.1279 mo(\001)sh159.907 91.1287 mo(\001)sh159.907 91.1295 mo(\001)sh159.907 91.1303 mo(\001)sh159.907 91.1311 mo(\001)sh159.907 91.1319 mo(\001)sh159.907 91.1326 mo(\001)sh159.907 91.1334 mo(\001)sh159.907 91.1342 mo(\001)sh159.907 91.1342 mo(\001)sh159.907 91.135 mo(\001)sh159.907 91.1358 mo(\001)sh159.907 91.1358 mo(\001)sh159.907 91.1365 mo(\001)sh159.907 91.1365 mo(\001)sh159.907 91.1373 mo(\001)sh159.907 91.1373 mo(\001)sh159.907 91.1381 mo(\001)sh159.907 91.1381 mo(\001)sh159.907 91.1389 mo(\001)sh159.907 91.1389 mo(\001)sh159.907 91.1396 mo(\001)sh159.907 91.1396 mo(\001)sh159.907 91.1396 mo(\001)sh159.907 91.1404 mo(\001)sh159.907 91.1404 mo(\001)sh159.907 91.1404 mo(\001)sh159.907 93.8274 mo(\001)sh162.909 88.3664 mo(\001)sh162.909 88.852 mo(\001)sh162.909 88.9663 mo(\001)sh162.909 89.0185 mo(\001)sh162.909 89.0488 mo(\001)sh162.909 89.0683 mo(\001)sh162.909 89.0823 mo(\001)sh162.909 89.0924 mo(\001)sh162.909 89.101 mo(\001)sh162.909 89.1072 mo(\001)sh162.909 89.1126 mo(\001)sh162.909 89.1166 mo(\001)sh162.909 89.1205 mo(\001)sh162.909 89.1236 mo(\001)sh162.909 89.1259 mo(\001)sh162.909 89.1283 mo(\001)sh162.909 89.1306 mo(\001)sh162.909 89.1322 mo(\001)sh162.909 89.1345 mo(\001)sh162.909 89.1353 mo(\001)sh162.909 89.1368 mo(\001)sh162.909 89.1384 mo(\001)sh162.909 89.1392 mo(\001)sh162.909 89.1407 mo(\001)sh162.909 89.1415 mo(\001)sh162.909 89.1423 mo(\001)sh162.909 89.1431 mo(\001)sh162.909 89.1438 mo(\001)sh162.909 89.1446 mo(\001)sh162.909 89.1454 mo(\001)sh162.909 89.1454 mo(\001)sh162.909 89.1462 mo(\001)sh162.909 89.1469 mo(\001)sh162.909 89.1469 mo(\001)sh162.909 89.1478 mo(\001)sh162.909 89.1486 mo(\001)sh162.909 89.1486 mo(\001)sh162.909 89.1494 mo(\001)sh162.909 89.1494 mo(\001)sh162.909 89.1501 mo(\001)sh162.909 89.1501 mo(\001)sh162.909 89.1509 mo(\001)sh162.909 89.1509 mo(\001)sh162.909 89.1509 mo(\001)sh162.909 89.1517 mo(\001)sh162.909 89.1517 mo(\001)sh162.909 89.1517 mo(\001)sh162.909 89.1525 mo(\001)sh162.909 89.1525 mo(\001)sh162.909 91.9179 mo(\001)sh165.912 86.3559 mo(\001)sh165.912 86.8554 mo(\001)sh165.912 86.9729 mo(\001)sh165.912 87.0266 mo(\001)sh165.912 87.0578 mo(\001)sh165.912 87.078 mo(\001)sh165.912 87.092 mo(\001)sh165.912 87.1029 mo(\001)sh165.912 87.1114 mo(\001)sh165.912 87.1177 mo(\001)sh165.912 87.1231 mo(\001)sh165.912 87.1278 mo(\001)sh165.912 87.1317 mo(\001)sh165.912 87.1348 mo(\001)sh165.912 87.1371 mo(\001)sh165.912 87.1395 mo(\001)sh165.912 87.1418 mo(\001)sh165.912 87.1441 mo(\001)sh165.912 87.1457 mo(\001)sh165.912 87.1472 mo(\001)sh165.912 87.1488 mo(\001)sh165.912 87.1496 mo(\001)sh165.912 87.1511 mo(\001)sh165.912 87.1519 mo(\001)sh165.912 87.1527 mo(\001)sh165.912 87.1535 mo(\001)sh165.912 87.1543 mo(\001)sh165.912 87.1551 mo(\001)sh165.912 87.1559 mo(\001)sh165.912 87.1567 mo(\001)sh165.912 87.1574 mo(\001)sh165.912 87.1582 mo(\001)sh165.912 87.159 mo(\001)sh165.912 87.159 mo(\001)sh165.912 87.1598 mo(\001)sh165.912 87.1598 mo(\001)sh165.912 87.1606 mo(\001)sh165.912 87.1613 mo(\001)sh165.912 87.1613 mo(\001)sh165.912 87.1613 mo(\001)sh165.912 87.1621 mo(\001)sh165.912 87.1621 mo(\001)sh165.912 87.1629 mo(\001)sh165.912 87.1629 mo(\001)sh165.912 87.1637 mo(\001)sh165.912 87.1637 mo(\001)sh165.912 87.1637 mo(\001)sh165.912 87.1645 mo(\001)sh165.912 87.1645 mo(\001)sh165.912 90.0093 mo(\001)sh168.914 84.3454 mo(\001)sh168.914 84.8589 mo(\001)sh168.914 84.9795 mo(\001)sh168.914 85.0348 mo(\001)sh168.914 85.0667 mo(\001)sh168.914 85.0876 mo(\001)sh168.914 85.1024 mo(\001)sh168.914 85.1134 mo(\001)sh168.914 85.1219 mo(\001)sh168.914 85.1281 mo(\001)sh168.914 85.1336 mo(\001)sh168.914 85.1382 mo(\001)sh168.914 85.1422 mo(\001)sh168.914 85.1461 mo(\001)sh168.914 85.1484 mo(\001)sh168.914 85.1507 mo(\001)sh168.914 85.1531 mo(\001)sh168.914 85.1554 mo(\001)sh168.914 85.157 mo(\001)sh168.914 85.1585 mo(\001)sh168.914 85.1601 mo(\001)sh168.914 85.1616 mo(\001)sh168.914 85.1624 mo(\001)sh168.914 85.1632 mo(\001)sh168.914 85.1647 mo(\001)sh168.914 85.1655 mo(\001)sh168.914 85.1663 mo(\001)sh168.914 85.1671 mo(\001)sh168.914 85.1679 mo(\001)sh168.914 85.1686 mo(\001)sh168.914 85.1694 mo(\001)sh168.914 85.1694 mo(\001)sh168.914 85.1702 mo(\001)sh168.914 85.171 mo(\001)sh168.914 85.1718 mo(\001)sh168.914 85.1718 mo(\001)sh168.914 85.1726 mo(\001)sh168.914 85.1726 mo(\001)sh168.914 85.1734 mo(\001)sh168.914 85.1734 mo(\001)sh168.914 85.1741 mo(\001)sh168.914 85.1741 mo(\001)sh168.914 85.1749 mo(\001)sh168.914 85.1749 mo(\001)sh168.914 85.1749 mo(\001)sh168.914 85.1757 mo(\001)sh168.914 85.1757 mo(\001)sh168.914 85.1765 mo(\001)sh168.914 85.1765 mo(\001)sh168.914 88.0999 mo(\001)sh171.916 82.3348 mo(\001)sh171.916 82.8623 mo(\001)sh171.916 82.9861 mo(\001)sh171.916 83.0429 mo(\001)sh171.916 83.0756 mo(\001)sh171.916 83.0973 mo(\001)sh171.916 83.1121 mo(\001)sh171.916 83.1238 mo(\001)sh171.916 83.1324 mo(\001)sh171.916 83.1394 mo(\001)sh171.916 83.1448 mo(\001)sh171.916 83.1495 mo(\001)sh171.916 83.1534 mo(\001)sh171.916 83.1565 mo(\001)sh171.916 83.1596 mo(\001)sh171.916 83.1619 mo(\001)sh171.916 83.1643 mo(\001)sh171.916 83.1666 mo(\001)sh171.916 83.1682 mo(\001)sh171.916 83.1697 mo(\001)sh171.916 83.1713 mo(\001)sh171.916 83.1728 mo(\001)sh171.916 83.1736 mo(\001)sh171.916 83.1752 mo(\001)sh171.916 83.1759 mo(\001)sh171.916 83.1767 mo(\001)sh171.916 83.1783 mo(\001)sh171.916 83.179 mo(\001)sh171.916 83.1799 mo(\001)sh171.916 83.1799 mo(\001)sh171.916 83.1807 mo(\001)sh171.916 83.1814 mo(\001)sh171.916 83.1822 mo(\001)sh171.916 83.183 mo(\001)sh171.916 83.183 mo(\001)sh171.916 83.1838 mo(\001)sh171.916 83.1838 mo(\001)sh171.916 83.1846 mo(\001)sh171.916 83.1853 mo(\001)sh171.916 83.1853 mo(\001)sh171.916 83.1861 mo(\001)sh171.916 83.1861 mo(\001)sh171.916 83.1861 mo(\001)sh171.916 83.1869 mo(\001)sh171.916 83.1869 mo(\001)sh171.916 83.1877 mo(\001)sh171.916 83.1877 mo(\001)sh171.916 83.1877 mo(\001)sh171.916 83.1885 mo(\001)sh171.916 86.1912 mo(\001)sh174.918 80.3242 mo(\001)sh174.918 80.8658 mo(\001)sh174.918 80.9926 mo(\001)sh174.918 81.0509 mo(\001)sh174.918 81.0844 mo(\001)sh174.918 81.1062 mo(\001)sh174.918 81.1218 mo(\001)sh174.918 81.1334 mo(\001)sh174.918 81.1428 mo(\001)sh174.918 81.1498 mo(\001)sh174.918 81.1552 mo(\001)sh174.918 81.1599 mo(\001)sh174.918 81.1646 mo(\001)sh174.918 81.1677 mo(\001)sh174.918 81.1708 mo(\001)sh174.918 81.1731 mo(\001)sh174.918 81.1755 mo(\001)sh174.918 81.1778 mo(\001)sh174.918 81.1793 mo(\001)sh174.918 81.1817 mo(\001)sh174.918 81.1824 mo(\001)sh174.918 81.184 mo(\001)sh174.918 81.1856 mo(\001)sh174.918 81.1863 mo(\001)sh174.918 81.1879 mo(\001)sh174.918 81.1888 mo(\001)sh174.918 81.1895 mo(\001)sh174.918 81.1903 mo(\001)sh174.918 81.1911 mo(\001)sh174.918 81.1919 mo(\001)sh174.918 81.1926 mo(\001)sh174.918 81.1934 mo(\001)sh174.918 81.1942 mo(\001)sh174.918 81.1942 mo(\001)sh174.918 81.195 mo(\001)sh174.918 81.1958 mo(\001)sh174.918 81.1958 mo(\001)sh174.918 81.1965 mo(\001)sh174.918 81.1965 mo(\001)sh174.918 81.1973 mo(\001)sh174.918 81.1973 mo(\001)sh174.918 81.1981 mo(\001)sh174.918 81.1981 mo(\001)sh174.918 81.1989 mo(\001)sh174.918 81.1989 mo(\001)sh174.918 81.1997 mo(\001)sh174.918 81.1997 mo(\001)sh174.918 81.1997 mo(\001)sh174.918 81.2005 mo(\001)sh174.918 84.2819 mo(\001)sh177.92 78.3137 mo(\001)sh177.92 78.8685 mo(\001)sh177.92 78.9992 mo(\001)sh177.92 79.0591 mo(\001)sh177.92 79.0933 mo(\001)sh177.92 79.1159 mo(\001)sh177.92 79.1322 mo(\001)sh177.92 79.1439 mo(\001)sh177.92 79.1533 mo(\001)sh177.92 79.1603 mo(\001)sh177.92 79.1665 mo(\001)sh177.92 79.1712 mo(\001)sh177.92 79.175 mo(\001)sh177.92 79.1789 mo(\001)sh177.92 79.182 mo(\001)sh177.92 79.1844 mo(\001)sh177.92 79.1867 mo(\001)sh177.92 79.189 mo(\001)sh177.92 79.1914 mo(\001)sh177.92 79.1929 mo(\001)sh177.92 79.1945 mo(\001)sh177.92 79.1961 mo(\001)sh177.92 79.1968 mo(\001)sh177.92 79.1984 mo(\001)sh177.92 79.1992 mo(\001)sh177.92 79.1999 mo(\001)sh177.92 79.2015 mo(\001)sh177.92 79.2023 mo(\001)sh177.92 79.2031 mo(\001)sh177.92 79.2038 mo(\001)sh177.92 79.2046 mo(\001)sh177.92 79.2046 mo(\001)sh177.92 79.2054 mo(\001)sh177.92 79.2062 mo(\001)sh177.92 79.207 mo(\001)sh177.92 79.207 mo(\001)sh177.92 79.2078 mo(\001)sh177.92 79.2086 mo(\001)sh177.92 79.2086 mo(\001)sh177.92 79.2094 mo(\001)sh177.92 79.2094 mo(\001)sh177.92 79.2101 mo(\001)sh177.92 79.2101 mo(\001)sh177.92 79.2109 mo(\001)sh177.92 79.2109 mo(\001)sh177.92 79.2109 mo(\001)sh177.92 79.2117 mo(\001)sh177.92 79.2117 mo(\001)sh177.92 79.2117 mo(\001)sh177.92 82.3732 mo(\001)sh180.921 76.3031 mo(\001)sh180.921 76.8719 mo(\001)sh180.921 77.0057 mo(\001)sh180.921 77.0672 mo(\001)sh180.921 77.1022 mo(\001)sh180.921 77.1255 mo(\001)sh180.921 77.1419 mo(\001)sh180.921 77.1543 mo(\001)sh180.921 77.1637 mo(\001)sh180.921 77.1707 mo(\001)sh180.921 77.1769 mo(\001)sh180.921 77.1823 mo(\001)sh180.921 77.1862 mo(\001)sh180.921 77.1901 mo(\001)sh180.921 77.1932 mo(\001)sh180.921 77.1956 mo(\001)sh180.921 77.1987 mo(\001)sh180.921 77.2002 mo(\001)sh180.921 77.2026 mo(\001)sh180.921 77.2041 mo(\001)sh180.921 77.2057 mo(\001)sh180.921 77.2072 mo(\001)sh180.921 77.2088 mo(\001)sh180.921 77.2096 mo(\001)sh180.921 77.2111 mo(\001)sh180.921 77.2119 mo(\001)sh180.921 77.2127 mo(\001)sh180.921 77.2135 mo(\001)sh180.921 77.2142 mo(\001)sh180.921 77.215 mo(\001)sh180.921 77.2159 mo(\001)sh180.921 77.2167 mo(\001)sh180.921 77.2174 mo(\001)sh180.921 77.2182 mo(\001)sh180.921 77.2182 mo(\001)sh180.921 77.219 mo(\001)sh180.921 77.2198 mo(\001)sh180.921 77.2198 mo(\001)sh180.921 77.2205 mo(\001)sh180.921 77.2205 mo(\001)sh180.921 77.2213 mo(\001)sh180.921 77.2213 mo(\001)sh180.921 77.2221 mo(\001)sh180.921 77.2221 mo(\001)sh180.921 77.2229 mo(\001)sh180.921 77.2229 mo(\001)sh180.921 77.2237 mo(\001)sh180.921 77.2237 mo(\001)sh180.921 77.2237 mo(\001)sh180.921 80.4638 mo(\001)sh183.923 74.2925 mo(\001)sh183.923 74.8753 mo(\001)sh183.923 75.0122 mo(\001)sh183.923 75.0753 mo(\001)sh183.923 75.111 mo(\001)sh183.923 75.1352 mo(\001)sh183.923 75.1515 mo(\001)sh183.923 75.164 mo(\001)sh183.923 75.1741 mo(\001)sh183.923 75.1811 mo(\001)sh183.923 75.1873 mo(\001)sh183.923 75.1927 mo(\001)sh183.923 75.1974 mo(\001)sh183.923 75.2013 mo(\001)sh183.923 75.2044 mo(\001)sh183.923 75.2068 mo(\001)sh183.923 75.2099 mo(\001)sh183.923 75.2114 mo(\001)sh183.923 75.2138 mo(\001)sh183.923 75.2153 mo(\001)sh183.923 75.2169 mo(\001)sh183.923 75.2184 mo(\001)sh183.923 75.22 mo(\001)sh183.923 75.2215 mo(\001)sh183.923 75.2223 mo(\001)sh183.923 75.2231 mo(\001)sh183.923 75.2247 mo(\001)sh183.923 75.2254 mo(\001)sh183.923 75.2263 mo(\001)sh183.923 75.2271 mo(\001)sh183.923 75.2278 mo(\001)sh183.923 75.2286 mo(\001)sh183.923 75.2294 mo(\001)sh183.923 75.2294 mo(\001)sh183.923 75.2302 mo(\001)sh183.923 75.231 mo(\001)sh183.923 75.231 mo(\001)sh183.923 75.2317 mo(\001)sh183.923 75.2325 mo(\001)sh183.923 75.2325 mo(\001)sh183.923 75.2333 mo(\001)sh183.923 75.2333 mo(\001)sh183.923 75.2341 mo(\001)sh183.923 75.2341 mo(\001)sh183.923 75.2348 mo(\001)sh183.923 75.2348 mo(\001)sh183.923 75.2348 mo(\001)sh183.923 75.2356 mo(\001)sh183.923 75.2356 mo(\001)sh183.923 78.5543 mo(\001)sh186.925 72.2819 mo(\001)sh186.925 72.8787 mo(\001)sh186.925 73.0187 mo(\001)sh186.925 73.0833 mo(\001)sh186.925 73.1207 mo(\001)sh186.925 73.1448 mo(\001)sh186.925 73.1619 mo(\001)sh186.925 73.1744 mo(\001)sh186.925 73.1845 mo(\001)sh186.925 73.1923 mo(\001)sh186.925 73.1985 mo(\001)sh186.925 73.2039 mo(\001)sh186.925 73.2078 mo(\001)sh186.925 73.2117 mo(\001)sh186.925 73.2156 mo(\001)sh186.925 73.218 mo(\001)sh186.925 73.2211 mo(\001)sh186.925 73.2235 mo(\001)sh186.925 73.225 mo(\001)sh186.925 73.2274 mo(\001)sh186.925 73.2289 mo(\001)sh186.925 73.2305 mo(\001)sh186.925 73.2313 mo(\001)sh186.925 73.2328 mo(\001)sh186.925 73.2344 mo(\001)sh186.925 73.2351 mo(\001)sh186.925 73.2359 mo(\001)sh186.925 73.2367 mo(\001)sh186.925 73.2375 mo(\001)sh186.925 73.2383 mo(\001)sh186.925 73.239 mo(\001)sh186.925 73.2398 mo(\001)sh186.925 73.2406 mo(\001)sh186.925 73.2414 mo(\001)sh186.925 73.2421 mo(\001)sh186.925 73.2421 mo(\001)sh186.925 73.2429 mo(\001)sh186.925 73.2437 mo(\001)sh186.925 73.2437 mo(\001)sh186.925 73.2446 mo(\001)sh186.925 73.2453 mo(\001)sh186.925 73.2453 mo(\001)sh186.925 73.2461 mo(\001)sh186.925 73.2461 mo(\001)sh186.925 73.2461 mo(\001)sh186.925 73.2469 mo(\001)sh186.925 73.2469 mo(\001)sh186.925 73.2477 mo(\001)sh186.925 73.2477 mo(\001)sh186.925 76.6458 mo(\001)sh189.927 70.2713 mo(\001)sh189.927 70.8822 mo(\001)sh189.927 71.0253 mo(\001)sh189.927 71.0915 mo(\001)sh189.927 71.1296 mo(\001)sh189.927 71.1537 mo(\001)sh189.927 71.1716 mo(\001)sh189.927 71.1849 mo(\001)sh189.927 71.195 mo(\001)sh189.927 71.2028 mo(\001)sh189.927 71.209 mo(\001)sh189.927 71.2144 mo(\001)sh189.927 71.2191 mo(\001)sh189.927 71.223 mo(\001)sh189.927 71.2269 mo(\001)sh189.927 71.2292 mo(\001)sh189.927 71.2323 mo(\001)sh189.927 71.2347 mo(\001)sh189.927 71.2362 mo(\001)sh189.927 71.2386 mo(\001)sh189.927 71.2401 mo(\001)sh189.927 71.2417 mo(\001)sh189.927 71.2432 mo(\001)sh189.927 71.244 mo(\001)sh189.927 71.2456 mo(\001)sh189.927 71.2463 mo(\001)sh189.927 71.2479 mo(\001)sh189.927 71.2487 mo(\001)sh189.927 71.2495 mo(\001)sh189.927 71.2502 mo(\001)sh189.927 71.251 mo(\001)sh189.927 71.2519 mo(\001)sh189.927 71.2526 mo(\001)sh189.927 71.2534 mo(\001)sh189.927 71.2534 mo(\001)sh189.927 71.2542 mo(\001)sh189.927 71.255 mo(\001)sh189.927 71.2558 mo(\001)sh189.927 71.2558 mo(\001)sh189.927 71.2565 mo(\001)sh189.927 71.2565 mo(\001)sh189.927 71.2573 mo(\001)sh189.927 71.2573 mo(\001)sh189.927 71.2581 mo(\001)sh189.927 71.2581 mo(\001)sh189.927 71.2589 mo(\001)sh189.927 71.2589 mo(\001)sh189.927 71.2596 mo(\001)sh189.927 71.2596 mo(\001)sh189.927 74.7363 mo(\001)sh192.929 68.2607 mo(\001)sh192.929 68.8856 mo(\001)sh192.929 69.0319 mo(\001)sh192.929 69.0996 mo(\001)sh192.929 69.1385 mo(\001)sh192.929 69.1634 mo(\001)sh192.929 69.1813 mo(\001)sh192.929 69.1945 mo(\001)sh192.929 69.2054 mo(\001)sh192.929 69.2132 mo(\001)sh192.929 69.2202 mo(\001)sh192.929 69.2256 mo(\001)sh192.929 69.2303 mo(\001)sh192.929 69.2342 mo(\001)sh192.929 69.2373 mo(\001)sh192.929 69.2404 mo(\001)sh192.929 69.2435 mo(\001)sh192.929 69.2458 mo(\001)sh192.929 69.2482 mo(\001)sh192.929 69.2497 mo(\001)sh192.929 69.2513 mo(\001)sh192.929 69.2529 mo(\001)sh192.929 69.2544 mo(\001)sh192.929 69.256 mo(\001)sh192.929 69.2567 mo(\001)sh192.929 69.2583 mo(\001)sh192.929 69.2591 mo(\001)sh192.929 69.2599 mo(\001)sh192.929 69.2614 mo(\001)sh192.929 69.2623 mo(\001)sh192.929 69.263 mo(\001)sh192.929 69.2638 mo(\001)sh192.929 69.2646 mo(\001)sh192.929 69.2646 mo(\001)sh192.929 69.2654 mo(\001)sh192.929 69.2662 mo(\001)sh192.929 69.2669 mo(\001)sh192.929 69.2669 mo(\001)sh192.929 69.2677 mo(\001)sh192.929 69.2685 mo(\001)sh192.929 69.2685 mo(\001)sh192.929 69.2693 mo(\001)sh192.929 69.2693 mo(\001)sh192.929 69.2701 mo(\001)sh192.929 69.2701 mo(\001)sh192.929 69.2708 mo(\001)sh192.929 69.2708 mo(\001)sh192.929 69.2708 mo(\001)sh192.929 69.2716 mo(\001)sh192.929 72.8276 mo(\001)sh195.931 66.2502 mo(\001)sh195.931 66.8883 mo(\001)sh195.931 67.0384 mo(\001)sh195.931 67.1077 mo(\001)sh195.931 67.1473 mo(\001)sh195.931 67.1731 mo(\001)sh195.931 67.1918 mo(\001)sh195.931 67.205 mo(\001)sh195.931 67.2159 mo(\001)sh195.931 67.2237 mo(\001)sh195.931 67.2307 mo(\001)sh195.931 67.2361 mo(\001)sh195.931 67.2415 mo(\001)sh195.931 67.2455 mo(\001)sh195.931 67.2486 mo(\001)sh195.931 67.2517 mo(\001)sh195.931 67.2548 mo(\001)sh195.931 67.2571 mo(\001)sh195.931 67.2595 mo(\001)sh195.931 67.261 mo(\001)sh195.931 67.2633 mo(\001)sh195.931 67.2649 mo(\001)sh195.931 67.2665 mo(\001)sh195.931 67.2672 mo(\001)sh195.931 67.2688 mo(\001)sh195.931 67.2696 mo(\001)sh195.931 67.2711 mo(\001)sh195.931 67.2719 mo(\001)sh195.931 67.2727 mo(\001)sh195.931 67.2735 mo(\001)sh195.931 67.2742 mo(\001)sh195.931 67.275 mo(\001)sh195.931 67.2758 mo(\001)sh195.931 67.2766 mo(\001)sh195.931 67.2773 mo(\001)sh195.931 67.2782 mo(\001)sh195.931 67.2782 mo(\001)sh195.931 67.279 mo(\001)sh195.931 67.2798 mo(\001)sh195.931 67.2798 mo(\001)sh195.931 67.2805 mo(\001)sh195.931 67.2805 mo(\001)sh195.931 67.2813 mo(\001)sh195.931 67.2821 mo(\001)sh195.931 67.2821 mo(\001)sh195.931 67.2821 mo(\001)sh195.931 67.2829 mo(\001)sh195.931 67.2829 mo(\001)sh195.931 67.2837 mo(\001)sh195.931 70.9183 mo(\001)sh198.933 64.2396 mo(\001)sh198.933 64.8917 mo(\001)sh198.933 65.045 mo(\001)sh198.933 65.1158 mo(\001)sh198.933 65.1563 mo(\001)sh198.933 65.1827 mo(\001)sh198.933 65.2014 mo(\001)sh198.933 65.2154 mo(\001)sh198.933 65.2263 mo(\001)sh198.933 65.2349 mo(\001)sh198.933 65.2419 mo(\001)sh198.933 65.2473 mo(\001)sh198.933 65.252 mo(\001)sh198.933 65.2566 mo(\001)sh198.933 65.2598 mo(\001)sh198.933 65.2629 mo(\001)sh198.933 65.266 mo(\001)sh198.933 65.2683 mo(\001)sh198.933 65.2706 mo(\001)sh198.933 65.273 mo(\001)sh198.933 65.2745 mo(\001)sh198.933 65.2761 mo(\001)sh198.933 65.2776 mo(\001)sh198.933 65.2792 mo(\001)sh198.933 65.2801 mo(\001)sh198.933 65.2815 mo(\001)sh198.933 65.2824 mo(\001)sh198.933 65.284 mo(\001)sh198.933 65.2847 mo(\001)sh198.933 65.2855 mo(\001)sh198.933 65.2863 mo(\001)sh198.933 65.2871 mo(\001)sh198.933 65.2878 mo(\001)sh198.933 65.2886 mo(\001)sh198.933 65.2894 mo(\001)sh198.933 65.2894 mo(\001)sh198.933 65.2902 mo(\001)sh198.933 65.291 mo(\001)sh198.933 65.291 mo(\001)sh198.933 65.2917 mo(\001)sh198.933 65.2925 mo(\001)sh198.933 65.2925 mo(\001)sh198.933 65.2933 mo(\001)sh198.933 65.2933 mo(\001)sh198.933 65.2941 mo(\001)sh198.933 65.2941 mo(\001)sh198.933 65.2949 mo(\001)sh198.933 65.2949 mo(\001)sh198.933 65.2957 mo(\001)sh198.933 69.0097 mo(\001)sh201.935 62.2291 mo(\001)sh201.935 62.8952 mo(\001)sh201.935 63.0516 mo(\001)sh201.935 63.124 mo(\001)sh201.935 63.1652 mo(\001)sh201.935 63.1924 mo(\001)sh201.935 63.2111 mo(\001)sh201.935 63.2251 mo(\001)sh201.935 63.2368 mo(\001)sh201.935 63.2453 mo(\001)sh201.935 63.2523 mo(\001)sh201.935 63.2586 mo(\001)sh201.935 63.2632 mo(\001)sh201.935 63.2671 mo(\001)sh201.935 63.271 mo(\001)sh201.935 63.2741 mo(\001)sh201.935 63.2772 mo(\001)sh201.935 63.2796 mo(\001)sh201.935 63.2819 mo(\001)sh201.935 63.2843 mo(\001)sh201.935 63.2858 mo(\001)sh201.935 63.2874 mo(\001)sh201.935 63.2889 mo(\001)sh201.935 63.2905 mo(\001)sh201.935 63.292 mo(\001)sh201.935 63.2928 mo(\001)sh201.935 63.2944 mo(\001)sh201.935 63.2951 mo(\001)sh201.935 63.2959 mo(\001)sh201.935 63.2975 mo(\001)sh201.935 63.2983 mo(\001)sh201.935 63.299 mo(\001)sh201.935 63.2998 mo(\001)sh201.935 63.2998 mo(\001)sh201.935 63.3006 mo(\001)sh201.935 63.3014 mo(\001)sh201.935 63.3021 mo(\001)sh201.935 63.3029 mo(\001)sh201.935 63.3029 mo(\001)sh201.935 63.3038 mo(\001)sh201.935 63.3046 mo(\001)sh201.935 63.3046 mo(\001)sh201.935 63.3053 mo(\001)sh201.935 63.3053 mo(\001)sh201.935 63.3061 mo(\001)sh201.935 63.3061 mo(\001)sh201.935 63.3069 mo(\001)sh201.935 63.3069 mo(\001)sh201.935 63.3077 mo(\001)sh201.935 67.1003 mo(\001)sh204.937 60.2185 mo(\001)sh204.937 60.8986 mo(\001)sh204.937 61.0581 mo(\001)sh204.937 61.132 mo(\001)sh204.937 61.1741 mo(\001)sh204.937 61.2013 mo(\001)sh204.937 61.2207 mo(\001)sh204.937 61.2355 mo(\001)sh204.937 61.2472 mo(\001)sh204.937 61.2558 mo(\001)sh204.937 61.2628 mo(\001)sh204.937 61.269 mo(\001)sh204.937 61.2744 mo(\001)sh204.937 61.2783 mo(\001)sh204.937 61.2822 mo(\001)sh204.937 61.2853 mo(\001)sh204.937 61.2884 mo(\001)sh204.937 61.2908 mo(\001)sh204.937 61.2931 mo(\001)sh204.937 61.2954 mo(\001)sh204.937 61.2978 mo(\001)sh204.937 61.2993 mo(\001)sh204.937 61.3009 mo(\001)sh204.937 61.3024 mo(\001)sh204.937 61.3032 mo(\001)sh204.937 61.3048 mo(\001)sh204.937 61.3055 mo(\001)sh204.937 61.3071 mo(\001)sh204.937 61.3079 mo(\001)sh204.937 61.3087 mo(\001)sh204.937 61.3094 mo(\001)sh204.937 61.3103 mo(\001)sh204.937 61.3111 mo(\001)sh204.937 61.3119 mo(\001)sh204.937 61.3126 mo(\001)sh204.937 61.3134 mo(\001)sh204.937 61.3142 mo(\001)sh204.937 61.3142 mo(\001)sh204.937 61.315 mo(\001)sh204.937 61.3158 mo(\001)sh204.937 61.3158 mo(\001)sh204.937 61.3165 mo(\001)sh204.937 61.3165 mo(\001)sh204.937 61.3173 mo(\001)sh204.937 61.3181 mo(\001)sh204.937 61.3181 mo(\001)sh204.937 61.3189 mo(\001)sh204.937 61.3189 mo(\001)sh204.937 61.3189 mo(\001)sh204.937 65.1908 mo(\001)sh207.939 58.2079 mo(\001)sh207.939 58.902 mo(\001)sh207.939 59.0654 mo(\001)sh207.939 59.1401 mo(\001)sh207.939 59.1829 mo(\001)sh207.939 59.2109 mo(\001)sh207.939 59.2312 mo(\001)sh207.939 59.2459 mo(\001)sh207.939 59.2568 mo(\001)sh207.939 59.2662 mo(\001)sh207.939 59.274 mo(\001)sh207.939 59.2802 mo(\001)sh207.939 59.2848 mo(\001)sh207.939 59.2895 mo(\001)sh207.939 59.2934 mo(\001)sh207.939 59.2965 mo(\001)sh207.939 59.2996 mo(\001)sh207.939 59.3027 mo(\001)sh207.939 59.3051 mo(\001)sh207.939 59.3066 mo(\001)sh207.939 59.309 mo(\001)sh207.939 59.3105 mo(\001)sh207.939 59.3121 mo(\001)sh207.939 59.3136 mo(\001)sh207.939 59.3152 mo(\001)sh207.939 59.316 mo(\001)sh207.939 59.3175 mo(\001)sh207.939 59.3183 mo(\001)sh207.939 59.3199 mo(\001)sh207.939 59.3206 mo(\001)sh207.939 59.3214 mo(\001)sh207.939 59.3222 mo(\001)sh207.939 59.323 mo(\001)sh207.939 59.3237 mo(\001)sh207.939 59.3246 mo(\001)sh207.939 59.3254 mo(\001)sh207.939 59.3254 mo(\001)sh207.939 59.3262 mo(\001)sh207.939 59.327 mo(\001)sh207.939 59.327 mo(\001)sh207.939 59.3277 mo(\001)sh207.939 59.3285 mo(\001)sh207.939 59.3285 mo(\001)sh207.939 59.3293 mo(\001)sh207.939 59.3293 mo(\001)sh207.939 59.33 mo(\001)sh207.939 59.33 mo(\001)sh207.939 59.3308 mo(\001)sh207.939 59.3308 mo(\001)sh207.939 63.2822 mo(\001)sh210.941 56.1973 mo(\001)sh210.941 56.9054 mo(\001)sh210.941 57.0719 mo(\001)sh210.941 57.1482 mo(\001)sh210.941 57.1918 mo(\001)sh210.941 57.2206 mo(\001)sh210.941 57.2408 mo(\001)sh210.941 57.2556 mo(\001)sh210.941 57.2672 mo(\001)sh210.941 57.2766 mo(\001)sh210.941 57.2844 mo(\001)sh210.941 57.2906 mo(\001)sh210.941 57.296 mo(\001)sh210.941 57.3007 mo(\001)sh210.941 57.3046 mo(\001)sh210.941 57.3077 mo(\001)sh210.941 57.3108 mo(\001)sh210.941 57.3139 mo(\001)sh210.941 57.3163 mo(\001)sh210.941 57.3186 mo(\001)sh210.941 57.3201 mo(\001)sh210.941 57.3225 mo(\001)sh210.941 57.3241 mo(\001)sh210.941 57.3256 mo(\001)sh210.941 57.3264 mo(\001)sh210.941 57.3279 mo(\001)sh210.941 57.3287 mo(\001)sh210.941 57.3303 mo(\001)sh210.941 57.3311 mo(\001)sh210.941 57.3319 mo(\001)sh210.941 57.3335 mo(\001)sh210.941 57.3342 mo(\001)sh210.941 57.335 mo(\001)sh210.941 57.3358 mo(\001)sh210.941 57.3358 mo(\001)sh210.941 57.3366 mo(\001)sh210.941 57.3374 mo(\001)sh210.941 57.3381 mo(\001)sh210.941 57.3389 mo(\001)sh210.941 57.3389 mo(\001)sh210.941 57.3397 mo(\001)sh210.941 57.3405 mo(\001)sh210.941 57.3405 mo(\001)sh210.941 57.3412 mo(\001)sh210.941 57.3412 mo(\001)sh210.941 57.342 mo(\001)sh210.941 57.342 mo(\001)sh210.941 57.3428 mo(\001)sh210.941 57.3428 mo(\001)sh210.941 61.3727 mo(\001)sh213.943 54.1867 mo(\001)sh213.943 54.9088 mo(\001)sh213.943 55.0785 mo(\001)sh213.943 55.1555 mo(\001)sh213.943 55.2006 mo(\001)sh213.943 55.2302 mo(\001)sh213.943 55.2504 mo(\001)sh213.943 55.266 mo(\001)sh213.943 55.2776 mo(\001)sh213.943 55.2878 mo(\001)sh213.943 55.2955 mo(\001)sh213.943 55.3018 mo(\001)sh213.943 55.3072 mo(\001)sh213.943 55.3119 mo(\001)sh213.943 55.3158 mo(\001)sh213.943 55.3189 mo(\001)sh213.943 55.322 mo(\001)sh213.943 55.3251 mo(\001)sh213.943 55.3275 mo(\001)sh213.943 55.3298 mo(\001)sh213.943 55.3321 mo(\001)sh213.943 55.3337 mo(\001)sh213.943 55.3352 mo(\001)sh213.943 55.3368 mo(\001)sh213.943 55.3383 mo(\001)sh213.943 55.3391 mo(\001)sh213.943 55.3407 mo(\001)sh213.943 55.3415 mo(\001)sh213.943 55.343 mo(\001)sh213.943 55.3439 mo(\001)sh213.943 55.3447 mo(\001)sh213.943 55.3454 mo(\001)sh213.943 55.3462 mo(\001)sh213.943 55.347 mo(\001)sh213.943 55.3478 mo(\001)sh213.943 55.3485 mo(\001)sh213.943 55.3493 mo(\001)sh213.943 55.3501 mo(\001)sh213.943 55.3501 mo(\001)sh213.943 55.3509 mo(\001)sh213.943 55.3517 mo(\001)sh213.943 55.3517 mo(\001)sh213.943 55.3524 mo(\001)sh213.943 55.3532 mo(\001)sh213.943 55.3532 mo(\001)sh213.943 55.354 mo(\001)sh213.943 55.354 mo(\001)sh213.943 55.3548 mo(\001)sh213.943 55.3548 mo(\001)sh213.943 59.4641 mo(\001)sh216.944 52.1762 mo(\001)sh216.944 52.9115 mo(\001)sh216.944 53.0851 mo(\001)sh216.944 53.1637 mo(\001)sh216.944 53.2095 mo(\001)sh216.944 53.2399 mo(\001)sh216.944 53.2609 mo(\001)sh216.944 53.2765 mo(\001)sh216.944 53.2881 mo(\001)sh216.944 53.2982 mo(\001)sh216.944 53.306 mo(\001)sh216.944 53.3123 mo(\001)sh216.944 53.3177 mo(\001)sh216.944 53.3232 mo(\001)sh216.944 53.327 mo(\001)sh216.944 53.3302 mo(\001)sh216.944 53.3333 mo(\001)sh216.944 53.3364 mo(\001)sh216.944 53.3387 mo(\001)sh216.944 53.3411 mo(\001)sh216.944 53.3434 mo(\001)sh216.944 53.3449 mo(\001)sh216.944 53.3465 mo(\001)sh216.944 53.3481 mo(\001)sh216.944 53.3496 mo(\001)sh216.944 53.3512 mo(\001)sh216.944 53.3527 mo(\001)sh216.944 53.3535 mo(\001)sh216.944 53.3543 mo(\001)sh216.944 53.3558 mo(\001)sh216.944 53.3566 mo(\001)sh216.944 53.3574 mo(\001)sh216.944 53.3582 mo(\001)sh216.944 53.3589 mo(\001)sh216.944 53.3597 mo(\001)sh216.944 53.3605 mo(\001)sh216.944 53.3614 mo(\001)sh216.944 53.3614 mo(\001)sh216.944 53.3622 mo(\001)sh216.944 53.3629 mo(\001)sh216.944 53.3629 mo(\001)sh216.944 53.3637 mo(\001)sh216.944 53.3645 mo(\001)sh216.944 53.3645 mo(\001)sh216.944 53.3652 mo(\001)sh216.944 53.3652 mo(\001)sh216.944 53.366 mo(\001)sh216.944 53.366 mo(\001)sh216.944 53.3668 mo(\001)sh216.944 57.5547 mo(\001)sh219.946 50.1656 mo(\001)sh219.946 50.9149 mo(\001)sh219.946 51.0916 mo(\001)sh219.946 51.1717 mo(\001)sh219.946 51.2184 mo(\001)sh219.946 51.2487 mo(\001)sh219.946 51.2705 mo(\001)sh219.946 51.2869 mo(\001)sh219.946 51.2986 mo(\001)sh219.946 51.3087 mo(\001)sh219.946 51.3165 mo(\001)sh219.946 51.3235 mo(\001)sh219.946 51.3289 mo(\001)sh219.946 51.3336 mo(\001)sh219.946 51.3382 mo(\001)sh219.946 51.3414 mo(\001)sh219.946 51.3452 mo(\001)sh219.946 51.3476 mo(\001)sh219.946 51.3507 mo(\001)sh219.946 51.3522 mo(\001)sh219.946 51.3546 mo(\001)sh219.946 51.3569 mo(\001)sh219.946 51.3585 mo(\001)sh219.946 51.36 mo(\001)sh219.946 51.3616 mo(\001)sh219.946 51.3624 mo(\001)sh219.946 51.3639 mo(\001)sh219.946 51.3655 mo(\001)sh219.946 51.3663 mo(\001)sh219.946 51.367 mo(\001)sh219.946 51.3678 mo(\001)sh219.946 51.3694 mo(\001)sh219.946 51.3701 mo(\001)sh219.946 51.3709 mo(\001)sh219.946 51.3718 mo(\001)sh219.946 51.3718 mo(\001)sh219.946 51.3726 mo(\001)sh219.946 51.3733 mo(\001)sh219.946 51.3741 mo(\001)sh219.946 51.3749 mo(\001)sh219.946 51.3749 mo(\001)sh219.946 51.3757 mo(\001)sh219.946 51.3764 mo(\001)sh219.946 51.3764 mo(\001)sh219.946 51.3772 mo(\001)sh219.946 51.3772 mo(\001)sh219.946 51.378 mo(\001)sh219.946 51.378 mo(\001)sh219.946 51.3788 mo(\001)sh219.946 55.646 mo(\001)sh222.948 48.155 mo(\001)sh222.948 48.9184 mo(\001)sh222.948 49.0981 mo(\001)sh222.948 49.1798 mo(\001)sh222.948 49.2273 mo(\001)sh222.948 49.2584 mo(\001)sh222.948 49.2802 mo(\001)sh222.948 49.2965 mo(\001)sh222.948 49.309 mo(\001)sh222.948 49.3191 mo(\001)sh222.948 49.3276 mo(\001)sh222.948 49.3346 mo(\001)sh222.948 49.3401 mo(\001)sh222.948 49.3448 mo(\001)sh222.948 49.3494 mo(\001)sh222.948 49.3525 mo(\001)sh222.948 49.3564 mo(\001)sh222.948 49.3588 mo(\001)sh222.948 49.3619 mo(\001)sh222.948 49.3642 mo(\001)sh222.948 49.3658 mo(\001)sh222.948 49.3681 mo(\001)sh222.948 49.3697 mo(\001)sh222.948 49.3712 mo(\001)sh222.948 49.3728 mo(\001)sh222.948 49.3743 mo(\001)sh222.948 49.3759 mo(\001)sh222.948 49.3767 mo(\001)sh222.948 49.3774 mo(\001)sh222.948 49.379 mo(\001)sh222.948 49.3798 mo(\001)sh222.948 49.3806 mo(\001)sh222.948 49.3814 mo(\001)sh222.948 49.3822 mo(\001)sh222.948 49.383 mo(\001)sh222.948 49.3837 mo(\001)sh222.948 49.3845 mo(\001)sh222.948 49.3853 mo(\001)sh222.948 49.3861 mo(\001)sh222.948 49.3861 mo(\001)sh222.948 49.3869 mo(\001)sh222.948 49.3876 mo(\001)sh222.948 49.3876 mo(\001)sh222.948 49.3884 mo(\001)sh222.948 49.3892 mo(\001)sh222.948 49.3892 mo(\001)sh222.948 49.39 mo(\001)sh222.948 49.39 mo(\001)sh222.948 49.3907 mo(\001)sh222.948 53.7366 mo(\001)sh225.95 46.1444 mo(\001)sh225.95 46.9218 mo(\001)sh225.95 47.1046 mo(\001)sh225.95 47.1879 mo(\001)sh225.95 47.2361 mo(\001)sh225.95 47.268 mo(\001)sh225.95 47.2906 mo(\001)sh225.95 47.3069 mo(\001)sh225.95 47.3194 mo(\001)sh225.95 47.3303 mo(\001)sh225.95 47.3381 mo(\001)sh225.95 47.3451 mo(\001)sh225.95 47.3513 mo(\001)sh225.95 47.3559 mo(\001)sh225.95 47.3606 mo(\001)sh225.95 47.3637 mo(\001)sh225.95 47.3676 mo(\001)sh225.95 47.3707 mo(\001)sh225.95 47.3731 mo(\001)sh225.95 47.3754 mo(\001)sh225.95 47.3778 mo(\001)sh225.95 47.3794 mo(\001)sh225.95 47.3817 mo(\001)sh225.95 47.3833 mo(\001)sh225.95 47.3848 mo(\001)sh225.95 47.3856 mo(\001)sh225.95 47.3871 mo(\001)sh225.95 47.3887 mo(\001)sh225.95 47.3895 mo(\001)sh225.95 47.3903 mo(\001)sh225.95 47.3918 mo(\001)sh225.95 47.3926 mo(\001)sh225.95 47.3934 mo(\001)sh225.95 47.3941 mo(\001)sh225.95 47.3949 mo(\001)sh225.95 47.3957 mo(\001)sh225.95 47.3965 mo(\001)sh225.95 47.3973 mo(\001)sh225.95 47.3973 mo(\001)sh225.95 47.3981 mo(\001)sh225.95 47.3988 mo(\001)sh225.95 47.3996 mo(\001)sh225.95 47.3996 mo(\001)sh225.95 47.4005 mo(\001)sh225.95 47.4005 mo(\001)sh225.95 47.4012 mo(\001)sh225.95 47.402 mo(\001)sh225.95 47.402 mo(\001)sh225.95 47.4028 mo(\001)sh225.95 51.828 mo(\001)sh228.952 44.1339 mo(\001)sh228.952 44.9252 mo(\001)sh228.952 45.1112 mo(\001)sh228.952 45.196 mo(\001)sh228.952 45.2458 mo(\001)sh228.952 45.2777 mo(\001)sh228.952 45.3003 mo(\001)sh228.952 45.3174 mo(\001)sh228.952 45.3299 mo(\001)sh228.952 45.3408 mo(\001)sh228.952 45.3493 mo(\001)sh228.952 45.3563 mo(\001)sh228.952 45.3618 mo(\001)sh228.952 45.3672 mo(\001)sh228.952 45.3711 mo(\001)sh228.952 45.375 mo(\001)sh228.952 45.3789 mo(\001)sh228.952 45.382 mo(\001)sh228.952 45.3843 mo(\001)sh228.952 45.3867 mo(\001)sh228.952 45.389 mo(\001)sh228.952 45.3913 mo(\001)sh228.952 45.3929 mo(\001)sh228.952 45.3945 mo(\001)sh228.952 45.396 mo(\001)sh228.952 45.3976 mo(\001)sh228.952 45.3991 mo(\001)sh228.952 45.3999 mo(\001)sh228.952 45.4015 mo(\001)sh228.952 45.4022 mo(\001)sh228.952 45.403 mo(\001)sh228.952 45.4046 mo(\001)sh228.952 45.4053 mo(\001)sh228.952 45.4062 mo(\001)sh228.952 45.407 mo(\001)sh228.952 45.4078 mo(\001)sh228.952 45.4085 mo(\001)sh228.952 45.4085 mo(\001)sh228.952 45.4093 mo(\001)sh228.952 45.4101 mo(\001)sh228.952 45.4109 mo(\001)sh228.952 45.4109 mo(\001)sh228.952 45.4117 mo(\001)sh228.952 45.4124 mo(\001)sh228.952 45.4124 mo(\001)sh228.952 45.4132 mo(\001)sh228.952 45.4132 mo(\001)sh228.952 45.414 mo(\001)sh228.952 45.414 mo(\001)sh228.952 49.9185 mo(\001)sh231.954 42.1233 mo(\001)sh231.954 42.9286 mo(\001)sh231.954 43.1177 mo(\001)sh231.954 43.2041 mo(\001)sh231.954 43.2547 mo(\001)sh231.954 43.2874 mo(\001)sh231.954 43.3099 mo(\001)sh231.954 43.3271 mo(\001)sh231.954 43.3403 mo(\001)sh231.954 43.3512 mo(\001)sh231.954 43.3597 mo(\001)sh231.954 43.3667 mo(\001)sh231.954 43.373 mo(\001)sh231.954 43.3784 mo(\001)sh231.954 43.3823 mo(\001)sh231.954 43.3863 mo(\001)sh231.954 43.3902 mo(\001)sh231.954 43.3933 mo(\001)sh231.954 43.3956 mo(\001)sh231.954 43.3987 mo(\001)sh231.954 43.4003 mo(\001)sh231.954 43.4026 mo(\001)sh231.954 43.4042 mo(\001)sh231.954 43.4065 mo(\001)sh231.954 43.4081 mo(\001)sh231.954 43.4088 mo(\001)sh231.954 43.4104 mo(\001)sh231.954 43.412 mo(\001)sh231.954 43.4127 mo(\001)sh231.954 43.4143 mo(\001)sh231.954 43.4151 mo(\001)sh231.954 43.4158 mo(\001)sh231.954 43.4166 mo(\001)sh231.954 43.4174 mo(\001)sh231.954 43.4182 mo(\001)sh231.954 43.419 mo(\001)sh231.954 43.4197 mo(\001)sh231.954 43.4205 mo(\001)sh231.954 43.4213 mo(\001)sh231.954 43.4221 mo(\001)sh231.954 43.4221 mo(\001)sh231.954 43.4229 mo(\001)sh231.954 43.4237 mo(\001)sh231.954 43.4237 mo(\001)sh231.954 43.4245 mo(\001)sh231.954 43.4252 mo(\001)sh231.954 43.4252 mo(\001)sh231.954 43.426 mo(\001)sh231.954 43.426 mo(\001)sh231.954 48.0092 mo(\001)sh234.956 40.1128 mo(\001)sh234.956 40.9321 mo(\001)sh234.956 41.1243 mo(\001)sh234.956 41.2123 mo(\001)sh234.956 41.2636 mo(\001)sh234.956 41.2963 mo(\001)sh234.956 41.3204 mo(\001)sh234.956 41.3375 mo(\001)sh234.956 41.3508 mo(\001)sh234.956 41.3617 mo(\001)sh234.956 41.3702 mo(\001)sh234.956 41.378 mo(\001)sh234.956 41.3842 mo(\001)sh234.956 41.3889 mo(\001)sh234.956 41.3936 mo(\001)sh234.956 41.3975 mo(\001)sh234.956 41.4014 mo(\001)sh234.956 41.4045 mo(\001)sh234.956 41.4076 mo(\001)sh234.956 41.4099 mo(\001)sh234.956 41.4122 mo(\001)sh234.956 41.4138 mo(\001)sh234.956 41.4161 mo(\001)sh234.956 41.4177 mo(\001)sh234.956 41.4193 mo(\001)sh234.956 41.4208 mo(\001)sh234.956 41.4224 mo(\001)sh234.956 41.4231 mo(\001)sh234.956 41.4247 mo(\001)sh234.956 41.4255 mo(\001)sh234.956 41.427 mo(\001)sh234.956 41.4278 mo(\001)sh234.956 41.4286 mo(\001)sh234.956 41.4294 mo(\001)sh234.956 41.4301 mo(\001)sh234.956 41.431 mo(\001)sh234.956 41.4318 mo(\001)sh234.956 41.4326 mo(\001)sh234.956 41.4333 mo(\001)sh234.956 41.4341 mo(\001)sh234.956 41.4341 mo(\001)sh234.956 41.4349 mo(\001)sh234.956 41.4357 mo(\001)sh234.956 41.4357 mo(\001)sh234.956 41.4364 mo(\001)sh234.956 41.4372 mo(\001)sh234.956 41.4372 mo(\001)sh234.956 41.438 mo(\001)sh234.956 41.438 mo(\001)sh234.956 46.1005 mo(\001)sh237.958 38.1022 mo(\001)sh237.958 38.9348 mo(\001)sh237.958 39.1309 mo(\001)sh237.958 39.2203 mo(\001)sh237.958 39.2725 mo(\001)sh237.958 39.3059 mo(\001)sh237.958 39.3301 mo(\001)sh237.958 39.3479 mo(\001)sh237.958 39.3612 mo(\001)sh237.958 39.3721 mo(\001)sh237.958 39.3814 mo(\001)sh237.958 39.3884 mo(\001)sh237.958 39.3946 mo(\001)sh237.958 39.4001 mo(\001)sh237.958 39.4048 mo(\001)sh237.958 39.4086 mo(\001)sh237.958 39.4125 mo(\001)sh237.958 39.4156 mo(\001)sh237.958 39.4188 mo(\001)sh237.958 39.4211 mo(\001)sh237.958 39.4234 mo(\001)sh237.958 39.4258 mo(\001)sh237.958 39.4273 mo(\001)sh237.958 39.4289 mo(\001)sh237.958 39.4313 mo(\001)sh237.958 39.4321 mo(\001)sh237.958 39.4336 mo(\001)sh237.958 39.4352 mo(\001)sh237.958 39.436 mo(\001)sh237.958 39.4375 mo(\001)sh237.958 39.4383 mo(\001)sh237.958 39.4391 mo(\001)sh237.958 39.4406 mo(\001)sh237.958 39.4414 mo(\001)sh237.958 39.4422 mo(\001)sh237.958 39.443 mo(\001)sh237.958 39.4437 mo(\001)sh237.958 39.4445 mo(\001)sh237.958 39.4445 mo(\001)sh237.958 39.4453 mo(\001)sh237.958 39.4461 mo(\001)sh237.958 39.4469 mo(\001)sh237.958 39.4469 mo(\001)sh237.958 39.4476 mo(\001)sh237.958 39.4484 mo(\001)sh237.958 39.4484 mo(\001)sh237.958 39.4493 mo(\001)sh237.958 39.4501 mo(\001)sh237.958 39.4501 mo(\001)sh237.958 44.1912 mo(\001)sh240.96 36.0917 mo(\001)sh240.96 36.9382 mo(\001)sh240.96 37.1375 mo(\001)sh240.96 37.2285 mo(\001)sh240.96 37.2814 mo(\001)sh240.96 37.3156 mo(\001)sh240.96 37.3398 mo(\001)sh240.96 37.3577 mo(\001)sh240.96 37.3717 mo(\001)sh240.96 37.3833 mo(\001)sh240.96 37.3919 mo(\001)sh240.96 37.3997 mo(\001)sh240.96 37.4059 mo(\001)sh240.96 37.4114 mo(\001)sh240.96 37.416 mo(\001)sh240.96 37.4199 mo(\001)sh240.96 37.4238 mo(\001)sh240.96 37.4269 mo(\001)sh240.96 37.43 mo(\001)sh240.96 37.4324 mo(\001)sh240.96 37.4347 mo(\001)sh240.96 37.437 mo(\001)sh240.96 37.4394 mo(\001)sh240.96 37.4409 mo(\001)sh240.96 37.4425 mo(\001)sh240.96 37.444 mo(\001)sh240.96 37.4456 mo(\001)sh240.96 37.4464 mo(\001)sh240.96 37.4479 mo(\001)sh240.96 37.4487 mo(\001)sh240.96 37.4503 mo(\001)sh240.96 37.451 mo(\001)sh240.96 37.4518 mo(\001)sh240.96 37.4526 mo(\001)sh240.96 37.4542 mo(\001)sh240.96 37.4549 mo(\001)sh240.96 37.4549 mo(\001)sh240.96 37.4557 mo(\001)sh240.96 37.4565 mo(\001)sh240.96 37.4573 mo(\001)sh240.96 37.4581 mo(\001)sh240.96 37.4589 mo(\001)sh240.96 37.4589 mo(\001)sh240.96 37.4597 mo(\001)sh240.96 37.4605 mo(\001)sh240.96 37.4605 mo(\001)sh240.96 37.4612 mo(\001)sh240.96 37.4612 mo(\001)sh240.96 37.462 mo(\001)sh240.96 42.2825 mo(\001)sh243.962 34.0811 mo(\001)sh243.962 34.9417 mo(\001)sh243.962 35.144 mo(\001)sh243.962 35.2366 mo(\001)sh243.962 35.2903 mo(\001)sh243.962 35.3253 mo(\001)sh243.962 35.3502 mo(\001)sh243.962 35.3681 mo(\001)sh243.962 35.3821 mo(\001)sh243.962 35.3938 mo(\001)sh243.962 35.4031 mo(\001)sh243.962 35.4101 mo(\001)sh243.962 35.4171 mo(\001)sh243.962 35.4225 mo(\001)sh243.962 35.4272 mo(\001)sh243.962 35.4311 mo(\001)sh243.962 35.435 mo(\001)sh243.962 35.4381 mo(\001)sh243.962 35.4412 mo(\001)sh243.962 35.4443 mo(\001)sh243.962 35.4467 mo(\001)sh243.962 35.4482 mo(\001)sh243.962 35.4506 mo(\001)sh243.962 35.4521 mo(\001)sh243.962 35.4537 mo(\001)sh243.962 35.4552 mo(\001)sh243.962 35.4568 mo(\001)sh243.962 35.4583 mo(\001)sh243.962 35.4599 mo(\001)sh243.962 35.4607 mo(\001)sh243.962 35.4615 mo(\001)sh243.962 35.463 mo(\001)sh243.962 35.4638 mo(\001)sh243.962 35.4646 mo(\001)sh243.962 35.4653 mo(\001)sh243.962 35.4661 mo(\001)sh243.962 35.467 mo(\001)sh243.962 35.4678 mo(\001)sh243.962 35.4685 mo(\001)sh243.962 35.4693 mo(\001)sh243.962 35.4701 mo(\001)sh243.962 35.4701 mo(\001)sh243.962 35.4709 mo(\001)sh243.962 35.4716 mo(\001)sh243.962 35.4716 mo(\001)sh243.962 35.4724 mo(\001)sh243.962 35.4732 mo(\001)sh243.962 35.4732 mo(\001)sh243.962 35.474 mo(\001)sh243.962 40.373 mo(\001)sh246.964 32.0705 mo(\001)sh246.964 32.9451 mo(\001)sh246.964 33.1505 mo(\001)sh246.964 33.2447 mo(\001)sh246.964 33.2991 mo(\001)sh246.964 33.3349 mo(\001)sh246.964 33.3598 mo(\001)sh246.964 33.3785 mo(\001)sh246.964 33.3925 mo(\001)sh246.964 33.4042 mo(\001)sh246.964 33.4135 mo(\001)sh246.964 33.4213 mo(\001)sh246.964 33.4275 mo(\001)sh246.964 33.4337 mo(\001)sh246.964 33.4384 mo(\001)sh246.964 33.4423 mo(\001)sh246.964 33.4462 mo(\001)sh246.964 33.4501 mo(\001)sh246.964 33.4524 mo(\001)sh246.964 33.4555 mo(\001)sh246.964 33.4579 mo(\001)sh246.964 33.4603 mo(\001)sh246.964 33.4618 mo(\001)sh246.964 33.4642 mo(\001)sh246.964 33.4657 mo(\001)sh246.964 33.4673 mo(\001)sh246.964 33.4688 mo(\001)sh246.964 33.4704 mo(\001)sh246.964 33.4712 mo(\001)sh246.964 33.4727 mo(\001)sh246.964 33.4735 mo(\001)sh246.964 33.4743 mo(\001)sh246.964 33.4758 mo(\001)sh246.964 33.4766 mo(\001)sh246.964 33.4774 mo(\001)sh246.964 33.4782 mo(\001)sh246.964 33.4789 mo(\001)sh246.964 33.4797 mo(\001)sh246.964 33.4805 mo(\001)sh246.964 33.4813 mo(\001)sh246.964 33.4813 mo(\001)sh246.964 33.4821 mo(\001)sh246.964 33.4828 mo(\001)sh246.964 33.4836 mo(\001)sh246.964 33.4836 mo(\001)sh246.964 33.4844 mo(\001)sh246.964 33.4853 mo(\001)sh246.964 33.4853 mo(\001)sh246.964 33.486 mo(\001)sh246.964 38.4645 mo(\001)sh249.966 30.0599 mo(\001)sh249.966 30.9486 mo(\001)sh249.966 31.1571 mo(\001)sh249.966 31.2528 mo(\001)sh249.966 31.3081 mo(\001)sh249.966 31.3439 mo(\001)sh249.966 31.3695 mo(\001)sh249.966 31.3882 mo(\001)sh249.966 31.403 mo(\001)sh249.966 31.4147 mo(\001)sh249.966 31.424 mo(\001)sh249.966 31.4326 mo(\001)sh249.966 31.4388 mo(\001)sh249.966 31.445 mo(\001)sh249.966 31.4497 mo(\001)sh249.966 31.4536 mo(\001)sh249.966 31.4575 mo(\001)sh249.966 31.4613 mo(\001)sh249.966 31.4645 mo(\001)sh249.966 31.4668 mo(\001)sh249.966 31.4691 mo(\001)sh249.966 31.4715 mo(\001)sh249.966 31.4738 mo(\001)sh249.966 31.4754 mo(\001)sh249.966 31.4769 mo(\001)sh249.966 31.4785 mo(\001)sh249.966 31.48 mo(\001)sh249.966 31.4816 mo(\001)sh249.966 31.4831 mo(\001)sh249.966 31.4839 mo(\001)sh249.966 31.4855 mo(\001)sh249.966 31.4863 mo(\001)sh249.966 31.487 mo(\001)sh249.966 31.4886 mo(\001)sh249.966 31.4894 mo(\001)sh249.966 31.4901 mo(\001)sh249.966 31.4909 mo(\001)sh249.966 31.4917 mo(\001)sh249.966 31.4925 mo(\001)sh249.966 31.4925 mo(\001)sh249.966 31.4933 mo(\001)sh249.966 31.4941 mo(\001)sh249.966 31.4949 mo(\001)sh249.966 31.4949 mo(\001)sh249.966 31.4957 mo(\001)sh249.966 31.4964 mo(\001)sh249.966 31.4964 mo(\001)sh249.966 31.4972 mo(\001)sh249.966 31.498 mo(\001)sh249.966 36.555 mo(\001)sh252.967 28.0493 mo(\001)sh252.967 28.952 mo(\001)sh252.967 29.1636 mo(\001)sh252.967 29.2609 mo(\001)sh252.967 29.3169 mo(\001)sh252.967 29.3535 mo(\001)sh252.967 29.3792 mo(\001)sh252.967 29.3986 mo(\001)sh252.967 29.4134 mo(\001)sh252.967 29.4251 mo(\001)sh252.967 29.4352 mo(\001)sh252.967 29.443 mo(\001)sh252.967 29.45 mo(\001)sh252.967 29.4554 mo(\001)sh252.967 29.4609 mo(\001)sh252.967 29.4648 mo(\001)sh252.967 29.4687 mo(\001)sh252.967 29.4725 mo(\001)sh252.967 29.4756 mo(\001)sh252.967 29.478 mo(\001)sh252.967 29.4811 mo(\001)sh252.967 29.4834 mo(\001)sh252.967 29.485 mo(\001)sh252.967 29.4873 mo(\001)sh252.967 29.4889 mo(\001)sh252.967 29.4904 mo(\001)sh252.967 29.492 mo(\001)sh252.967 29.4935 mo(\001)sh252.967 29.4943 mo(\001)sh252.967 29.4959 mo(\001)sh252.967 29.4967 mo(\001)sh252.967 29.4982 mo(\001)sh252.967 29.499 mo(\001)sh252.967 29.4998 mo(\001)sh252.967 29.5006 mo(\001)sh252.967 29.5014 mo(\001)sh252.967 29.5022 mo(\001)sh252.967 29.503 mo(\001)sh252.967 29.5037 mo(\001)sh252.967 29.5045 mo(\001)sh252.967 29.5053 mo(\001)sh252.967 29.5061 mo(\001)sh252.967 29.5069 mo(\001)sh252.967 29.5069 mo(\001)sh252.967 29.5076 mo(\001)sh252.967 29.5084 mo(\001)sh252.967 29.5084 mo(\001)sh252.967 29.5092 mo(\001)sh252.967 29.5092 mo(\001)sh252.967 34.6456 mo(\001)sh255.969 26.0387 mo(\001)sh255.969 26.9554 mo(\001)sh255.969 27.1702 mo(\001)sh255.969 27.269 mo(\001)sh255.969 27.3258 mo(\001)sh255.969 27.3631 mo(\001)sh255.969 27.3896 mo(\001)sh255.969 27.409 mo(\001)sh255.969 27.4238 mo(\001)sh255.969 27.4363 mo(\001)sh255.969 27.4456 mo(\001)sh255.969 27.4542 mo(\001)sh255.969 27.4612 mo(\001)sh255.969 27.4666 mo(\001)sh255.969 27.4721 mo(\001)sh255.969 27.4759 mo(\001)sh255.969 27.4806 mo(\001)sh255.969 27.4837 mo(\001)sh255.969 27.4868 mo(\001)sh255.969 27.49 mo(\001)sh255.969 27.4923 mo(\001)sh255.969 27.4946 mo(\001)sh255.969 27.497 mo(\001)sh255.969 27.4985 mo(\001)sh255.969 27.5001 mo(\001)sh255.969 27.5016 mo(\001)sh255.969 27.5032 mo(\001)sh255.969 27.5047 mo(\001)sh255.969 27.5063 mo(\001)sh255.969 27.5078 mo(\001)sh255.969 27.5086 mo(\001)sh255.969 27.5094 mo(\001)sh255.969 27.511 mo(\001)sh255.969 27.5117 mo(\001)sh255.969 27.5126 mo(\001)sh255.969 27.5134 mo(\001)sh255.969 27.5141 mo(\001)sh255.969 27.5149 mo(\001)sh255.969 27.5157 mo(\001)sh255.969 27.5165 mo(\001)sh255.969 27.5173 mo(\001)sh255.969 27.5181 mo(\001)sh255.969 27.5181 mo(\001)sh255.969 27.5188 mo(\001)sh255.969 27.5196 mo(\001)sh255.969 27.5204 mo(\001)sh255.969 27.5204 mo(\001)sh255.969 27.5211 mo(\001)sh255.969 27.5211 mo(\001)sh255.969 32.7369 mo(\001)sh258.971 24.0282 mo(\001)sh258.971 24.958 mo(\001)sh258.971 25.1767 mo(\001)sh258.971 25.277 mo(\001)sh258.971 25.3346 mo(\001)sh258.971 25.3728 mo(\001)sh258.971 25.3992 mo(\001)sh258.971 25.4194 mo(\001)sh258.971 25.4342 mo(\001)sh258.971 25.4467 mo(\001)sh258.971 25.4568 mo(\001)sh258.971 25.4646 mo(\001)sh258.971 25.4716 mo(\001)sh258.971 25.4778 mo(\001)sh258.971 25.4832 mo(\001)sh258.971 25.4871 mo(\001)sh258.971 25.4918 mo(\001)sh258.971 25.4949 mo(\001)sh258.971 25.498 mo(\001)sh258.971 25.5011 mo(\001)sh258.971 25.5035 mo(\001)sh258.971 25.5058 mo(\001)sh258.971 25.5082 mo(\001)sh258.971 25.5098 mo(\001)sh258.971 25.5121 mo(\001)sh258.971 25.5137 mo(\001)sh258.971 25.5152 mo(\001)sh258.971 25.5168 mo(\001)sh258.971 25.5183 mo(\001)sh258.971 25.5191 mo(\001)sh258.971 25.5207 mo(\001)sh258.971 25.5215 mo(\001)sh258.971 25.5222 mo(\001)sh258.971 25.5238 mo(\001)sh258.971 25.5246 mo(\001)sh258.971 25.5253 mo(\001)sh258.971 25.5261 mo(\001)sh258.971 25.5269 mo(\001)sh258.971 25.5277 mo(\001)sh258.971 25.5285 mo(\001)sh258.971 25.5292 mo(\001)sh258.971 25.5292 mo(\001)sh258.971 25.53 mo(\001)sh258.971 25.5308 mo(\001)sh258.971 25.5316 mo(\001)sh258.971 25.5316 mo(\001)sh258.971 25.5324 mo(\001)sh258.971 25.5332 mo(\001)sh258.971 25.5332 mo(\001)sh258.971 30.8276 mo(\001)sh261.973 22.0176 mo(\001)sh261.973 22.9615 mo(\001)sh261.973 23.1833 mo(\001)sh261.973 23.2852 mo(\001)sh261.973 23.3435 mo(\001)sh261.973 23.3825 mo(\001)sh261.973 23.4088 mo(\001)sh261.973 23.4291 mo(\001)sh261.973 23.4447 mo(\001)sh261.973 23.4572 mo(\001)sh261.973 23.4673 mo(\001)sh261.973 23.4758 mo(\001)sh261.973 23.4828 mo(\001)sh261.973 23.4891 mo(\001)sh261.973 23.4945 mo(\001)sh261.973 23.4984 mo(\001)sh261.973 23.5031 mo(\001)sh261.973 23.5062 mo(\001)sh261.973 23.5093 mo(\001)sh261.973 23.5124 mo(\001)sh261.973 23.5155 mo(\001)sh261.973 23.5179 mo(\001)sh261.973 23.5194 mo(\001)sh261.973 23.5217 mo(\001)sh261.973 23.5233 mo(\001)sh261.973 23.5249 mo(\001)sh261.973 23.5264 mo(\001)sh261.973 23.528 mo(\001)sh261.973 23.5295 mo(\001)sh261.973 23.5311 mo(\001)sh261.973 23.5319 mo(\001)sh261.973 23.5334 mo(\001)sh261.973 23.5342 mo(\001)sh261.973 23.535 mo(\001)sh261.973 23.5358 mo(\001)sh261.973 23.5373 mo(\001)sh261.973 23.5381 mo(\001)sh261.973 23.5389 mo(\001)sh261.973 23.5396 mo(\001)sh261.973 23.5404 mo(\001)sh261.973 23.5404 mo(\001)sh261.973 23.5412 mo(\001)sh261.973 23.542 mo(\001)sh261.973 23.5428 mo(\001)sh261.973 23.5435 mo(\001)sh261.973 23.5435 mo(\001)sh261.973 23.5444 mo(\001)sh261.973 23.5452 mo(\001)sh261.973 23.5452 mo(\001)sh261.973 28.9189 mo(\001)sh264.975 20.007 mo(\001)sh264.975 20.9649 mo(\001)sh264.975 21.1898 mo(\001)sh264.975 21.2933 mo(\001)sh264.975 21.3524 mo(\001)sh264.975 21.3913 mo(\001)sh264.975 21.4193 mo(\001)sh264.975 21.4396 mo(\001)sh264.975 21.4551 mo(\001)sh264.975 21.4676 mo(\001)sh264.975 21.4785 mo(\001)sh264.975 21.4863 mo(\001)sh264.975 21.494 mo(\001)sh264.975 21.5003 mo(\001)sh264.975 21.5049 mo(\001)sh264.975 21.5096 mo(\001)sh264.975 21.5143 mo(\001)sh264.975 21.5174 mo(\001)sh264.975 21.5213 mo(\001)sh264.975 21.5236 mo(\001)sh264.975 21.5267 mo(\001)sh264.975 21.5291 mo(\001)sh264.975 21.5314 mo(\001)sh264.975 21.5329 mo(\001)sh264.975 21.5353 mo(\001)sh264.975 21.5368 mo(\001)sh264.975 21.5384 mo(\001)sh264.975 21.5399 mo(\001)sh264.975 21.5415 mo(\001)sh264.975 21.5423 mo(\001)sh264.975 21.5438 mo(\001)sh264.975 21.5446 mo(\001)sh264.975 21.5462 mo(\001)sh264.975 21.5469 mo(\001)sh264.975 21.5477 mo(\001)sh264.975 21.5485 mo(\001)sh264.975 21.5493 mo(\001)sh264.975 21.55 mo(\001)sh264.975 21.5508 mo(\001)sh264.975 21.5516 mo(\001)sh264.975 21.5524 mo(\001)sh264.975 21.5533 mo(\001)sh264.975 21.554 mo(\001)sh264.975 21.5548 mo(\001)sh264.975 21.5548 mo(\001)sh264.975 21.5556 mo(\001)sh264.975 21.5564 mo(\001)sh264.975 21.5564 mo(\001)sh264.975 21.5571 mo(\001)sh264.975 27.0095 mo(\001)sh267.977 17.9964 mo(\001)sh267.977 18.9683 mo(\001)sh267.977 19.1963 mo(\001)sh267.977 19.3014 mo(\001)sh267.977 19.362 mo(\001)sh267.977 19.401 mo(\001)sh267.977 19.429 mo(\001)sh267.977 19.45 mo(\001)sh267.977 19.4655 mo(\001)sh267.977 19.4788 mo(\001)sh267.977 19.4889 mo(\001)sh267.977 19.4974 mo(\001)sh267.977 19.5044 mo(\001)sh267.977 19.5107 mo(\001)sh267.977 19.5161 mo(\001)sh267.977 19.5208 mo(\001)sh267.977 19.5255 mo(\001)sh267.977 19.5293 mo(\001)sh267.977 19.5325 mo(\001)sh267.977 19.5356 mo(\001)sh267.977 19.5379 mo(\001)sh267.977 19.5403 mo(\001)sh267.977 19.5426 mo(\001)sh267.977 19.5449 mo(\001)sh267.977 19.5465 mo(\001)sh267.977 19.548 mo(\001)sh267.977 19.5504 mo(\001)sh267.977 19.5511 mo(\001)sh267.977 19.5527 mo(\001)sh267.977 19.5542 mo(\001)sh267.977 19.5558 mo(\001)sh267.977 19.5566 mo(\001)sh267.977 19.5574 mo(\001)sh267.977 19.5589 mo(\001)sh267.977 19.5597 mo(\001)sh267.977 19.5605 mo(\001)sh267.977 19.5612 mo(\001)sh267.977 19.5621 mo(\001)sh267.977 19.5629 mo(\001)sh267.977 19.5637 mo(\001)sh267.977 19.5644 mo(\001)sh267.977 19.5652 mo(\001)sh267.977 19.566 mo(\001)sh267.977 19.566 mo(\001)sh267.977 19.5668 mo(\001)sh267.977 19.5676 mo(\001)sh267.977 19.5683 mo(\001)sh267.977 19.5683 mo(\001)sh267.977 19.5691 mo(\001)sh267.977 25.1008 mo(\001)sh270.979 15.9858 mo(\001)sh270.979 16.9717 mo(\001)sh270.979 17.2028 mo(\001)sh270.979 17.3094 mo(\001)sh270.979 17.3709 mo(\001)sh270.979 17.4106 mo(\001)sh270.979 17.4386 mo(\001)sh270.979 17.4596 mo(\001)sh270.979 17.476 mo(\001)sh270.979 17.4892 mo(\001)sh270.979 17.4993 mo(\001)sh270.979 17.5086 mo(\001)sh270.979 17.5156 mo(\001)sh270.979 17.5219 mo(\001)sh270.979 17.5273 mo(\001)sh270.979 17.532 mo(\001)sh270.979 17.5367 mo(\001)sh270.979 17.5405 mo(\001)sh270.979 17.5437 mo(\001)sh270.979 17.5468 mo(\001)sh270.979 17.5491 mo(\001)sh270.979 17.5522 mo(\001)sh270.979 17.5545 mo(\001)sh270.979 17.5561 mo(\001)sh270.979 17.5584 mo(\001)sh270.979 17.56 mo(\001)sh270.979 17.5615 mo(\001)sh270.979 17.5631 mo(\001)sh270.979 17.5647 mo(\001)sh270.979 17.5662 mo(\001)sh270.979 17.567 mo(\001)sh270.979 17.5686 mo(\001)sh270.979 17.5693 mo(\001)sh270.979 17.5701 mo(\001)sh270.979 17.5717 mo(\001)sh270.979 17.5724 mo(\001)sh270.979 17.5732 mo(\001)sh270.979 17.574 mo(\001)sh270.979 17.5748 mo(\001)sh270.979 17.5756 mo(\001)sh270.979 17.5763 mo(\001)sh270.979 17.5771 mo(\001)sh270.979 17.5779 mo(\001)sh270.979 17.5779 mo(\001)sh270.979 17.5787 mo(\001)sh270.979 17.5795 mo(\001)sh270.979 17.5795 mo(\001)sh270.979 17.5803 mo(\001)sh270.979 17.5811 mo(\001)sh270.979 23.1914 mo(\001)sh273.981 13.9753 mo(\001)sh273.981 14.9751 mo(\001)sh273.981 15.2101 mo(\001)sh273.981 15.3175 mo(\001)sh273.981 15.3798 mo(\001)sh273.981 15.4202 mo(\001)sh273.981 15.449 mo(\001)sh273.981 15.47 mo(\001)sh273.981 15.4864 mo(\001)sh273.981 15.4996 mo(\001)sh273.981 15.5105 mo(\001)sh273.981 15.519 mo(\001)sh273.981 15.5268 mo(\001)sh273.981 15.5331 mo(\001)sh273.981 15.5385 mo(\001)sh273.981 15.5432 mo(\001)sh273.981 15.5478 mo(\001)sh273.981 15.5517 mo(\001)sh273.981 15.5548 mo(\001)sh273.981 15.558 mo(\001)sh273.981 15.5611 mo(\001)sh273.981 15.5634 mo(\001)sh273.981 15.5657 mo(\001)sh273.981 15.5681 mo(\001)sh273.981 15.5696 mo(\001)sh273.981 15.5712 mo(\001)sh273.981 15.5735 mo(\001)sh273.981 15.5751 mo(\001)sh273.981 15.5759 mo(\001)sh273.981 15.5774 mo(\001)sh273.981 15.579 mo(\001)sh273.981 15.5797 mo(\001)sh273.981 15.5813 mo(\001)sh273.981 15.5821 mo(\001)sh273.981 15.5829 mo(\001)sh273.981 15.5844 mo(\001)sh273.981 15.5852 mo(\001)sh273.981 15.586 mo(\001)sh273.981 15.5867 mo(\001)sh273.981 15.5875 mo(\001)sh273.981 15.5884 mo(\001)sh273.981 15.5884 mo(\001)sh273.981 15.5892 mo(\001)sh273.981 15.5899 mo(\001)sh273.981 15.5907 mo(\001)sh273.981 15.5915 mo(\001)sh273.981 15.5915 mo(\001)sh273.981 15.5923 mo(\001)sh273.981 15.593 mo(\001)sh273.981 21.2819 mo(\001)shgrestore
gsave
276.337 13.4843 mo
280.228 13.4843 li
280.228 11.15 li
276.337 11.15 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf276.983 11.9608 mo(\001)shgrestore
gsave
276.337 14.2625 mo
280.228 14.2625 li
280.228 11.15 li
276.337 11.15 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf276.983 12.9739 mo(\001)shgrestore
gsave
276.337 15.0406 mo
280.228 15.0406 li
280.228 11.15 li
276.337 11.15 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf276.983 13.2128 mo(\001)sh276.983 13.3217 mo(\001)sh276.983 13.3847 mo(\001)sh276.983 13.426 mo(\001)sh276.983 13.4548 mo(\001)sh276.983 13.4765 mo(\001)shgrestore
gsave
18 197.5 mo
298.125 197.5 li
298.125 10.7501 li
18 10.7501 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf276.983 13.4929 mo(\001)sh276.983 13.5061 mo(\001)sh276.983 13.517 mo(\001)sh276.983 13.5263 mo(\001)sh276.983 13.5341 mo(\001)sh276.983 13.5403 mo(\001)sh276.983 13.5458 mo(\001)sh276.983 13.5505 mo(\001)sh276.983 13.5551 mo(\001)sh276.983 13.559 mo(\001)sh276.983 13.5621 mo(\001)sh276.983 13.5652 mo(\001)sh276.983 13.5684 mo(\001)sh276.983 13.5707 mo(\001)sh276.983 13.573 mo(\001)sh276.983 13.5754 mo(\001)sh276.983 13.5777 mo(\001)sh276.983 13.5793 mo(\001)sh276.983 13.5808 mo(\001)sh276.983 13.5824 mo(\001)sh276.983 13.5839 mo(\001)sh276.983 13.5855 mo(\001)sh276.983 13.5863 mo(\001)sh276.983 13.5878 mo(\001)sh276.983 13.5886 mo(\001)sh276.983 13.5901 mo(\001)sh276.983 13.5909 mo(\001)sh276.983 13.5917 mo(\001)sh276.983 13.5925 mo(\001)sh276.983 13.5933 mo(\001)sh276.983 13.594 mo(\001)sh276.983 13.5949 mo(\001)sh276.983 13.5957 mo(\001)sh276.983 13.5965 mo(\001)sh276.983 13.5972 mo(\001)sh276.983 13.598 mo(\001)sh276.983 13.5988 mo(\001)sh276.983 13.5988 mo(\001)sh276.983 13.5996 mo(\001)sh276.983 13.6003 mo(\001)sh276.983 13.6011 mo(\001)sh276.983 19.3694 mo(\001)shgrestore
gsave
279.45 12.7062 mo
283.341 12.7062 li
283.341 11.15 li
279.45 11.15 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf279.985 11.2192 mo(\001)sh279.985 11.3297 mo(\001)sh279.985 11.3935 mo(\001)sh279.985 11.4348 mo(\001)sh279.985 11.4643 mo(\001)sh279.985 11.4861 mo(\001)sh279.985 11.5032 mo(\001)sh279.985 11.5164 mo(\001)sh279.985 11.5281 mo(\001)sh279.985 11.5367 mo(\001)shgrestore
gsave
279.45 13.4843 mo
283.341 13.4843 li
283.341 11.15 li
279.45 11.15 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf279.985 11.5445 mo(\001)sh279.985 11.5515 mo(\001)sh279.985 11.5569 mo(\001)sh279.985 11.5616 mo(\001)sh279.985 11.5662 mo(\001)sh279.985 11.5701 mo(\001)sh279.985 11.574 mo(\001)sh279.985 11.5771 mo(\001)sh279.985 11.5795 mo(\001)sh279.985 11.5826 mo(\001)sh279.985 11.5849 mo(\001)sh279.985 11.5873 mo(\001)sh279.985 11.5888 mo(\001)sh279.985 11.5904 mo(\001)sh279.985 11.5927 mo(\001)sh279.985 11.5943 mo(\001)sh279.985 11.5958 mo(\001)sh279.985 11.5966 mo(\001)sh279.985 11.5981 mo(\001)sh279.985 11.5997 mo(\001)sh279.985 11.6005 mo(\001)sh279.985 11.6013 mo(\001)sh279.985 11.6028 mo(\001)sh279.985 11.6036 mo(\001)sh279.985 11.6044 mo(\001)sh279.985 11.6052 mo(\001)sh279.985 11.606 mo(\001)sh279.985 11.6068 mo(\001)sh279.985 11.6076 mo(\001)sh279.985 11.6084 mo(\001)sh279.985 11.6091 mo(\001)sh279.985 11.6099 mo(\001)sh279.985 11.6107 mo(\001)sh279.985 11.6107 mo(\001)sh279.985 11.6115 mo(\001)sh279.985 11.6122 mo(\001)sh279.985 11.6122 mo(\001)shgrestore
gsave
18 197.5 mo
298.125 197.5 li
298.125 10.7501 li
18 10.7501 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf279.985 17.4598 mo(\001)sh282.987 15.551 mo(\001)sh285.989 13.6415 mo(\001)shgrestore
gsave
288.009 13.4843 mo
292.678 13.4843 li
292.678 11.15 li
288.009 11.15 li
cp
clp
RQARSO+Mathematica3*1 [3.89062 0 0 -3.89062 0 0 ]msf288.991 11.7328 mo(\001)shgrestore
gsave
59.2406 157.437 mo
295.013 157.437 li
295.013 11.15 li
59.2406 11.15 li
cp
clp
1.88617 lw
2 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
59.2406 157.572 mo
59.313 157.525 li
59.3854 157.476 li
59.5301 157.381 li
59.8188 157.189 li
60.3977 156.806 li
63.8681 154.51 li
68.8855 151.195 li
73.5706 148.104 li
78.1631 145.076 li
87.7947 138.732 li
107.399 125.829 li
112.07 122.753 li
116.649 119.735 li
121.618 116.459 li
126.254 113.4 li
131.279 110.082 li
136.214 106.82 li
140.815 103.776 li
145.805 100.47 li
150.463 97.3818 li
155.509 94.0319 li
160.465 90.7389 li
165.087 87.6646 li
170.099 84.3287 li
174.779 81.2116 li
179.367 78.1543 li
194.022 68.3842 li
198.964 65.0912 li
203.573 62.0222 li
208.572 58.6981 li
213.238 55.6004 li
217.812 52.5696 li
222.776 49.2906 li
227.407 46.2411 li
232.427 42.9488 li
237.115 39.8893 li
241.711 36.9059 li
246.696 33.6899 li
251.349 30.7104 li
256.391 27.5093 li
261.341 24.3976 li
265.959 21.5247 li
270.965 18.4464 li
275.64 15.611 li
280.223 12.8689 li
281.94 11.8572 li
0 .990631 1 .000396735 cmyk
@
grestore
gsave
18 197.122 mo
298.125 197.122 li
298.125 11.15 li
18 11.15 li
cp
clp
1.41463 lw
2 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
295.012 157.572 mo
59.2406 157.572 li
59.2406 157.572 mo
59.2406 11.8572 li
59.2406 11.8572 mo
295.012 11.8572 li
295.012 11.8572 mo
295.012 157.572 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
18 197.5 mo
298.125 197.5 li
298.125 10.7501 li
18 10.7501 li
cp
clp
1.41463 lw
0 lc
0 lj
3.25 ml
[] 0 dsh
true sadj
59.2406 157.572 mo
59.2406 154.782 li
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /WBIBAA+Times-Roman def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSP+Times-Roman /WBIBAA+Times-Roman findfont ct_VMDictPut/RQARSP+Times-Roman*1 [48{/.notdef}rp /zero 207{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf56.1281 169.244 mo(0)sh118.184 157.572 mo
118.184 154.782 li
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSP+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSP+Times-Roman /Encoding getdup 46 /period putdup 50 /two putdup 53 /five putpop%ADOEndSubsetFont
/RQARSP+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 2{/.notdef}rp /five 202{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf107.29 169.244 mo(0.25)sh177.127 157.572 mo
177.127 154.782 li
@
RQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf169.345 169.244 mo(0.5)sh236.07 157.572 mo
236.07 154.782 li
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSP+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7A73D94A9F40BC631635D93782351ED8A5F0B041154B50ADFD67B52AFA0970AEE10CFF4587FA64B7C1AB4D8B074E00A1BB2BDDE2ECD9CC66A> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSP+Times-Roman /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/RQARSP+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 2{/.notdef}rp /five /.notdef /seven 200{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf225.176 169.244 mo(0.75)sh295.012 157.572 mo
295.012 154.782 li
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSP+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSP+Times-Roman /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/RQARSP+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five /.notdef /seven 200{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf291.9 169.244 mo(1)sh59.2406 157.572 mo
62.031 157.572 li
@
RQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf47.5687 160.685 mo(0.)[6.225 0 ]xsh59.2406 136.756 mo
62.031 136.756 li
@
RQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf41.3437 139.868 mo(0.1)sh59.2406 115.939 mo
62.031 115.939 li
@
RQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf41.3437 119.052 mo(0.2)sh59.2406 95.1229 mo
62.031 95.1229 li
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSP+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSP+Times-Roman /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/RQARSP+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /.notdef /five /.notdef /seven 200{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf41.3437 98.2354 mo(0.3)sh59.2406 74.3065 mo
62.031 74.3065 li
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSP+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSP+Times-Roman /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/RQARSP+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /.notdef /seven 200{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf41.3437 77.419 mo(0.4)sh59.2406 53.49 mo
62.031 53.49 li
@
RQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf41.3437 56.6026 mo(0.5)sh59.2406 32.6737 mo
62.031 32.6737 li
@
%ADOBeginSubsetFont: WBIBAA+Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSP+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSP+Times-Roman /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/RQARSP+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven 200{/.notdef}rp]RQARSP+Times-Roman nfRQARSP+Times-Roman*1 [12.45 0 0 -12.45 0 0 ]msf41.3437 35.7862 mo(0.6)sh%ADOBeginSubsetFont: UPXQMX+Times-Italic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /UPXQMX+Times-Italic def/FontInfo 6 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 86 /V putdef/FontBBox {-296 -413 1661 1205} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31EFC3300D63209ED6> |-/V <1C60D8A8C9B7D8BE3608624D2E2C88F5CF4A70D70F922254294D4246E4992890E83912C9D277D839E8549B7E23CB1C1DB720D7BF2ED2D492CC859DBA8E17665B85A68E7999B2A89726750B2B5414E8362200332AF4E80BD3F832BC7BBE3202B23A5B0AFC0583925A8233FF3358669834B822CFD7B900D78F2BFCBB39D4AD42C8121D36> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSQ+Times-Italic /UPXQMX+Times-Italic findfont ct_VMDictPut/RQARSQ+Times-Italic*1 [86{/.notdef}rp /V 169{/.notdef}rp]RQARSQ+Times-Italic nfRQARSQ+Times-Italic*1 [18.675 0 0 -18.675 0 0 ]msf166.045 192.83 mo(V)sh172.597 178.582 mo
166.761 178.582 li
166.761 179.311 li
179.989 179.311 li
179.989 178.582 li
174.153 178.582 li
ef
%ADOBeginSubsetFont: SKWAAA+Mathematica1 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /SKWAAA+Mathematica1 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 1 /Nu putdup 2 /Omega putdef/UniqueID 5095641 def/FontBBox {-120 -220 1544 923} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-16 -0 444 468 662 677] def/OtherBlues [-209 -203] def/BlueScale 0.0416717 def/StdHW [105.845] def/StdVW [74.4189] def/StemSnapH [65.5429 105.845] def/StemSnapV [58.4069 74.4189] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/Nu <1C60D8A8C9B74F36160043BEECF3E5C758D2EB92BB98F2DD9E5E4E0C64312697868A81EFF17CA27779B07D119653AAB4FB5FCDACB27D7A6D0A0C677900F63C1C06D8A7F522CDE1DF369F1BEA9C4651B8F3FA7AF9408821317A3ED4B87474DC2D8AFDD73D546F0920BFFC62A21A50FA2FC1E8621C> |-/Omega <1C60D8A8C9B6269C545E80EBD2C5AF738CF9980B8999FEEF1136515CC36CE92F099B7CB37D440E68058AC72D651E96090932C94688C77020047990EDFD8A8487DBF248A19E7A587CB1915E4F80777FB1B5B6589590F4907D0324D921DD008CB510361571F752E52BDAF1E8411823CD7BB55F03A7B6913B5C3227CCFFA08BC6EF7C834C59D611AA9F45BD08998BD205D977FDB72D1582EB5E4A8827B59E5AA41E192D5DB17C1814F060> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSR+Mathematica1 /SKWAAA+Mathematica1 findfont ct_VMDictPut/RQARSR+Mathematica1*1 [/.notdef /Nu /Omega 253{/.notdef}rp]RQARSR+Mathematica1 nfRQARSR+Mathematica1*1 [18.675 0 0 -18.675 0 0 ]msf179.6 192.83 mo(\001)shRQARSR+Mathematica1*1 [0 -18.675 -18.675 0 0 0 ]msf32.0062 103.723 mo(\002)sh%ADOBeginSubsetFont: IKRBAA+Mathematica2 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /IKRBAA+Mathematica2 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 1 /Slash1 putdef/UniqueID 5095653 def/FontBBox {-13 -4075 2499 2436} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-587 -586 888 893] def/BlueScale 0.199996 def/StdHW [0] def/StdVW [0] def/StemSnapH [0] def/StemSnapV [0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/Slash1 <1C60D8A8C9B82F05F6484DDAF768983B429CE2BE2E9BAF7B> |-/.notdef <1C60D8A8C9B5EE31F4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSS+Mathematica2 /IKRBAA+Mathematica2 findfont ct_VMDictPut/RQARSS+Mathematica2*1 [/.notdef /Slash1 254{/.notdef}rp]RQARSS+Mathematica2 nfRQARSS+Mathematica2*1 [0 -18.675 -18.675 0 0 0 ]msf32.0062 90.8201 mo(\001)shRQARSR+Mathematica1*1 [0 -18.675 -18.675 0 0 0 ]msf32.0062 84.8852 mo(\002)sh%ADOBeginSubsetFont: UPXQMX+Times-Italic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginRQARSQ+Times-Italic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B77FE2CED306AAE853DF6763ABBC1F195078D45F35AC812BA176B02CD229DD186FFB355299AFEDCDA3C3E7A2BBB8C0138FFC2F675F24D8A1A2064E210ACB5567CC4FF99B2DB190FFC6CD745653327D6267B9720C3E2FAD72FF086DC8533109E5D3541C360CBF9F8DE6E15D008E77916480B96C5C762C587981712A1AA76B3128B5597081D3A484E43F2332F97E00EB8CA70E92480D1BBD05BF5279454393B0CF9B35A14103B3932D2CBA> |-systemdict /gcheck known {setglobal} if end {end} ifendRQARSQ+Times-Italic /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/RQARSQ+Times-Italic*1 [86{/.notdef}rp /V 12{/.notdef}rp /c 156{/.notdef}rp]RQARSQ+Times-Italic nfRQARSQ+Times-Italic*1 [0 -13.2593 -13.2592 0 0 0 ]msf34.9242 71.9814 mo(c)shgrestore
gsave
232.375 135.5 mo
289.75 135.5 li
289.75 119.625 li
232.375 119.625 li
cp
clp
0 0 0 1 cmyk
%ADOBeginSubsetFont: IEJBAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /IEJBAA+CMMI10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI10.) def/Weight (Medium) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 78 /N putdef/UniqueID 5087385 def/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/N <1C60D8A8C9B6D671D38ABEF2C3AA4E9EF85233BCD577CC743D9BB72B06D1C34EFFA73A8EEC485E47CB4255799230CE3B52ECA9DACF132C28D5023DE40AA93657FA765A68F9927890D6A99C6ADF1E426E5FE9E35D2F713DB32E49B7FA52859C2DFDFC8F7B5800FF94410ECD75C51D563B72E4CE7BF6A0DA5B3E0B6FCD8798546F59FCAF14A879752BEB0E6C22EAB4A84FE3B041C4B97C68333C4FFAD5D2E857731FA926D2CD6D6B1870856FC4382AD902F4984DB02DEAEC75932D49CD323CFF2FF5AF76629AD4B11E478073E034E2B4E9B43505D56042DA33A6E78FEA4BCD4A0F11525678055021280A500CE9ADDA6E49D3632C3DA6662AF4C4449F02> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARST+CMMI10 /IEJBAA+CMMI10 findfont ct_VMDictPut/RQARST+CMMI10*1 [78{/.notdef}rp /N 177{/.notdef}rp]RQARST+CMMI10 nfRQARST+CMMI10*1 [18.373 0 0 -18.3665 0 0 ]msf232.173 132.247 mo(N)sh%ADOBeginSubsetFont: YBYPMX+CMMI7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /YBYPMX+CMMI7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def/Weight (Medium) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 116 /t putdef/UniqueID 5087382 def/FontBBox {-1 -250 1171 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0 431 441 451 463 683 703] def/OtherBlues [-204 -194] def/BlueScale 0.0437899 def/StdHW [32] def/StdVW [81] def/StemSnapH [32 36] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/t <1C60D8A8C9B76C9024B562E6ACACC3BBFBFEA0392D5F04472FA97061AAE4DC52A3F98A11D8D54F25E4E1258444AF5132275DA6C5E3D0885B5B2A4654CEE34242292B9FEE69B16E5DD8A918634DD3321B8DE0F4A8FC34CE141D352DCEC7C4316AD4FCDE9B4AA88B17F80EB64AF3D0551FB1E213394E362152BE7414F5D1A1399F0E6D948396CBDF7FCCB9AE5C344B> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSU+CMMI7 /YBYPMX+CMMI7 findfont ct_VMDictPut/RQARSU+CMMI7*1 [116{/.notdef}rp /t 139{/.notdef}rp]RQARSU+CMMI7 nfRQARSU+CMMI7*1 [12.861 0 0 -12.8565 0 0 ]msf246.936 135.003 mo(t)sh%ADOBeginSubsetFont: XDKQMX+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /XDKQMX+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 53 /five putdup 61 /equal putdef/UniqueID 5000793 def/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C12484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-/five <1C60D8A8C9B7A73D3B2B97F19D54A2E00E7DDA8E72064220CB7581D13CEDF071F346430E40993A6297E3A2A6D6093205222D977AC7F7B65CC82B221D9B18ADEA5D4AF0261ABF060D3E283C7B3B5EB39FF499721FD51203AE59E3BEA257DFD3E472FEF67221488EC8D1F355E2FAD057CA44A8B4BAD6C6C719C164907CBF9A6CC770DB0C7E58A37D2385E23F576BCFF94FFBFD8ADD4C5E6C32CD83ACEB77472D00FE1A4DC66393A99AC6BBD252B04C98B710149EA42B66ACE89D4FC4393F3A09165DF477ABCB0E8A8DB21E4278CA219EBCC9B067F95E336B85E37D444AD601D63D5ECEDC6A300696D98ABBC6ACC6E54D428BA49C3B1F> |-/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E5993F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5497F9A03CF7F30718A4F8E51FE4C555962B834> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSV+CMR10 /XDKQMX+CMR10 findfont ct_VMDictPut/RQARSV+CMR10*1 [48{/.notdef}rp /zero 4{/.notdef}rp /five 7{/.notdef}rp /equal 194{/.notdef}rp]RQARSV+CMR10 nfRQARSV+CMR10*1 [18.373 0 0 -18.3665 0 0 ]msf255.445 132.247 mo(=50)[16.3297 9.18658 0 ]xshgrestore
gsave
232.375 325.375 mo
289.75 325.375 li
289.75 309.5 li
232.375 309.5 li
cp
clp
0 0 0 1 cmyk
RQARST+CMMI10*1 [18.373 0 0 -18.3666 0 0 ]msf232.173 322.122 mo(N)shRQARSU+CMMI7*1 [12.861 0 0 -12.8566 0 0 ]msf246.936 324.878 mo(t)shRQARSV+CMR10*1 [18.373 0 0 -18.3666 0 0 ]msf255.445 322.122 mo(=50)[16.3297 9.18658 0 ]xshgrestore
gsave
5.25 36 mo
35 36 li
35 9.75006 li
5.25 9.75006 li
cp
clp
0 0 0 1 cmyk
%ADOBeginSubsetFont: YYQAAA+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /YYQAAA+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdef/UniqueID 5000793 def/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF39716A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB99C4AAA689F9E967FCE15709E3204C4D> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSW+CMR10 /YYQAAA+CMR10 findfont ct_VMDictPut/RQARSW+CMR10*1 [40{/.notdef}rp /parenleft /parenright 214{/.notdef}rp]RQARSW+CMR10 nfRQARSW+CMR10*1 [25.4046 0 0 -25.445 0 0 ]msf2.99823 29.3651 mo(\()sh%ADOBeginSubsetFont: IVQAAA+CMBX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /IVQAAA+CMBX10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMBX10.) def/Weight (Bold) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /a putdef/UniqueID 5000768 def/FontBBox {-56 -250 1164 750} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 0 444 453 655 676 686 697] def/OtherBlues [-201 -194] def/BlueScale 0.0437899 def/StdHW [47] def/StdVW [114] def/StemSnapH [40 47] def/StemSnapV [114 142] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/a <1C60D8A8C9B7ECD93D27CE21AEBDD246A2EDAD1DDC54B7649B57A058C4CEA277FC7C7DD1C54BF98C83F3437D2585B3176D3588C21C426C9FC5084597B0EE27FF6384D04BF5179105567277093FE3A7D89B6E20CA29F205D88EE708F35BA52A592F3114C76F2AEBE12F78DFF3CF334BF6BF3784A24BCC510B9D034022939656D3F0E72A04719CE534F9C6F812FB41760C92C0DEE132926EAAEEF4B214975AB0F111454B7F8C48E52804CD3043606B4744A9B7A5C05D68166578280569DD9419F371D26399> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSX+CMBX10 /IVQAAA+CMBX10 findfont ct_VMDictPut/RQARSX+CMBX10*1 [97{/.notdef}rp /a 158{/.notdef}rp]RQARSX+CMBX10 nfRQARSX+CMBX10*1 [25.4046 0 0 -25.445 0 0 ]msf12.8769 29.3651 mo(a)shRQARSW+CMR10*1 [25.4046 0 0 -25.445 0 0 ]msf27.0804 29.3651 mo(\))shgrestore
gsave
3.87504 227.75 mo
35.75 227.75 li
35.75 201.625 li
3.87504 201.625 li
cp
clp
0 0 0 1 cmyk
%ADOBeginSubsetFont: RXDRMX+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /RXDRMX+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdef/UniqueID 5000793 def/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF39716A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB99C4AAA689F9E967FCE15709E3204C4D> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSY+CMR10 /RXDRMX+CMR10 findfont ct_VMDictPut/RQARSY+CMR10*1 [40{/.notdef}rp /parenleft /parenright 214{/.notdef}rp]RQARSY+CMR10 nfRQARSY+CMR10*1 [25.4046 0 0 -25.3238 0 0 ]msf2.02509 221.146 mo(\()sh%ADOBeginSubsetFont: ZSAAAA+CMBX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /ZSAAAA+CMBX10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMBX10.) def/Weight (Bold) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 98 /b putdef/UniqueID 5000768 def/FontBBox {-56 -250 1164 750} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 0 444 453 655 676 686 697] def/OtherBlues [-201 -194] def/BlueScale 0.0437899 def/StdHW [47] def/StdVW [114] def/StemSnapH [40 47] def/StemSnapV [114 142] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/b <1C60D8A8C9B673A51B05B6E56F745CE7C024405D3C43D80F6BB15FB57ADE959D972A08B8926CB8BC50944564F7F339BA7DD1F7649710A3599EAC97E92D0ADEEEFC88F6CB3EBE8A833802DF4C7C2CF6EE987CCD68380FDAD347796FC4643A49B8127D188D6DA631C5F9201516A7F4D1481FCFA3F47AD5A2D4FA1715724AB5B10BC0164AE41129C80A4C200CAEB26DBE63C0A9C58078CC92E895704723B3D69FA62B53DCE9E868B6E97305CFDF> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARSZ+CMBX10 /ZSAAAA+CMBX10 findfont ct_VMDictPut/RQARSZ+CMBX10*1 [98{/.notdef}rp /b 157{/.notdef}rp]RQARSZ+CMBX10 nfRQARSZ+CMBX10*1 [25.4046 0 0 -25.3238 0 0 ]msf11.9039 221.146 mo(b)shRQARSY+CMR10*1 [25.4046 0 0 -25.3238 0 0 ]msf28.1345 221.146 mo(\))shgrestore
2.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
93.125 300 mo
93.125 345 li
0 0 0 1 cmyk
@
93.125 340 mo
99.375 335 li
93.125 347.5 li
86.875 335 li
cp
ef
gsave
73.375 293.755 mo
117 293.755 li
117 276.875 li
73.375 276.875 li
cp
clp
%ADOBeginSubsetFont: JYVPMX+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /JYVPMX+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdup 82 /R putdup 83 /S putdef/UniqueID 5000793 def/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/B <1C60D8A8C9B639EEFA174065F5FD105B20378341DBFF30A51DB6C77A6359CBEBE0D9BD9CE0C921830FF71EC4B25B9235E9D3AAEB5B916021C1CB889F478780AE7F39AB91F4903136ABD731C2BDC3E9F07CF08A676ED331FE94C86C156B356813D1A91311438A08E045EAC2BF4B9DC48471DC47CD438BBE76EA13188402B27FA510ABF73A9F751EEA658B97A1001412BE338EF70562CB452C9B75DDA091DA96B4F34A9087> |-/R <1C60D8A8C9B615D12DC96511BCDF86E8A7C75693A48984A0E7356B506A1E15B47A94A73C653189B6B5BD65FB5FD80494A93ED537A0F09ED1A8D7E99F236C312E766AB94701E7DF4C5D2A60F4FD92EAE94A3954DDA379326F222414F1DE7C4AACE6D4DED1720B0E27193BD7C5EA0E3BA2CC71AE1473C45D199A12EC2BADFA899FEA715987353E3C7215E3A7FAC395D71EA8789DE2ED7766F94B55DE6CADF8918D147A0B2E013795A64EAA525827FF34103C3300ACB3AA71F9D25FB8DACE8C183EB9D5D1CB14AE41492D4FA0E06AFE19D1D845A5D9B7C1D57AA6016B555070D6E922D376B26646FEF8B92A7CC134A4CEA68E0101BD25C8C1C5F54B53F4976893EC3DED988EEFD4> |-/S <1C60D8A8C9B790A8C3E1550ACC8DA9C9FBD3A5CF2194CD2B8642D81A716BD00E790683F96881FACDE1F9315D62E9690B60701D527468B87CDFB0F4764C5597556AE6A1AC77EAC949F9287197658BC350D110E467DE690E505B49A0B78B79E2357C1B06B49C46DBCFC093C8FD052BE36FB8FD34081A4086AA2F339D541A84930A281511E0A17B9869F6AA55371F1C0D54B13DC306CE1AA830A9CC533AF6BD85406DAA830F9B2385417AD4B282844721D0D07F3AC31F2E4FAB062DE1D98E9BB1ADDC8425AA1837400BB1FE64042CEA44886B96F0827BA19AA957D2008F38EA9B013399E5BDAC4F2A> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTA+CMR10 /JYVPMX+CMR10 findfont ct_VMDictPut/RQARTA+CMR10*1 [66{/.notdef}rp /B 15{/.notdef}rp /R /S 172{/.notdef}rp]RQARTA+CMR10 nfRQARTA+CMR10*1 [22.037 0 0 -22.0956 0 0 ]msf72.962 293.045 mo(BSR)[15.6086 12.237 0 ]xshgrestore
2.25 lw
68.625 272.25 mo
119.625 272.25 li
119.625 298.125 li
68.625 298.125 li
cp
@
gsave
73.9463 43.2322 mo
145.994 43.2322 li
145.994 24.4724 li
73.9463 24.4724 li
cp
clp
%ADOBeginSubsetFont: IKVAAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /IKVAAA+CMMI10 def/FontInfo 6 dict dup begin/Weight (SnapShot) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 69 /E putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.0437929 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/StemSnapV [72] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/E <1C60D8A8C9B6177404106CAF965141780A3169E0E51FB498B39631979289FE59D7C56480822ECDA6B9254C24924A8B73A24155F39A737A9244DC782D8C6A6A3BD0A905E5D1F011649259A74E1CAD29A1D8E72F81F09B4C7EECA4FFCFAEB3B1E6346CD6A3D954E38DE31F2A1F351DE9C3279D3BD0707BFECC7B59C010693956FA43F9D76D2D5AE29B7B4A7BC612A50EB461CD1514B7B648A599EA86165FA5A4E003B2D394C7C044D03DD15C624FCCA439C3E5318F9E4A407BDFE3B43DC9F7E49965BBD7AE8C3EB73C6B79F04E8C58C59F20EF8F521424F93F0641BD42D5E61E58F889154054E7C906D96931054DD69096ED84D5E307FCA9D9C16C1D12FD79> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTB+CMMI10 /IKVAAA+CMMI10 findfont ct_VMDictPut/RQARTB+CMMI10*1 [69{/.notdef}rp /E 186{/.notdef}rp]RQARTB+CMMI10 nfRQARTB+CMMI10*1 [21.7042 0 0 -21.7041 0 0 ]msf73.1376 39.3883 mo(E)sh%ADOBeginSubsetFont: GGQPMX+CMMI7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /GGQPMX+CMMI7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def/Weight (Medium) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 90 /Z putdup 99 /c putdef/UniqueID 5087382 def/FontBBox {-1 -250 1171 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0 431 441 451 463 683 703] def/OtherBlues [-204 -194] def/BlueScale 0.0437899 def/StdHW [32] def/StdVW [81] def/StemSnapH [32 36] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/Z <1C60D8A8C9B6FF86896B7328288CDE91291009136DE2797A54CC6CD7C8C592B625D81665476F5AE4FBA2ADD40B65182181142DE0B2FF353582277FB273288944873BB5B2BA1620C6F4F13E3C21F36874AD2EB970ABB54635802E69D40E131F8E886F40FAB7BF5E47BBEFE90C4F7B5DA3C6D4D2CD0279281512C1D9AAF46AF5778DE96162B409D02743D372A2159A94DD1F> |-/c <1C60D8A8C9B7BDE3EC3ABB5B9E4D77D5F4B7CF1A9A1589B92953F9542F6EA00667346ED0079A977D3E8084C8E03FCE1586ECB7D09BC0B53B8E4D0440EBD003F28C32C50BBFE460E69C243E05D30C001A3416E896635514B4ED69008FA242430B0A7C0680C332412646B1EA5BC4F5CAE570E1D93C518FF1CD01E6CF> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTC+CMMI7 /GGQPMX+CMMI7 findfont ct_VMDictPut/RQARTC+CMMI7*1 [90{/.notdef}rp /Z 8{/.notdef}rp /c 156{/.notdef}rp]RQARTC+CMMI7 nfRQARTC+CMMI7*1 [15.1929 0 0 -15.1929 0 0 ]msf89.1588 42.6453 mo(Z)sh%ADOBeginSubsetFont: IZUPMX+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /IZUPMX+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 61 /equal putdef/UniqueID 5000793 def/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E5993F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5497F9A03CF7F30718A4F8E51FE4C555962B834> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTD+CMR10 /IZUPMX+CMR10 findfont ct_VMDictPut/RQARTD+CMR10*1 [61{/.notdef}rp /equal 194{/.notdef}rp]RQARTD+CMR10 nfRQARTD+CMR10*1 [21.7042 0 0 -21.7041 0 0 ]msf105.546 39.3883 mo(=)sh%ADOBeginSubsetFont: BUDBAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BUDBAA+CMMI10 def/FontInfo 6 dict dup begin/Weight (SnapShot) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 127 /omega putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.0437929 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/StemSnapV [72] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/omega <1C60D8A8C9B663CCDCD38BB615B5A9927D0AC8F3BEF99308F53E6E11EF6FDEC2A41598615AD97858C1C11CB2852335C8D037EC343F7FB2C8BB19CE76FD6F3CFC450758B31E07C66BA64F6059F9713685D367F90360A0A6D6D36DC65850B1914FCA760767E999EE65C6CD28F426EBA0E29CA50A7962F3BDF64398160F81EDCC71E779153676C2979CD0C26D1D704FD8A8A9077DF794C92C4969318F1308BFC9C44847FB6EBD1C8DAB4B80C252D428DD48E8F0> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTE+CMMI10 /BUDBAA+CMMI10 findfont ct_VMDictPut/RQARTE+CMMI10*1 [127{/.notdef}rp /omega 128{/.notdef}rp]RQARTE+CMMI10 nfRQARTE+CMMI10*1 [21.7042 0 0 -21.7041 0 0 ]msf124.839 39.3883 mo(\177)shRQARTC+CMMI7*1 [15.1929 0 0 -15.1929 0 0 ]msf138.349 42.6453 mo(c)shgrestore
gsave
73.375 236.019 mo
173.225 236.019 li
173.225 217.259 li
73.375 217.259 li
cp
clp
%ADOBeginSubsetFont: XSRAAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /XSRAAA+CMMI10 def/FontInfo 6 dict dup begin/Weight (SnapShot) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 69 /E putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.0437929 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/StemSnapV [72] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D239BCB61DC78D83A8F223F832> |-/E <1C60D8A8C9B6177404106CAF965141780A3169E0E51FB498B39631979289FE59D7C56480822ECDA6B9254C24924A8B73A24155F39A737A9244DC782D8C6A6A3BD0A905E5D1F011649259A74E1CAD29A1D8E72F81F09B4C7EECA4FFCFAEB3B1E6346CD6A3D954E38DE31F2A1F351DE9C3279D3BD0707BFECC7B59C010693956FA43F9D76D2D5AE29B7B4A7BC612A50EB461CD1514B7B648A599EA86165FA5A4E003B2D394C7C044D03DD15C624FCCA439C3E5318F9E4A407BDFE3B43DC9F7E49965BBD7AE8C3EB73C6B79F04E8C58C59F20EF8F521424F93F0641BD42D5E61E58F889154054E7C906D96931054DD69096ED84D5E307FCA9D9C16C1D12FD79> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTF+CMMI10 /XSRAAA+CMMI10 findfont ct_VMDictPut/RQARTF+CMMI10*1 [46{/.notdef}rp /period 22{/.notdef}rp /E 186{/.notdef}rp]RQARTF+CMMI10 nfRQARTF+CMMI10*1 [21.7041 0 0 -21.7041 0 0 ]msf72.7062 232.175 mo(E)sh%ADOBeginSubsetFont: EDNAAA+CMMI7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /EDNAAA+CMMI7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def/Weight (Medium) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 90 /Z putdup 99 /c putdef/UniqueID 5087382 def/FontBBox {-1 -250 1171 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0 431 441 451 463 683 703] def/OtherBlues [-204 -194] def/BlueScale 0.0437899 def/StdHW [32] def/StdVW [81] def/StemSnapH [32 36] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/Z <1C60D8A8C9B6FF86896B7328288CDE91291009136DE2797A54CC6CD7C8C592B625D81665476F5AE4FBA2ADD40B65182181142DE0B2FF353582277FB273288944873BB5B2BA1620C6F4F13E3C21F36874AD2EB970ABB54635802E69D40E131F8E886F40FAB7BF5E47BBEFE90C4F7B5DA3C6D4D2CD0279281512C1D9AAF46AF5778DE96162B409D02743D372A2159A94DD1F> |-/c <1C60D8A8C9B7BDE3EC3ABB5B9E4D77D5F4B7CF1A9A1589B92953F9542F6EA00667346ED0079A977D3E8084C8E03FCE1586ECB7D09BC0B53B8E4D0440EBD003F28C32C50BBFE460E69C243E05D30C001A3416E896635514B4ED69008FA242430B0A7C0680C332412646B1EA5BC4F5CAE570E1D93C518FF1CD01E6CF> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTG+CMMI7 /EDNAAA+CMMI7 findfont ct_VMDictPut/RQARTG+CMMI7*1 [90{/.notdef}rp /Z 8{/.notdef}rp /c 156{/.notdef}rp]RQARTG+CMMI7 nfRQARTG+CMMI7*1 [15.1928 0 0 -15.1929 0 0 ]msf88.7273 235.432 mo(Z)sh%ADOBeginSubsetFont: GWZQMX+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.13 dict dup begin/FontType 1 def/FontName /GWZQMX+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 57 /nine putdup 61 /equal putdef/UniqueID 5000793 def/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C12484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-/nine <1C60D8A8C9B7A73D3B2B97B3700AD7AED0795D43DB5ABA64A35CE8EC855A5CBF20AE28D441242F899F7C2493AF719033D6B385FC121C95EE56A8AC87E982F921115084DE39E9BA3D7A44F69554488D091CCA5CE48FA54B9DEDF323B6058F2C417BA9D8B1544EFE093FFB579140C54032384DB55AB4741347233EB3F0889C3AE9CB13C1ACCD104A4ADC6B007505E3B778FEDE19DEF83A3068F5B724ADA3C344D842CC2CBF224CC820F9BF9DFC7E3B557C2AF89D9733BA75FFB6FA3D5E09792EE955B766D3FBD4F37E75E41F5A464FD3C1DC7611C4A6> |-/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E5993F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5497F9A03CF7F30718A4F8E51FE4C555962B834> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTH+CMR10 /GWZQMX+CMR10 findfont ct_VMDictPut/RQARTH+CMR10*1 [48{/.notdef}rp /zero 8{/.notdef}rp /nine 3{/.notdef}rp /equal 194{/.notdef}rp]RQARTH+CMR10 nfRQARTH+CMR10*1 [21.7041 0 0 -21.7041 0 0 ]msf105.114 232.175 mo(=0)[19.2904 0 ]xshRQARTF+CMMI10*1 [21.7041 0 0 -21.7041 0 0 ]msf135.259 232.175 mo(.)shRQARTH+CMR10*1 [21.7041 0 0 -21.7041 0 0 ]msf141.289 232.175 mo(9)sh%ADOBeginSubsetFont: BVIAAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BVIAAA+CMMI10 def/FontInfo 6 dict dup begin/Weight (SnapShot) def/ItalicAngle -14.0401 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 127 /omega putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.0437929 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/StemSnapV [72] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/omega <1C60D8A8C9B663CCDCD38BB615B5A9927D0AC8F3BEF99308F53E6E11EF6FDEC2A41598615AD97858C1C11CB2852335C8D037EC343F7FB2C8BB19CE76FD6F3CFC450758B31E07C66BA64F6059F9713685D367F90360A0A6D6D36DC65850B1914FCA760767E999EE65C6CD28F426EBA0E29CA50A7962F3BDF64398160F81EDCC71E779153676C2979CD0C26D1D704FD8A8A9077DF794C92C4969318F1308BFC9C44847FB6EBD1C8DAB4B80C252D428DD48E8F0> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RQARTI+CMMI10 /BVIAAA+CMMI10 findfont ct_VMDictPut/RQARTI+CMMI10*1 [127{/.notdef}rp /omega 128{/.notdef}rp]RQARTI+CMMI10 nfRQARTI+CMMI10*1 [21.7041 0 0 -21.7041 0 0 ]msf152.141 232.175 mo(\177)shRQARTG+CMMI7*1 [15.1928 0 0 -15.1929 0 0 ]msf165.65 235.432 mo(c)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/RQARTD+CMR10*1 uf/RQARTD+CMR10 uf/IZUPMX+CMR10 uf/RQARTC+CMMI7*1 uf/RQARTC+CMMI7 uf/GGQPMX+CMMI7 uf/RQARTB+CMMI10*1 uf/RQARTB+CMMI10 uf/IKVAAA+CMMI10 uf/RQARTA+CMR10*1 uf/RQARTA+CMR10 uf/JYVPMX+CMR10 uf/RQARSZ+CMBX10*1 uf/RQARSZ+CMBX10 uf/ZSAAAA+CMBX10 uf/RQARSR+Mathematica1*1 uf/RQARSR+Mathematica1 uf/SKWAAA+Mathematica1 uf/RQARSQ+Times-Italic*1 uf/RQARSQ+Times-Italic uf/UPXQMX+Times-Italic uf/RQARSP+Times-Roman*1 uf/RQARSP+Times-Roman uf/WBIBAA+Times-Roman uf/RQARSM+Mathematica1*1 uf/RQARSM+Mathematica1 uf/LJPQMX+Mathematica1 uf/RQARSL+Times-Italic*1 uf/RQARSL+Times-Italic uf/IVOBAA+Times-Italic uf/RQARSJ+Mathematica3*1 uf/RQARSJ+Mathematica3 uf/JZRBAA+Mathematica3 uf/RQARTI+CMMI10*1 uf/RQARTI+CMMI10 uf/BVIAAA+CMMI10 uf/RQARSY+CMR10*1 uf/RQARSY+CMR10 uf/RXDRMX+CMR10 uf/RQARSX+CMBX10*1 uf/RQARSX+CMBX10 uf/IVQAAA+CMBX10 uf/RQARSW+CMR10*1 uf/RQARSW+CMR10 uf/YYQAAA+CMR10 uf/RQARSV+CMR10*1 uf/RQARSV+CMR10 uf/XDKQMX+CMR10 uf/RQARSU+CMMI7*1 uf/RQARSU+CMMI7 uf/YBYPMX+CMMI7 uf/RQARST+CMMI10*1 uf/RQARST+CMMI10 uf/IEJBAA+CMMI10 uf/RQARSS+Mathematica2*1 uf/RQARSS+Mathematica2 uf/IKRBAA+Mathematica2 uf/RQARTH+CMR10*1 uf/RQARTH+CMR10 uf/GWZQMX+CMR10 uf/RQARTG+CMMI7*1 uf/RQARTG+CMMI7 uf/EDNAAA+CMMI7 uf/RQARTF+CMMI10*1 uf/RQARTF+CMMI10 uf/XSRAAA+CMMI10 uf/RQARTE+CMMI10*1 uf/RQARTE+CMMI10 uf/BUDBAA+CMMI10 uf/RQARSO+Mathematica3*1 uf/RQARSO+Mathematica3 uf/DZUBAA+Mathematica3 uf/RQARSN+Mathematica2*1 uf/RQARSN+Mathematica2 uf/KRBAAA+Mathematica2 uf/RQARSK+Times-Roman*1 uf/RQARSK+Times-Roman uf/RUDQMX+Times-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
